From o||verhooker @end|ng |rom pr@t@t|@t|c@@com  Thu Apr 10 18:00:21 2025
From: o||verhooker @end|ng |rom pr@t@t|@t|c@@com (Oliver Hooker)
Date: Thu, 10 Apr 2025 17:00:21 +0100
Subject: [R-sig-ME] Introduction To Mixed Models Using R And Rstudio (IMMR09)
Message-ID: <CAEsSYzyC_4NjvDF-G0+JrsMuRY6eViD0RypkwaNqEy3LYy8PAw@mail.gmail.com>

ONLINE COURSE ? Introduction To Mixed Models Using R And Rstudio (IMMR09)
https://www.prstats.org/course/introduction-to-mixed-models-using-r-and-rstudio-immr09/

27th - 29th May 2025

This course provides a comprehensive practical and theoretical
introduction to multilevel models, also known as hierarchical or mixed
effects models. We will focus primarily on multilevel linear models,
but also cover multilevel generalized linear models. Likewise, we will
also describe Bayesian approaches to multilevel modelling. We will
begin by focusing on random effects multilevel models. These models
make it clear how multilevel models are in fact models of models. In
addition, random effects models serve as a solid basis for
understanding mixed effects, i.e. fixed and random effects, models. In
this coverage of random effects, we will also cover the important
concepts of statistical shrinkage in the estimation of effects, as
well as intraclass correlation. We then proceed to cover linear mixed
effects models, particularly focusing on varying intercept and/or
varying slopes regression models. We will then cover further aspects
of linear mixed effects models, including multilevel models for nested
and crossed data data, and group level predictor variables. Towards
the end of the course we also cover generalized linear mixed models
(GLMMs), how to accommodate overdispersion through individual-level
random effects, as well as Bayesian approaches to multilevel levels
using the brms R package.

*Day 1*

Topic 1: Random effects models. The defining feature of multilevel models
is that they are models of models. We begin by using a binomial random
effects model to illustrate this. Specifically, we show how multilevel
models are models of the variability in models of different clusters or
groups of data.

Topic 2: Normal random effects models. Normal, as in normal distribution,
random effects models are the key to understanding the more general and
widely used linear mixed effects models. Here, we also cover the key
concepts of statistical shrinkage and intraclass correlation.

*Day 2*

Topic 3: Linear mixed effects models. Next, we turn to multilevel linear
models, also known as linear mixed effects models. We specifically deal
with the cases of varying intercept and/or varying slope linear regression
models.

Topic 4: Multilevel models for nested data. Here, we will consider
multilevel linear models for nested, as in groups of groups, data. As an
example, we will look at multilevel linear models applied to data from
students within classes that are themselves within different schools, and
where we model the variability of effects across the classes and across the
schools.

Topic 5: Multilevel models for crossed data. In some multilevel models,
each observation occurs in multiple groups, but these groups are not
nested. For example, animals may be members of different species and in
different locations, but the species are not subsets of locations, nor vice
versa. These are known as crossed or multiclass data structures.

*Day 3*

Topic 6: Group level predictors. In some multilevel regression models,
predictor variable are sometimes associated with individuals, and sometimes
associated with their groups. In this section, we consider how to handle
these two situations.

Topic 7: Generalized linear mixed models (GLMMs). Here, we extend the
linear mixed model to the exponential family of distributions and showcase
an example using the Poisson GLMM. We also cover how to accommodate
overdispersion through individual-level random effects.

Topic 8: Bayesian multilevel models. All of the models that we have
considered can be handled, often more easily, using Bayesian models. Here,
we provide an brief introduction to Bayesian models and how to perform
examples of the models that we have considered using Bayesian methods and
the brms R package.

Please email oliverhooker at prstatistics.com with any questions.

Please feel free to share among colleagues and friends


-- 
Oliver Hooker PhD.
PR stats

	[[alternative HTML version deleted]]


From ju||u@@o|@||@ @end|ng |rom ok@t@te@edu  Tue Apr 15 15:13:18 2025
From: ju||u@@o|@||@ @end|ng |rom ok@t@te@edu (Olaifa, Julius)
Date: Tue, 15 Apr 2025 13:13:18 +0000
Subject: [R-sig-ME] 
 Full Information matrix or Variance Covariance matrix in glmmTMB
In-Reply-To: <CO3PR03MB67583F07CDD4EB603D96D381EDA9A@CO3PR03MB6758.namprd03.prod.outlook.com>
References: <CO3PR03MB67583F07CDD4EB603D96D381EDA9A@CO3PR03MB6758.namprd03.prod.outlook.com>
Message-ID: <SJ2PR03MB7165958D489836311E0854F5EDB22@SJ2PR03MB7165.namprd03.prod.outlook.com>

I see that when we use vcov(m1, full = TRUE)), the entries corresponding to estimates of sigma(m1) are in the logarithm form. My question is are entries corresponding to the variance components in the natural scale or also on some different scale like the log cholesky scale?

Julius Olaifa
Graduate Research Assistant
Department of Computer Science
Oklahoma State University,
224 MSCS, Stillwater, OK 74078
________________________________
From: R-sig-mixed-models <r-sig-mixed-models-bounces at r-project.org> on behalf of Olaifa, Julius <julius.olaifa at okstate.edu>
Sent: Tuesday, November 7, 2023 9:46 PM
To: r-sig-mixed-models at r-project.org <r-sig-mixed-models at r-project.org>
Subject: [R-sig-ME] Full Information matrix or Variance Covariance matrix in glmmTMB

I am trying to obtain the Fisher Information matrix or variance covariance matrix for a glmmTMB model. The model implements model$sdr$cov.fixed?  which returns the variance covariance matrix between the regression parameter coefficient (Beta)?and the dispersiom parameter (phi).
I however want to obtain the variance covariance matrix of both the fixed parameters and random effect covariance estimates (Beta, phi, Sigma)?

        [[alternative HTML version deleted]]

_______________________________________________
R-sig-mixed-models at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models<https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models>

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Tue Apr 15 15:33:26 2025
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 15 Apr 2025 09:33:26 -0400
Subject: [R-sig-ME] 
 Full Information matrix or Variance Covariance matrix in glmmTMB
In-Reply-To: <SJ2PR03MB7165958D489836311E0854F5EDB22@SJ2PR03MB7165.namprd03.prod.outlook.com>
References: <CO3PR03MB67583F07CDD4EB603D96D381EDA9A@CO3PR03MB6758.namprd03.prod.outlook.com>
 <SJ2PR03MB7165958D489836311E0854F5EDB22@SJ2PR03MB7165.namprd03.prod.outlook.com>
Message-ID: <3af7b9c4-5f5e-4655-84bf-9875360f7eab@gmail.com>

   They are on the scale of the internal parameterization; these 
parameterizations are documented in the table at the beginning of the 
covariance-structure vignette, 
https://cran.r-project.org/web/packages/glmmTMB/vignettes/covstruct.html

   cheers
    Ben Bolker


On 2025-04-15 9:13 a.m., Olaifa, Julius wrote:
> I see that when we use vcov(m1, full = TRUE)), the entries corresponding to estimates of sigma(m1) are in the logarithm form. My question is are entries corresponding to the variance components in the natural scale or also on some different scale like the log cholesky scale?
> 
> Julius Olaifa
> Graduate Research Assistant
> Department of Computer Science
> Oklahoma State University,
> 224 MSCS, Stillwater, OK 74078
> ________________________________
> From: R-sig-mixed-models <r-sig-mixed-models-bounces at r-project.org> on behalf of Olaifa, Julius <julius.olaifa at okstate.edu>
> Sent: Tuesday, November 7, 2023 9:46 PM
> To: r-sig-mixed-models at r-project.org <r-sig-mixed-models at r-project.org>
> Subject: [R-sig-ME] Full Information matrix or Variance Covariance matrix in glmmTMB
> 
> I am trying to obtain the Fisher Information matrix or variance covariance matrix for a glmmTMB model. The model implements model$sdr$cov.fixed?  which returns the variance covariance matrix between the regression parameter coefficient (Beta)?and the dispersiom parameter (phi).
> I however want to obtain the variance covariance matrix of both the fixed parameters and random effect covariance estimates (Beta, phi, Sigma)?
> 
>          [[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-mixed-models at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models<https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models>
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-mixed-models at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From dmb@te@ @end|ng |rom gm@||@com  Mon Apr 28 17:30:41 2025
From: dmb@te@ @end|ng |rom gm@||@com (Douglas Bates)
Date: Mon, 28 Apr 2025 10:30:41 -0500
Subject: [R-sig-ME] Citations of our lme4 paper
Message-ID: <CAO7JsnRs93kO2iDM+7hdD=ND-Y7riTw3pJeodOi4z5KPaS+5Wg@mail.gmail.com>

Martin, Ben, Steve and I would like to thank all those who cited our 2015
J, Statist. Software paper on "Fitting Linear Mixed-Effects Models Using
lme4", https://www.jstatsoft.org/article/view/v067i01 when using lme4.

A recent paper in Nature, https://www.nature.com/articles/d41586-025-01125-9,
on "The Most Cited Papers of the Twenty-First Century" included our paper.
According to the spreadsheet in their supplemental materials it has a
median ranking of 14. (Different sources give different numbers of
citations, which is why they use the median ranking).  This has been an
unexpected honor and we are grateful for the support in this community.

	[[alternative HTML version deleted]]


From @pro @end|ng |rom un|me|b@edu@@u  Mon Apr 28 23:44:50 2025
From: @pro @end|ng |rom un|me|b@edu@@u (Andrew Robinson)
Date: Mon, 28 Apr 2025 21:44:50 +0000
Subject: [R-sig-ME] Citations of our lme4 paper
In-Reply-To: <CAO7JsnRs93kO2iDM+7hdD=ND-Y7riTw3pJeodOi4z5KPaS+5Wg@mail.gmail.com>
References: <CAO7JsnRs93kO2iDM+7hdD=ND-Y7riTw3pJeodOi4z5KPaS+5Wg@mail.gmail.com>
Message-ID: <1e4932d0-f516-4d49-886c-6535989e9d16@Spark>

Richly deserved, if I may say so.

Best wishes,

Andrew

--
Andrew Robinson
Chief Executive Officer, CEBRA and Professor of Biosecurity,
School/s of BioSciences and Mathematics & Statistics
University of Melbourne, VIC 3010 Australia
Tel: (+61) 0403 138 955
Email: apro at unimelb.edu.au
Website: https://researchers.ms.unimelb.edu.au/~apro at unimelb/

I acknowledge the Traditional Owners of the land I inhabit, and pay my respects to their Elders.
On 28 Apr 2025 at 11:31?PM +0800, Douglas Bates <dmbates at gmail.com>, wrote:
Martin, Ben, Steve and I would like to thank all those who cited our 2015
J, Statist. Software paper on "Fitting Linear Mixed-Effects Models Using
lme4", https://www.jstatsoft.org/article/view/v067i01 when using lme4.

A recent paper in Nature, https://www.nature.com/articles/d41586-025-01125-9,
on "The Most Cited Papers of the Twenty-First Century" included our paper.
According to the spreadsheet in their supplemental materials it has a
median ranking of 14. (Different sources give different numbers of
citations, which is why they use the median ranking). This has been an
unexpected honor and we are grateful for the support in this community.

[[alternative HTML version deleted]]

_______________________________________________
R-sig-mixed-models at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models


	[[alternative HTML version deleted]]


From ||on@@@c@r||@4 @end|ng |rom gm@||@com  Tue Apr 29 08:50:16 2025
From: ||on@@@c@r||@4 @end|ng |rom gm@||@com (Fiona Scarff)
Date: Tue, 29 Apr 2025 14:50:16 +0800
Subject: [R-sig-ME] Negative response values when simulating glmer with log
 link
Message-ID: <CAP=UNam4dSruTwRmJKyU1YoVKzMJ07DeNgoVdZZuL7ohdRVvzg@mail.gmail.com>

I have some data in which the response variable can only be a non-negative
number. I fitted a log normal glmm using the lme4 package, and simulated
from the model using simulate.merMod. A very small proportion of the
simulated values are slightly negative, and I would like to understand how
that is possible with a log link. I found a post in which Ben Bolker
observed that:
"Note that if you did simulate data with a log link and a Gaussian family,
you could still get negative values if the standard deviation were large
enough ..."
https://github.com/lme4/lme4/issues/530

I thought that the log link would force all the reponses to be
non-negative. It is not especially important in this particular case, but I
feel I have misunderstood something, either about the way that simulate()
works for mixed effects models, or perhaps something more fundamental about
how random effects work in a model with a non-identity link. Apologies
therefore if this question is misdirected and ought instead to go to
crossvalidated.

Many thanks for your help,
Fiona

*Dr Fiona Scarff*
*Harry Butler Institute*
*Murdoch University*

	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Tue Apr 29 16:44:36 2025
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Tue, 29 Apr 2025 10:44:36 -0400
Subject: [R-sig-ME] 
 Negative response values when simulating glmer with log link
In-Reply-To: <CAP=UNam4dSruTwRmJKyU1YoVKzMJ07DeNgoVdZZuL7ohdRVvzg@mail.gmail.com>
References: <CAP=UNam4dSruTwRmJKyU1YoVKzMJ07DeNgoVdZZuL7ohdRVvzg@mail.gmail.com>
Message-ID: <fb88707c-fba3-4e83-87a2-95960d3a9a16@gmail.com>

    (I never answered the question on the lme4 issues list: I will 
answer here, and copy the information to the issues list.)

    There are two ways one might define a "log normal GLMM": (1) with a 
transformation

    eta = a + b*x + ...  (linear predictor)
    log(y) ~ Normal(eta, sigma^2)

or (2) with a link function:

    eta = a + b*x + ... (same as above)
    y ~ Normal(exp(eta), sigma^2)

These look almost identical, but are quite different.

   The first case is equivalent to

   Y ~ log-Normal(meanlog = eta, meansd = sigma)

[using R's parameterization based on the mean and standard deviation *on 
the log scale*].  In this case:

   * simulated values of log(y) can be any real number, but y = 
exp(log(y)) will always be positive (possibly zero due to floating point 
underflow in extreme cases
   * the standard deviation of Y is proportional to its mean (== the 
coefficient of variation is constant)

   In the second case,

   * simulated values of y can be any real number: could easily be 
negative, for example, if exp(eta) is close to zero and sigma is not too 
small
   * the standard deviation of Y is constant

   Although there are use cases for both models, I would say that case 1 
(transformation) is generally a more natural way to model positive, 
continuous data.

   Does that help?



On 2025-04-29 2:50 a.m., Fiona Scarff wrote:
> I have some data in which the response variable can only be a non-negative
> number. I fitted a log normal glmm using the lme4 package, and simulated
> from the model using simulate.merMod. A very small proportion of the
> simulated values are slightly negative, and I would like to understand how
> that is possible with a log link. I found a post in which Ben Bolker
> observed that:
> "Note that if you did simulate data with a log link and a Gaussian family,
> you could still get negative values if the standard deviation were large
> enough ..."
> https://github.com/lme4/lme4/issues/530
> 
> I thought that the log link would force all the reponses to be
> non-negative. It is not especially important in this particular case, but I
> feel I have misunderstood something, either about the way that simulate()
> works for mixed effects models, or perhaps something more fundamental about
> how random effects work in a model with a non-identity link. Apologies
> therefore if this question is misdirected and ought instead to go to
> crossvalidated.
> 
> Many thanks for your help,
> Fiona
> 
> *Dr Fiona Scarff*
> *Harry Butler Institute*
> *Murdoch University*
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-mixed-models at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From o||verhooker @end|ng |rom pr@t@t|@t|c@@com  Fri May  2 21:36:20 2025
From: o||verhooker @end|ng |rom pr@t@t|@t|c@@com (Oliver Hooker)
Date: Fri, 2 May 2025 20:36:20 +0100
Subject: [R-sig-ME] =?utf-8?q?Master_Mixed_Models_=E2=80=93_Essential_Too?=
	=?utf-8?q?ls_for_Complex_Biological_Data?=
Message-ID: <CAEsSYzwMXGxhMaDQKjvNtp=FWaScEn9g_CAGSdgdQQGQ0QAWhw@mail.gmail.com>

*Master Mixed Models ? Essential Tools for Complex Biological Data*

Working with repeated or hierarchical data? This course is for you.

Join our practical course: *Introduction to Mixed Models Using R and
RStudio
<https://www.prstats.org/course/introduction-to-mixed-models-using-r-and-rstudio-immr09/>*

*Course dates:* 27th May 2025

*Location:* Online Live Course

Biological and ecological data often involve nested or repeated
measurements that require more flexible statistical approaches. This course
gives you the tools to analyse such data using linear mixed-effects models
in R.

Led by experienced instructors, you?ll learn:

   -

   How and when to use mixed models
   -

   The structure and interpretation of random effects
   -

   Fitting models using lme4 and other R packages
   -

   Dealing with nested, grouped, and repeated measures
   -

   Visualising and reporting mixed model results

*Who should attend?*

Researchers in biology, ecology, and related fields who already use R and
need to handle complex or hierarchical data.

*Why join us?*

Get a strong grounding in mixed model theory and its real-world
application?backed by hands-on coding, small group sessions, and biological
datasets.

*Spaces are limited ? reserve your spot today.*

? View full course details and register now
<https://www.prstats.org/course/introduction-to-mixed-models-using-r-and-rstudio-immr09/>


-- 
Oliver Hooker PhD.
PR stats

	[[alternative HTML version deleted]]


From h|gh@t@t @end|ng |rom h|gh@t@t@com  Fri May  9 11:08:33 2025
From: h|gh@t@t @end|ng |rom h|gh@t@t@com (Alain Zuur)
Date: Fri, 9 May 2025 10:08:33 +0100
Subject: [R-sig-ME] Online Course: Generalised Linear Mixed-Effects Models
Message-ID: <155a6953-417d-4eea-8b0e-f7c5758c9bfc@highstat.com>

*Online Course*: Generalised Linear Mixed-Effects Models (GLMMs)
*Dates*: 19?23 May 2025
*Format*: Live online via Zoom
*Times*: 08:30?15:30 (Norwegian time)
*Fee*: ?500 (50% discount for participants from developing countries)
*Flyer*: https://www.highstat.com/Courses/Flyers/Flyer2025_05_IMR_GLMM.pdf

Join us for a practical, hands-on introduction to GLMMs?ideal for 
analysing ecological and fisheries data with hierarchical or clustered 
structure. We begin with linear regression and data exploration, then 
move into mixed-effects models and GLMMs for count, binary, 
proportional, and continuous data (with or without zeros). Topics 
include model diagnostics, overdispersion, zero-inflation, and 
visualisation using a wide range of distributions (Poisson, negative 
binomial, binomial, beta, gamma, Tweedie, and more). Around 15 
real-world exercises (with on-demand video) are included.


*Bonus*: The course includes a 1-hour personal consultation with the 
instructors to discuss your own data.

*Provided by*: Highland Statistics Ltd.

Kind regards,

Alain Zuur

www.highstat.com




	[[alternative HTML version deleted]]


From @o|ed@d@e@teb@n @end|ng |rom tr@n@m|tt|ng@c|ence@com  Wed Jun 11 08:55:14 2025
From: @o|ed@d@e@teb@n @end|ng |rom tr@n@m|tt|ng@c|ence@com (Soledad De Esteban-Trivigno)
Date: Wed, 11 Jun 2025 06:55:14 +0000
Subject: [R-sig-ME] Online course: Generalised Additive Mixed Models (GAMM)
 with R, July 2025
In-Reply-To: <10663fbeeab6f663605a056756653fa9@transmittingscience.com>
References: <648fdb0cf93477f394b82d6a99897ceb@transmittingscience.com>
 <4361b3acc42b45db9e69d22cd2b40439@transmittingscience.com>
 <741199f845132c62604f0d88a83fc9a5@transmittingscience.com>
 <b97a4c4ff43ae6f741695b7a72afb342@transmittingscience.com>
 <ebd1f8932b6507dd4c784a72ff1c0a76@transmittingscience.com>
 <1b5cb121733311f8295da91607a9f2e8@transmittingscience.com>
 <ff36ffe927d60cee1b02a869abd28457@transmittingscience.com>
 <52c24925c0622ba2737b9b3fc30015f8@transmittingscience.com>
 <fafc0c2fc086bce2c740d62cee89c2b8@transmittingscience.com>
 <859e0ace74acac18fb00adfd13391ac6@transmittingscience.com>
 <bc4a03637b86c676d5b5fa7628fda08e@transmittingscience.com>
 <34d2ed44470bed63c3bc4a8b8ab95256@transmittingscience.com>
 <ee9f7bcaf6be3c6a3da4baf714d00951@transmittingscience.com>
 <4a2fba1cc4bb8232bde130e2cb5adbb6@transmittingscience.com>
 <17c45eb0cfa9b0a480beb23ae1b964e6@transmittingscience.com>
 <eff16e5a6fd6b03d5917c8eb9fab8394@transmittingscience.com>
 <3d4c8b672678b1e568f9d8e0d0ca0591@transmittingscience.com>
 <c2ccbb8c99fc87310566efd6a2f5ad1b@transmittingscience.com>
 <69757ee397d11bc1089416287a7f765f@transmittingscience.com>
 <4ca4909f1ca6a82fbff4e738ba5e0967@transmittingscience.com>
 <35404c718c3b25041dd04e70e8efc78a@transmittingscience.com>
 <ffc40a86e3e70b2128e6c25a393dae53@transmittingscience.com>
 <7b11bf8b68463c9fba8b8d724a6f678b@transmittingscience.com>
 <10663fbeeab6f663605a056756653fa9@transmittingscience.com>
Message-ID: <323503a0e138b1ce2dfccade019193b1@transmittingscience.com>

Dear colleagues,

Transmitting Science has opened registration for the course "Generalised 
Additive Mixed Models (GAMM): modelling space-time correlation 
structures".

Dates and schedule: July 21st, 23rd, and 25th, 2025. From 09:30 to 13:30 
(Madrid time zone).

Course webpage: 
https://www.transmittingscience.com/courses/statistics-and-bioinformatics/generalised-additive-mixed-models-modelling-space-time-correlation-structures/

Programme:

Module I. Spatial and Temporal Autocorrelation

  	* Definition of spatial and temporal autocorrelation
  	* Tools for the detection of spatial and temporal autocorrelation
  	* GAM Models
  	* Theory of Additive Models (AM) and Generalized Additive Models (GAM)
  	* Simple GAM Model
  	* Fitting and Validation of a simple GAM model (bivariate)
  	* Multiple GAM Models (multivariable)
  	* Fitting and Validation of a multiple GAM model
  	* Multiple GAM for count data with an offset

Module II. Mixed Models and GAMMs

  	* Introduction to Mixed Effects Models
  	* Fitting GAM Model and Independence Validation
  	* Fitting and validation of GAMM 1 Model
  	* GAMM with temporal autocorrelation structure
  	* Fitting and validation of GAMM 2 Model
  	* GAMM with space-temporal structure
  	* Resolution of specific work doubts

If you have further inquiries, do not hesitate to write to 
courses at transmittingscience.com

With best regards

Sole

-- 
Soledad De Esteban-Trivigno, PhD
Director
Transmitting Science
www.transmittingscience.com/courses

Bluesky @soledeesteban.bsky.social
X @SoleDeEsteban
Orcid: https://orcid.org/0000-0002-2049-0890
	[[alternative HTML version deleted]]


From jphughe@ @end|ng |rom uw@edu  Fri Jun 13 23:52:01 2025
From: jphughe@ @end|ng |rom uw@edu (Jim Hughes)
Date: Fri, 13 Jun 2025 21:52:01 +0000
Subject: [R-sig-ME] evaluating fixed effects variance-covariance matrix at
 specified values of theta
Message-ID: <MW4PR08MB8282D742011080F688294E7EBC77A@MW4PR08MB8282.namprd08.prod.outlook.com>

Hello

I would like to compute the first derivative of (a simple function of) the fixed effects variance-covariance matrix from a g/lmer model with respect to the random effects parameters (the theta's), evaluated at \hat{theta}. [Note: the function of the variance-covariance matrix I am interested in will produce a scalar, ie t(lvec)%*%vcov(obj)%*%lvec where lvec is a p x 1 matrix of constants]. I was wondering if there is a way to modify the approach outlined in a previous post by Ben Bolker:

>> fm1 <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy)
>> fm1Fun <- update(fm1,devFunOnly=TRUE)
>> library(numDeriv)
>> fm1_thpar <- getME(fm1,"theta")
>> h <- hessian(fm1Fun,fm1_thpar)
>>
>>  and similarly for the gradient.

In this case fm1Fun is a function that computes the deviance (as a function of the theta parameters) so calls to hessian and grad produce the second and first derivatives of the deviance, respectively, with respect to the theta parameters. I would like a function
that essentially computes vcov(fm1) as a function of the theta parameters.

I did try the following:

  fm1Fun = function(newtheta,obj,lvec) {
    beta=fixef(obj)
    dat=model.frame(obj)
    fam=family(obj)
    form=formula(obj)
    newobj = suppressWarnings(glmer(formula=form,family=fam,data=dat,start=list(theta=newtheta,fixef=beta),
                                                                              control=glmerControl(optCtrl=list(maxfun=1))))
    as.numeric(t(lvec)%*%vcov(newobj)%*%lvec)
  }
#
  library(numDeriv)
  rslt = glmer(response.var ~ ftime + ftimeOnTx + (1 | fcluster), family=binomial, data=sdat)
lvec = matrix(c(0,0,0,0,1/3,1/3,1/3),7,1)
  theta = getME(rslt,"theta")
  g = grad(fm1Fun,theta,obj=rslt,lvec=lvec)

My thought was that the glmer call in fm1Fun would evaluate everything at the starting values I provided and then stop, but I don't know for sure if that is what happens when you specify maxfun=1?

Any thoughts or suggestions?

Jim
--------------
Jim Hughes



	[[alternative HTML version deleted]]


From bbo|ker @end|ng |rom gm@||@com  Sat Jun 14 01:46:51 2025
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Fri, 13 Jun 2025 19:46:51 -0400
Subject: [R-sig-ME] 
 evaluating fixed effects variance-covariance matrix at
 specified values of theta
In-Reply-To: <MW4PR08MB8282D742011080F688294E7EBC77A@MW4PR08MB8282.namprd08.prod.outlook.com>
References: <MW4PR08MB8282D742011080F688294E7EBC77A@MW4PR08MB8282.namprd08.prod.outlook.com>
Message-ID: <0122af1f-1a0a-4730-b74b-fe575703499b@gmail.com>

   This seems reasonable at first glance.

   A  few details:

*  you might want to shut off gradient/Hessian computations by 
specifying checkConv = FALSE
* whether maxfun or some other control parameter is appropriate depends 
(sigh) on which optimizer is being used. Both Nelder-Mead and bobyqa 
(the default setting is c("bobyqa", "Nelder_Mead"), meaning that 
"bobyqa" is used for a first-stage optimization and Nelder-Mead for the 
second.  I might consider setting nAGQ0initStep = FALSE and 
optimizer="bobyqa" (skip the first optimization phase, use bobyqa for 
the second)
* a slightly more compact form of the function (the only caveat is that 
update() can occasionally get messed up if you create data, objects, 
etc. in enough different disconnected environments, as it relies on 
re-evaluating the original function call ...)


ctrl <- glmerControl(optCtrl = list(maxfun = 1),
                      nAGQ0initStep = FALSE, checkConv = FALSE,
                      optimizer = "bobyqa")
fm1Fun = function(newtheta,obj,lvec) {
    beta <- fixef(obj)
    newobj <- update(obj, control = ctrl,
        start=list(theta=newtheta,fixef=beta))
    as.numeric(t(lvec)%*%vcov(newobj)%*%lvec)
}

   It probably doesn't matter, but emulator::quad.tform offers a 
slightly more efficient way to compute the quadratic form (it's also a 
one-liner, so you can copy it if you don't want to depend on the package)

   cheers
    Ben Bolker





On 2025-06-13 5:52 p.m., Jim Hughes wrote:
> Hello
> 
> I would like to compute the first derivative of (a simple function of) the fixed effects variance-covariance matrix from a g/lmer model with respect to the random effects parameters (the theta's), evaluated at \hat{theta}. [Note: the function of the variance-covariance matrix I am interested in will produce a scalar, ie t(lvec)%*%vcov(obj)%*%lvec where lvec is a p x 1 matrix of constants]. I was wondering if there is a way to modify the approach outlined in a previous post by Ben Bolker:
> 
>>> fm1 <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy)
>>> fm1Fun <- update(fm1,devFunOnly=TRUE)
>>> library(numDeriv)
>>> fm1_thpar <- getME(fm1,"theta")
>>> h <- hessian(fm1Fun,fm1_thpar)
>>>
>>>   and similarly for the gradient.
> 
> In this case fm1Fun is a function that computes the deviance (as a function of the theta parameters) so calls to hessian and grad produce the second and first derivatives of the deviance, respectively, with respect to the theta parameters. I would like a function
> that essentially computes vcov(fm1) as a function of the theta parameters.
> 
> I did try the following:
> 
>    fm1Fun = function(newtheta,obj,lvec) {
>      beta=fixef(obj)
>      dat=model.frame(obj)
>      fam=family(obj)
>      form=formula(obj)
>      newobj = suppressWarnings(glmer(formula=form,family=fam,data=dat,start=list(theta=newtheta,fixef=beta),
>                                                                                control=glmerControl(optCtrl=list(maxfun=1))))
>      as.numeric(t(lvec)%*%vcov(newobj)%*%lvec)
>    }
> #
>    library(numDeriv)
>    rslt = glmer(response.var ~ ftime + ftimeOnTx + (1 | fcluster), family=binomial, data=sdat)
> lvec = matrix(c(0,0,0,0,1/3,1/3,1/3),7,1)
>    theta = getME(rslt,"theta")
>    g = grad(fm1Fun,theta,obj=rslt,lvec=lvec)
> 
> My thought was that the glmer call in fm1Fun would evaluate everything at the starting values I provided and then stop, but I don't know for sure if that is what happens when you specify maxfun=1?
> 
> Any thoughts or suggestions?
> 
> Jim
> --------------
> Jim Hughes
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-mixed-models at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From jphughe@ @end|ng |rom uw@edu  Sun Jun 15 01:17:23 2025
From: jphughe@ @end|ng |rom uw@edu (Jim Hughes)
Date: Sat, 14 Jun 2025 23:17:23 +0000
Subject: [R-sig-ME] 
 evaluating fixed effects variance-covariance matrix at
 specified values of theta
In-Reply-To: <0122af1f-1a0a-4730-b74b-fe575703499b@gmail.com>
References: <MW4PR08MB8282D742011080F688294E7EBC77A@MW4PR08MB8282.namprd08.prod.outlook.com>
 <0122af1f-1a0a-4730-b74b-fe575703499b@gmail.com>
Message-ID: <MW4PR08MB82824D6E832A6FB12662014DBC76A@MW4PR08MB8282.namprd08.prod.outlook.com>

Thank you ... I like that you were about to use update to do this!

Jim
--------------
Jim Hughes


-----Original Message-----
From: R-sig-mixed-models <r-sig-mixed-models-bounces at r-project.org> On Behalf Of Ben Bolker
Sent: Friday, June 13, 2025 4:47 PM
To: r-sig-mixed-models at r-project.org
Subject: Re: [R-sig-ME] evaluating fixed effects variance-covariance matrix at specified values of theta

   This seems reasonable at first glance.

   A  few details:

*  you might want to shut off gradient/Hessian computations by specifying checkConv = FALSE
* whether maxfun or some other control parameter is appropriate depends
(sigh) on which optimizer is being used. Both Nelder-Mead and bobyqa (the default setting is c("bobyqa", "Nelder_Mead"), meaning that "bobyqa" is used for a first-stage optimization and Nelder-Mead for the second.  I might consider setting nAGQ0initStep = FALSE and optimizer="bobyqa" (skip the first optimization phase, use bobyqa for the second)
* a slightly more compact form of the function (the only caveat is that
update() can occasionally get messed up if you create data, objects, etc. in enough different disconnected environments, as it relies on re-evaluating the original function call ...)


ctrl <- glmerControl(optCtrl = list(maxfun = 1),
                      nAGQ0initStep = FALSE, checkConv = FALSE,
                      optimizer = "bobyqa") fm1Fun = function(newtheta,obj,lvec) {
    beta <- fixef(obj)
    newobj <- update(obj, control = ctrl,
        start=list(theta=newtheta,fixef=beta))
    as.numeric(t(lvec)%*%vcov(newobj)%*%lvec)
}

   It probably doesn't matter, but emulator::quad.tform offers a slightly more efficient way to compute the quadratic form (it's also a one-liner, so you can copy it if you don't want to depend on the package)

   cheers
    Ben Bolker





On 2025-06-13 5:52 p.m., Jim Hughes wrote:
> Hello
> 
> I would like to compute the first derivative of (a simple function of) the fixed effects variance-covariance matrix from a g/lmer model with respect to the random effects parameters (the theta's), evaluated at \hat{theta}. [Note: the function of the variance-covariance matrix I am interested in will produce a scalar, ie t(lvec)%*%vcov(obj)%*%lvec where lvec is a p x 1 matrix of constants]. I was wondering if there is a way to modify the approach outlined in a previous post by Ben Bolker:
> 
>>> fm1 <- lmer(Reaction ~ Days + (Days|Subject), sleepstudy) fm1Fun <- 
>>> update(fm1,devFunOnly=TRUE)
>>> library(numDeriv)
>>> fm1_thpar <- getME(fm1,"theta")
>>> h <- hessian(fm1Fun,fm1_thpar)
>>>
>>>   and similarly for the gradient.
> 
> In this case fm1Fun is a function that computes the deviance (as a 
> function of the theta parameters) so calls to hessian and grad produce the second and first derivatives of the deviance, respectively, with respect to the theta parameters. I would like a function that essentially computes vcov(fm1) as a function of the theta parameters.
> 
> I did try the following:
> 
>    fm1Fun = function(newtheta,obj,lvec) {
>      beta=fixef(obj)
>      dat=model.frame(obj)
>      fam=family(obj)
>      form=formula(obj)
>      newobj = suppressWarnings(glmer(formula=form,family=fam,data=dat,start=list(theta=newtheta,fixef=beta),
>                                                                                control=glmerControl(optCtrl=list(maxfun=1))))
>      as.numeric(t(lvec)%*%vcov(newobj)%*%lvec)
>    }
> #
>    library(numDeriv)
>    rslt = glmer(response.var ~ ftime + ftimeOnTx + (1 | fcluster), 
> family=binomial, data=sdat) lvec = matrix(c(0,0,0,0,1/3,1/3,1/3),7,1)
>    theta = getME(rslt,"theta")
>    g = grad(fm1Fun,theta,obj=rslt,lvec=lvec)
> 
> My thought was that the glmer call in fm1Fun would evaluate everything at the starting values I provided and then stop, but I don't know for sure if that is what happens when you specify maxfun=1?
> 
> Any thoughts or suggestions?
> 
> Jim
> --------------
> Jim Hughes
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-sig-mixed-models at r-project.org mailing list 
> https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-si
> g-mixed-models__;!!K-Hz7m0Vt54!iuIQhaS-yBaHD-1S8rzX92WgHLHwpbaY8xtfjaa
> uCCWdlOF5tM09ZrM4T6CuMpnPFdt6Z7H1gs8A0k8$

--
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University Director, School of Computational Science and Engineering  > E-mail is sent at my convenience; I don't expect replies outside of working hours.

_______________________________________________
R-sig-mixed-models at r-project.org mailing list https://urldefense.com/v3/__https://stat.ethz.ch/mailman/listinfo/r-sig-mixed-models__;!!K-Hz7m0Vt54!iuIQhaS-yBaHD-1S8rzX92WgHLHwpbaY8xtfjaauCCWdlOF5tM09ZrM4T6CuMpnPFdt6Z7H1gs8A0k8$ 


