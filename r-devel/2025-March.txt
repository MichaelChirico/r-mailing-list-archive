From ||u|@@rev|||@ @end|ng |rom gm@||@com  Sat Mar  1 13:07:24 2025
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Sat, 1 Mar 2025 13:07:24 +0100
Subject: [Rd] write_PACKAGES's fields default
Message-ID: <CAN+W6_uyiPFrxZY+1jpZfWr2OuyB8GjZWGasyKe3-0=Uj2R3iQ@mail.gmail.com>

Dear list,

I'm trying to get some details from repositories with
available.packages. However, despite being included on the DESCRIPTION
files they are not available.

ap <- utils::available.packages(fields = "Additional_repositories",
    filters = c("CRAN", "duplicates"),
    ignore_repo_cache =  TRUE,
    repos = "https://cran.r-project.org")
ap[, "Additional_repositories"] |> is.na() |> all()
## [1] TRUE

However, some packages like Seurat have the Additional_repositories
field [2]. If I try with another repository (Bioconductor software
repository):

ap <- available.packages(fields = "biocViews",
    ignore_repo_cache =  TRUE,
    repos = "https://bioconductor.org/packages/3.21/bioc")
ap[, "biocViews"] |> is.na() |> all()
## [1] TRUE

It also misses the BiocViews field compulsory on that repository.
Both repositories use tools::write_PACKAGES [3][4] to generate the
file read by available.packages. This function writes by default
fields "needed by available.packages".

However, it is unclear what is needed for available.packages.
According to its documentation, it returns "details corresponding to
packages currently available at one or more repositories". To me this
would mean that fields on the DESCRIPTION files should appear, but the
default of write_PACKAGES doesn't write other fields besides
'"Package"', '"Version"', '"Priority"',  '"Depends"', '"Imports"',
'"LinkingTo"', '"Suggests"', '"Enhances"', '"OS_type"', '"License"'
and '"Archs"'.

I could approach each repository and ask to include more fields.
However, to match the documentation on available.packages and help all
repository administrators it would make sense to change the default on
write_PACKAGES.
Could the default fields be changed, so
that all fields available on packages' DESCRIPTION to
PACKAGES(.gz,.rds). Perhaps with fields = TRUE?
If this is too much it would be great if fields documented by Writing
R Extensions are written on PACKAGES.
This modification would make it easier for all to reuse repository data.

Many thanks for your consideration,

Llu?s

PD: From CRAN perspective CRAN_packages_db() function can be used to
get Additional_repositories, but this is limited to CRAN and won't
work for BiocViews on Bioconductor or for other arbitrary fields like
'"RoxygenNote"'.

[1]: https://stat.ethz.ch/pipermail/r-devel/2024-June/083477.html
[2]: https://cran.r-project.org/package=Seurat
[3]: https://svn.r-project.org/R-dev-web/trunk/CRAN/QA/Uwe/make/writeCRANPackages.R
[4]: https://github.com/Bioconductor/BBS/blob/devel/utils/makePropagationStatusDb.R#L348


From mo@@@ @end|ng |rom @und@ku@dk  Sat Mar  1 20:45:45 2025
From: mo@@@ @end|ng |rom @und@ku@dk (Mossa Merhi Reimert)
Date: Sat, 1 Mar 2025 19:45:45 +0000
Subject: [Rd] R CMD check and CRAN's Rust policy
Message-ID: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>

Hello everyone!

I'm Mossa, I'm one of the maintainers of extendr, an automated generation of bindings project for
Rust code, for use in R-packages.

I'm writing to you, as R 4.4.3 was just released, and there have not been
follow-up on an issue important to us. Link to the issue as discussed on r-devel
https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html

A community member has provided a suggestion to a patch here https://github.com/r-devel/r-svn/pull/182, and we have also attempted to bring it up on
Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806

TLDR: Default `R CMD check` uses additional CRAN-specific checks for Rust,
instead of keeping this behind the --as-cran flag.

I would like to say, that there is a growing interest in Rust within the R community.
And generally, Rust becoming a widely adopted language within the Python community (including the scientific part of that community). It is time to deal with the
pain points with using Rust in R.

Therefore, I would kindly ask that we have a dialogue on how to remedy the issue above first, and how we may deal with other issues going forward. There are both challenges embedded in R itself, and the current CRAN policy for Rust is prohibitive.



Mossa Merhi Reimert
Postdoctoral Researcher

K?benhavns Universitet
Department of Veterinary and Animal Sciences
Animal Welfare and Disease Control
Gr?nneg?rdsvej 8
1870 Frederiksberg C
Denmark

+45 35324135
mossa at sund.ku.dk<mailto:mossa at sund.ku.dk>


	[[alternative HTML version deleted]]


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Mar  2 00:39:31 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Sun, 2 Mar 2025 12:39:31 +1300
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
Message-ID: <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>

Mossa,

the issue you cite is lacking any pertinent information and it's not even clear why it should be an issue. The check is perfectly justified, it just reports whether a package using rust declares this correctly and where it downloads 3rd party content - something that is important to R users in general and not related to CRAN. I don't see how any of this is "prohibitive" it just calls out what the package is already doing.

As discussed before, my hope was that the "R"ust community will mature enough to work on proper support. It is not clear that it happened yet, but once it does it would make sense to talk about support just as we have for C, C++ and Java, so certainly that should be the right discussion. However, it will have to start with some thinking and a proposal on how the associated issues (compiler support, versioning, dependency sources etc.) are to be addressed, as opposed to making random demands. All this has nothing to do with CRAN so the issue you mention seems irrelevant to the progress. Also I'd like to know what are the "challenges embedded in R itself".

Cheers,
Simon


> On Mar 2, 2025, at 8:45 AM, Mossa Merhi Reimert via R-devel <r-devel at r-project.org> wrote:
> 
> Hello everyone!
> 
> I'm Mossa, I'm one of the maintainers of extendr, an automated generation of bindings project for
> Rust code, for use in R-packages.
> 
> I'm writing to you, as R 4.4.3 was just released, and there have not been
> follow-up on an issue important to us. Link to the issue as discussed on r-devel
> https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
> 
> A community member has provided a suggestion to a patch here https://github.com/r-devel/r-svn/pull/182, and we have also attempted to bring it up on
> Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806
> 
> TLDR: Default `R CMD check` uses additional CRAN-specific checks for Rust,
> instead of keeping this behind the --as-cran flag.
> 
> I would like to say, that there is a growing interest in Rust within the R community.
> And generally, Rust becoming a widely adopted language within the Python community (including the scientific part of that community). It is time to deal with the
> pain points with using Rust in R.
> 
> Therefore, I would kindly ask that we have a dialogue on how to remedy the issue above first, and how we may deal with other issues going forward. There are both challenges embedded in R itself, and the current CRAN policy for Rust is prohibitive.
> 
> 
> 
> Mossa Merhi Reimert
> Postdoctoral Researcher
> 
> K?benhavns Universitet
> Department of Veterinary and Animal Sciences
> Animal Welfare and Disease Control
> Gr?nneg?rdsvej 8
> 1870 Frederiksberg C
> Denmark
> 
> +45 35324135
> mossa at sund.ku.dk<mailto:mossa at sund.ku.dk>
> 
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From mo@@@ @end|ng |rom @und@ku@dk  Sun Mar  2 11:45:41 2025
From: mo@@@ @end|ng |rom @und@ku@dk (Mossa Merhi Reimert)
Date: Sun, 2 Mar 2025 10:45:41 +0000
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>,
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
Message-ID: <32ad0520e7784407b08ad105304b714b@sund.ku.dk>

Dear Simon Urbanek,

There has been very little engagement with the issue I referred to. If it was decided that this ?check? ought to be part of the default checks for R,
then that could have been written to us. Either on the bugs.r-project.org or the proposed patch. Before we talk about anything else,
it does seem very strange that we cannot get a reasonable dialogue going.

I would like to say that the R/Rust community has grown substantially. From my end, there are 3 bindings project, extendr, savvy, and roxido.
Then, there are now many rust-based packages on CRAN, see this most recent compiled list https://github.com/nanxstats/r-rust-pkgs.
There is also proof-of-concept https://github.com/r-rust/hellorust that integrates `cargo`, rust?s official build system, with R?s package build system,
and https://github.com/extendr/hellorustc, which showcases how Rust compiler could be directly linked with R?s package system.

 Let me say, that the current R CMD check is not meant to be ?helpful?. When a package is built, `cargo` tells the user ?Downloading crates?.
Thus, this information is already conveyed to the user.

Personally, I do wish we could debate this requirement further. I do not believe that having R-packages on CRAN vendor rust dependencies
as a good policy. Download statistics is a success metric of a given r-package and rust packages. By insisting on vendoring, and thus
side-stepping `cargo` / crates.io, we are robbing upstream authors of their download-numbers. I do not think such policy is honourable.

While C/C++ do not have official package repositories, it could be thought of, as fair game, to have CRAN act as a pseudo package manager for C/C++ libraries.
I?m not going to argue for or against this part.

There are many objections from the CRAN side to all things related to Rust. I don?t want to open multiple topics in the same thread.
But there is plenty to bring up. And I had hoped we could talk this little issue through, before embarking on a larger discussion.
I do not appreciate the ?random demands? comment, as this is not a demand, nor is it random.
I have inquired my end of the community for suggestions
to compile a larger proposal, but then I was afraid that this would be perceived as a big, bulky demand.

Rust is not C/C++/Java, and the support for Rust cannot look like the support for these languages.



From: Simon Urbanek <simon.urbanek at R-project.org>
Date: Sunday, 2 March 2025 at 00.39
To: Mossa Merhi Reimert <mossa at sund.ku.dk>
Cc: r-devel at r-project.org <r-devel at r-project.org>
Subject: Re: [Rd] R CMD check and CRAN's Rust policy
[Du f?r ikke ofte mails fra simon.urbanek at r-project.org. F? mere at vide om, hvorfor dette er vigtigt, p? https://aka.ms/LearnAboutSenderIdentification ]

Mossa,

the issue you cite is lacking any pertinent information and it's not even clear why it should be an issue. The check is perfectly justified, it just reports whether a package using rust declares this correctly and where it downloads 3rd party content - something that is important to R users in general and not related to CRAN. I don't see how any of this is "prohibitive" it just calls out what the package is already doing.

As discussed before, my hope was that the "R"ust community will mature enough to work on proper support. It is not clear that it happened yet, but once it does it would make sense to talk about support just as we have for C, C++ and Java, so certainly that should be the right discussion. However, it will have to start with some thinking and a proposal on how the associated issues (compiler support, versioning, dependency sources etc.) are to be addressed, as opposed to making random demands. All this has nothing to do with CRAN so the issue you mention seems irrelevant to the progress. Also I'd like to know what are the "challenges embedded in R itself".

Cheers,
Simon


> On Mar 2, 2025, at 8:45 AM, Mossa Merhi Reimert via R-devel <r-devel at r-project.org> wrote:
>
> Hello everyone!
>
> I'm Mossa, I'm one of the maintainers of extendr, an automated generation of bindings project for
> Rust code, for use in R-packages.
>
> I'm writing to you, as R 4.4.3 was just released, and there have not been
> follow-up on an issue important to us. Link to the issue as discussed on r-devel
> https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
>
> A community member has provided a suggestion to a patch here https://github.com/r-devel/r-svn/pull/182, and we have also attempted to bring it up on
> Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806
>
> TLDR: Default `R CMD check` uses additional CRAN-specific checks for Rust,
> instead of keeping this behind the --as-cran flag.
>
> I would like to say, that there is a growing interest in Rust within the R community.
> And generally, Rust becoming a widely adopted language within the Python community (including the scientific part of that community). It is time to deal with the
> pain points with using Rust in R.
>
> Therefore, I would kindly ask that we have a dialogue on how to remedy the issue above first, and how we may deal with other issues going forward. There are both challenges embedded in R itself, and the current CRAN policy for Rust is prohibitive.
>
>
>
> Mossa Merhi Reimert
> Postdoctoral Researcher
>
> K?benhavns Universitet
> Department of Veterinary and Animal Sciences
> Animal Welfare and Disease Control
> Gr?nneg?rdsvej 8
> 1870 Frederiksberg C
> Denmark
>
> +45 35324135
> mossa at sund.ku.dk<mailto:mossa at sund.ku.dk>
>
>
>       [[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Mar  2 15:49:02 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 2 Mar 2025 09:49:02 -0500
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
Message-ID: <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>

You seem to be taking a confontational tone, which isn't likely to 
encourage a reasonable dialogue.

I've looked for other messages on this, and didn't see any besides this 
one explaining why including check_rust() in the checks is a problem. 
The problem you talk about here is that it encourages vendoring, which 
makes it harder for package authors to count downloads.

To be honest, that doesn't seem like a very serious problem.  I assume 
the packages ("crates") we are talking about are open source, so this is 
entirely in the spirit of how they are allowed to be distributed.

If they aren't open source, then users of those packages should be 
warned about that, and a check failure is a good way to do that.

So you need to explain why it is important to be able to download and 
install software and not be warned about it.

I am not in R Core or CRAN, but I can suggest why it is better to 
include source in the package:  it makes the use of that package more 
reliable in the future.  It's not uncommon to run an R computation that 
was written a few years ago.  Sometimes libraries or R have changed, and 
a user will need to go back to a previous version to reproduce the 
calculation.  Being able to able to rebuild a system as it would have 
been back then is important.

Is that possible if the package needs to make a download?  The download 
site that worked a few years ago may no longer exist.  If the site 
exists, the code versions there may be different.

Those are some of the issues that Simon was alluding to.

Duncan Murdoch



On 2025-03-02 5:45 a.m., Mossa Merhi Reimert via R-devel wrote:
> Dear Simon Urbanek,
> 
> There has been very little engagement with the issue I referred to. If it was decided that this ?check? ought to be part of the default checks for R,
> then that could have been written to us. Either on the bugs.r-project.org or the proposed patch. Before we talk about anything else,
> it does seem very strange that we cannot get a reasonable dialogue going.
> 
> I would like to say that the R/Rust community has grown substantially. From my end, there are 3 bindings project, extendr, savvy, and roxido.
> Then, there are now many rust-based packages on CRAN, see this most recent compiled list https://github.com/nanxstats/r-rust-pkgs.
> There is also proof-of-concept https://github.com/r-rust/hellorust that integrates `cargo`, rust?s official build system, with R?s package build system,
> and https://github.com/extendr/hellorustc, which showcases how Rust compiler could be directly linked with R?s package system.
> 
>   Let me say, that the current R CMD check is not meant to be ?helpful?. When a package is built, `cargo` tells the user ?Downloading crates?.
> Thus, this information is already conveyed to the user.
> 
> Personally, I do wish we could debate this requirement further. I do not believe that having R-packages on CRAN vendor rust dependencies
> as a good policy. Download statistics is a success metric of a given r-package and rust packages. By insisting on vendoring, and thus
> side-stepping `cargo` / crates.io, we are robbing upstream authors of their download-numbers. I do not think such policy is honourable.
> 
> While C/C++ do not have official package repositories, it could be thought of, as fair game, to have CRAN act as a pseudo package manager for C/C++ libraries.
> I?m not going to argue for or against this part.
> 
> There are many objections from the CRAN side to all things related to Rust. I don?t want to open multiple topics in the same thread.
> But there is plenty to bring up. And I had hoped we could talk this little issue through, before embarking on a larger discussion.
> I do not appreciate the ?random demands? comment, as this is not a demand, nor is it random.
> I have inquired my end of the community for suggestions
> to compile a larger proposal, but then I was afraid that this would be perceived as a big, bulky demand.
> 
> Rust is not C/C++/Java, and the support for Rust cannot look like the support for these languages.
> 
> 
> 
> From: Simon Urbanek <simon.urbanek at R-project.org>
> Date: Sunday, 2 March 2025 at 00.39
> To: Mossa Merhi Reimert <mossa at sund.ku.dk>
> Cc: r-devel at r-project.org <r-devel at r-project.org>
> Subject: Re: [Rd] R CMD check and CRAN's Rust policy
> [Du f?r ikke ofte mails fra simon.urbanek at r-project.org. F? mere at vide om, hvorfor dette er vigtigt, p? https://aka.ms/LearnAboutSenderIdentification ]
> 
> Mossa,
> 
> the issue you cite is lacking any pertinent information and it's not even clear why it should be an issue. The check is perfectly justified, it just reports whether a package using rust declares this correctly and where it downloads 3rd party content - something that is important to R users in general and not related to CRAN. I don't see how any of this is "prohibitive" it just calls out what the package is already doing.
> 
> As discussed before, my hope was that the "R"ust community will mature enough to work on proper support. It is not clear that it happened yet, but once it does it would make sense to talk about support just as we have for C, C++ and Java, so certainly that should be the right discussion. However, it will have to start with some thinking and a proposal on how the associated issues (compiler support, versioning, dependency sources etc.) are to be addressed, as opposed to making random demands. All this has nothing to do with CRAN so the issue you mention seems irrelevant to the progress. Also I'd like to know what are the "challenges embedded in R itself".
> 
> Cheers,
> Simon
> 
> 
>> On Mar 2, 2025, at 8:45 AM, Mossa Merhi Reimert via R-devel <r-devel at r-project.org> wrote:
>>
>> Hello everyone!
>>
>> I'm Mossa, I'm one of the maintainers of extendr, an automated generation of bindings project for
>> Rust code, for use in R-packages.
>>
>> I'm writing to you, as R 4.4.3 was just released, and there have not been
>> follow-up on an issue important to us. Link to the issue as discussed on r-devel
>> https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
>>
>> A community member has provided a suggestion to a patch here https://github.com/r-devel/r-svn/pull/182, and we have also attempted to bring it up on
>> Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806
>>
>> TLDR: Default `R CMD check` uses additional CRAN-specific checks for Rust,
>> instead of keeping this behind the --as-cran flag.
>>
>> I would like to say, that there is a growing interest in Rust within the R community.
>> And generally, Rust becoming a widely adopted language within the Python community (including the scientific part of that community). It is time to deal with the
>> pain points with using Rust in R.
>>
>> Therefore, I would kindly ask that we have a dialogue on how to remedy the issue above first, and how we may deal with other issues going forward. There are both challenges embedded in R itself, and the current CRAN policy for Rust is prohibitive.
>>
>>
>>
>> Mossa Merhi Reimert
>> Postdoctoral Researcher
>>
>> K?benhavns Universitet
>> Department of Veterinary and Animal Sciences
>> Animal Welfare and Disease Control
>> Gr?nneg?rdsvej 8
>> 1870 Frederiksberg C
>> Denmark
>>
>> +45 35324135
>> mossa at sund.ku.dk<mailto:mossa at sund.ku.dk>
>>
>>
>>        [[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From yut@n|@|n| @end|ng |rom gm@||@com  Sun Mar  2 16:44:51 2025
From: yut@n|@|n| @end|ng |rom gm@||@com (Hiroaki Yutani)
Date: Mon, 3 Mar 2025 00:44:51 +0900
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
 <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
Message-ID: <CALyqOb868v51RcrEZNc7TCfg9aOb5D23Kjnvei0HAtgj4sEVzw@mail.gmail.com>

> I've looked for other messages on this, and didn't see any besides this
> one explaining why including check_rust() in the checks is a problem.

I agree with you. It seems no one explained what problem it causes to them.
In my understanding (disclaimer: I haven't hit this by myself yet), the
problem is that the "Downloading crates ..." log raises a warning, which
makes the CI check fail. Although it's true that none of this is
"prohibitive," it's just inconvenient.

Maybe it's possible to make it a NOTE instead of a WARNING at least?

I'm suggesting so because otherwise this will end up encouraging the
package authors to hide these logs as a workaround to avoid the CI failure.
As it's very easy, I'm personally fine with the status quo, but if it
becomes a common practice, it makes it harder for the CRAN maintainers to
investigate the installation logs.

Best,
Yutani


2025?3?2?(?) 23:49 Duncan Murdoch <murdoch.duncan at gmail.com>:

> You seem to be taking a confontational tone, which isn't likely to
> encourage a reasonable dialogue.
>
> I've looked for other messages on this, and didn't see any besides this
> one explaining why including check_rust() in the checks is a problem.
> The problem you talk about here is that it encourages vendoring, which
> makes it harder for package authors to count downloads.
>
> To be honest, that doesn't seem like a very serious problem.  I assume
> the packages ("crates") we are talking about are open source, so this is
> entirely in the spirit of how they are allowed to be distributed.
>
> If they aren't open source, then users of those packages should be
> warned about that, and a check failure is a good way to do that.
>
> So you need to explain why it is important to be able to download and
> install software and not be warned about it.
>
> I am not in R Core or CRAN, but I can suggest why it is better to
> include source in the package:  it makes the use of that package more
> reliable in the future.  It's not uncommon to run an R computation that
> was written a few years ago.  Sometimes libraries or R have changed, and
> a user will need to go back to a previous version to reproduce the
> calculation.  Being able to able to rebuild a system as it would have
> been back then is important.
>
> Is that possible if the package needs to make a download?  The download
> site that worked a few years ago may no longer exist.  If the site
> exists, the code versions there may be different.
>
> Those are some of the issues that Simon was alluding to.
>
> Duncan Murdoch
>
>
>
> On 2025-03-02 5:45 a.m., Mossa Merhi Reimert via R-devel wrote:
> > Dear Simon Urbanek,
> >
> > There has been very little engagement with the issue I referred to. If
> it was decided that this ?check? ought to be part of the default checks for
> R,
> > then that could have been written to us. Either on the
> bugs.r-project.org or the proposed patch. Before we talk about anything
> else,
> > it does seem very strange that we cannot get a reasonable dialogue going.
> >
> > I would like to say that the R/Rust community has grown substantially.
> From my end, there are 3 bindings project, extendr, savvy, and roxido.
> > Then, there are now many rust-based packages on CRAN, see this most
> recent compiled list https://github.com/nanxstats/r-rust-pkgs.
> > There is also proof-of-concept https://github.com/r-rust/hellorust that
> integrates `cargo`, rust?s official build system, with R?s package build
> system,
> > and https://github.com/extendr/hellorustc, which showcases how Rust
> compiler could be directly linked with R?s package system.
> >
> >   Let me say, that the current R CMD check is not meant to be ?helpful?.
> When a package is built, `cargo` tells the user ?Downloading crates?.
> > Thus, this information is already conveyed to the user.
> >
> > Personally, I do wish we could debate this requirement further. I do not
> believe that having R-packages on CRAN vendor rust dependencies
> > as a good policy. Download statistics is a success metric of a given
> r-package and rust packages. By insisting on vendoring, and thus
> > side-stepping `cargo` / crates.io, we are robbing upstream authors of
> their download-numbers. I do not think such policy is honourable.
> >
> > While C/C++ do not have official package repositories, it could be
> thought of, as fair game, to have CRAN act as a pseudo package manager for
> C/C++ libraries.
> > I?m not going to argue for or against this part.
> >
> > There are many objections from the CRAN side to all things related to
> Rust. I don?t want to open multiple topics in the same thread.
> > But there is plenty to bring up. And I had hoped we could talk this
> little issue through, before embarking on a larger discussion.
> > I do not appreciate the ?random demands? comment, as this is not a
> demand, nor is it random.
> > I have inquired my end of the community for suggestions
> > to compile a larger proposal, but then I was afraid that this would be
> perceived as a big, bulky demand.
> >
> > Rust is not C/C++/Java, and the support for Rust cannot look like the
> support for these languages.
> >
> >
> >
> > From: Simon Urbanek <simon.urbanek at R-project.org>
> > Date: Sunday, 2 March 2025 at 00.39
> > To: Mossa Merhi Reimert <mossa at sund.ku.dk>
> > Cc: r-devel at r-project.org <r-devel at r-project.org>
> > Subject: Re: [Rd] R CMD check and CRAN's Rust policy
> > [Du f?r ikke ofte mails fra simon.urbanek at r-project.org. F? mere at
> vide om, hvorfor dette er vigtigt, p?
> https://aka.ms/LearnAboutSenderIdentification ]
> >
> > Mossa,
> >
> > the issue you cite is lacking any pertinent information and it's not
> even clear why it should be an issue. The check is perfectly justified, it
> just reports whether a package using rust declares this correctly and where
> it downloads 3rd party content - something that is important to R users in
> general and not related to CRAN. I don't see how any of this is
> "prohibitive" it just calls out what the package is already doing.
> >
> > As discussed before, my hope was that the "R"ust community will mature
> enough to work on proper support. It is not clear that it happened yet, but
> once it does it would make sense to talk about support just as we have for
> C, C++ and Java, so certainly that should be the right discussion. However,
> it will have to start with some thinking and a proposal on how the
> associated issues (compiler support, versioning, dependency sources etc.)
> are to be addressed, as opposed to making random demands. All this has
> nothing to do with CRAN so the issue you mention seems irrelevant to the
> progress. Also I'd like to know what are the "challenges embedded in R
> itself".
> >
> > Cheers,
> > Simon
> >
> >
> >> On Mar 2, 2025, at 8:45 AM, Mossa Merhi Reimert via R-devel <
> r-devel at r-project.org> wrote:
> >>
> >> Hello everyone!
> >>
> >> I'm Mossa, I'm one of the maintainers of extendr, an automated
> generation of bindings project for
> >> Rust code, for use in R-packages.
> >>
> >> I'm writing to you, as R 4.4.3 was just released, and there have not
> been
> >> follow-up on an issue important to us. Link to the issue as discussed
> on r-devel
> >> https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
> >>
> >> A community member has provided a suggestion to a patch here
> https://github.com/r-devel/r-svn/pull/182, and we have also attempted to
> bring it up on
> >> Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806
> >>
> >> TLDR: Default `R CMD check` uses additional CRAN-specific checks for
> Rust,
> >> instead of keeping this behind the --as-cran flag.
> >>
> >> I would like to say, that there is a growing interest in Rust within
> the R community.
> >> And generally, Rust becoming a widely adopted language within the
> Python community (including the scientific part of that community). It is
> time to deal with the
> >> pain points with using Rust in R.
> >>
> >> Therefore, I would kindly ask that we have a dialogue on how to remedy
> the issue above first, and how we may deal with other issues going forward.
> There are both challenges embedded in R itself, and the current CRAN policy
> for Rust is prohibitive.
> >>
> >>
> >>
> >> Mossa Merhi Reimert
> >> Postdoctoral Researcher
> >>
> >> K?benhavns Universitet
> >> Department of Veterinary and Animal Sciences
> >> Animal Welfare and Disease Control
> >> Gr?nneg?rdsvej 8
> >> 1870 Frederiksberg C
> >> Denmark
> >>
> >> +45 35324135
> >> mossa at sund.ku.dk<mailto:mossa at sund.ku.dk>
> >>
> >>
> >>        [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From jo@|@h@p@rry @end|ng |rom gm@||@com  Sun Mar  2 17:03:13 2025
From: jo@|@h@p@rry @end|ng |rom gm@||@com (Josiah Parry)
Date: Sun, 2 Mar 2025 08:03:13 -0800
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
 <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
Message-ID: <CAL3ufUKSkMXpgSD6-o7dC7tZuD+DmpHaq2JUzuF9+9dosE+XEA@mail.gmail.com>

Well this has surely veered off course!

As the one who filed the BugZilla report, I'd like to redirect the
conversation and provide further context.

The question should be *"how do we get a dialogue started on this bugzilla
issue before the next minor *
*release of R?"*

The current check for Rust-based R package's downloading external
dependencies works by looking at
the output logs for the presence of  "Downloading crates." This can is an
entirely fine requirement for
CRAN?however, due to the fact that it is an error, packages distributed
through other repositories
fail the R-CMD check.

Folks who use R-universe or PPM or some mysterious third thing may not
share the same philosophy as
CRAN and prefer the convenience of fetching the dependencies at compile
time and not vendoring them.

An alternative would be for the check to be optionally skipped or become a
NOTE when the CRAN
flag is not set and an ERROR otherwise. Skipping this CRAN check is as easy
as adding `--quiet`
or setting an environment variable?but that is against the spirit of the
check.

Ideally, the check can remain, but scoped appropriately.


On Sun, Mar 2, 2025 at 6:49?AM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> You seem to be taking a confontational tone, which isn't likely to
> encourage a reasonable dialogue.
>
> I've looked for other messages on this, and didn't see any besides this
> one explaining why including check_rust() in the checks is a problem.
> The problem you talk about here is that it encourages vendoring, which
> makes it harder for package authors to count downloads.
>
> To be honest, that doesn't seem like a very serious problem.  I assume
> the packages ("crates") we are talking about are open source, so this is
> entirely in the spirit of how they are allowed to be distributed.
>
> If they aren't open source, then users of those packages should be
> warned about that, and a check failure is a good way to do that.
>
> So you need to explain why it is important to be able to download and
> install software and not be warned about it.
>
> I am not in R Core or CRAN, but I can suggest why it is better to
> include source in the package:  it makes the use of that package more
> reliable in the future.  It's not uncommon to run an R computation that
> was written a few years ago.  Sometimes libraries or R have changed, and
> a user will need to go back to a previous version to reproduce the
> calculation.  Being able to able to rebuild a system as it would have
> been back then is important.
>
> Is that possible if the package needs to make a download?  The download
> site that worked a few years ago may no longer exist.  If the site
> exists, the code versions there may be different.
>
> Those are some of the issues that Simon was alluding to.
>
> Duncan Murdoch
>
>
>
> On 2025-03-02 5:45 a.m., Mossa Merhi Reimert via R-devel wrote:
> > Dear Simon Urbanek,
> >
> > There has been very little engagement with the issue I referred to. If
> it was decided that this ?check? ought to be part of the default checks for
> R,
> > then that could have been written to us. Either on the
> bugs.r-project.org or the proposed patch. Before we talk about anything
> else,
> > it does seem very strange that we cannot get a reasonable dialogue going.
> >
> > I would like to say that the R/Rust community has grown substantially.
> From my end, there are 3 bindings project, extendr, savvy, and roxido.
> > Then, there are now many rust-based packages on CRAN, see this most
> recent compiled list https://github.com/nanxstats/r-rust-pkgs.
> > There is also proof-of-concept https://github.com/r-rust/hellorust that
> integrates `cargo`, rust?s official build system, with R?s package build
> system,
> > and https://github.com/extendr/hellorustc, which showcases how Rust
> compiler could be directly linked with R?s package system.
> >
> >   Let me say, that the current R CMD check is not meant to be ?helpful?.
> When a package is built, `cargo` tells the user ?Downloading crates?.
> > Thus, this information is already conveyed to the user.
> >
> > Personally, I do wish we could debate this requirement further. I do not
> believe that having R-packages on CRAN vendor rust dependencies
> > as a good policy. Download statistics is a success metric of a given
> r-package and rust packages. By insisting on vendoring, and thus
> > side-stepping `cargo` / crates.io, we are robbing upstream authors of
> their download-numbers. I do not think such policy is honourable.
> >
> > While C/C++ do not have official package repositories, it could be
> thought of, as fair game, to have CRAN act as a pseudo package manager for
> C/C++ libraries.
> > I?m not going to argue for or against this part.
> >
> > There are many objections from the CRAN side to all things related to
> Rust. I don?t want to open multiple topics in the same thread.
> > But there is plenty to bring up. And I had hoped we could talk this
> little issue through, before embarking on a larger discussion.
> > I do not appreciate the ?random demands? comment, as this is not a
> demand, nor is it random.
> > I have inquired my end of the community for suggestions
> > to compile a larger proposal, but then I was afraid that this would be
> perceived as a big, bulky demand.
> >
> > Rust is not C/C++/Java, and the support for Rust cannot look like the
> support for these languages.
> >
> >
> >
> > From: Simon Urbanek <simon.urbanek at R-project.org>
> > Date: Sunday, 2 March 2025 at 00.39
> > To: Mossa Merhi Reimert <mossa at sund.ku.dk>
> > Cc: r-devel at r-project.org <r-devel at r-project.org>
> > Subject: Re: [Rd] R CMD check and CRAN's Rust policy
> > [Du f?r ikke ofte mails fra simon.urbanek at r-project.org. F? mere at
> vide om, hvorfor dette er vigtigt, p?
> https://aka.ms/LearnAboutSenderIdentification ]
> >
> > Mossa,
> >
> > the issue you cite is lacking any pertinent information and it's not
> even clear why it should be an issue. The check is perfectly justified, it
> just reports whether a package using rust declares this correctly and where
> it downloads 3rd party content - something that is important to R users in
> general and not related to CRAN. I don't see how any of this is
> "prohibitive" it just calls out what the package is already doing.
> >
> > As discussed before, my hope was that the "R"ust community will mature
> enough to work on proper support. It is not clear that it happened yet, but
> once it does it would make sense to talk about support just as we have for
> C, C++ and Java, so certainly that should be the right discussion. However,
> it will have to start with some thinking and a proposal on how the
> associated issues (compiler support, versioning, dependency sources etc.)
> are to be addressed, as opposed to making random demands. All this has
> nothing to do with CRAN so the issue you mention seems irrelevant to the
> progress. Also I'd like to know what are the "challenges embedded in R
> itself".
> >
> > Cheers,
> > Simon
> >
> >
> >> On Mar 2, 2025, at 8:45 AM, Mossa Merhi Reimert via R-devel <
> r-devel at r-project.org> wrote:
> >>
> >> Hello everyone!
> >>
> >> I'm Mossa, I'm one of the maintainers of extendr, an automated
> generation of bindings project for
> >> Rust code, for use in R-packages.
> >>
> >> I'm writing to you, as R 4.4.3 was just released, and there have not
> been
> >> follow-up on an issue important to us. Link to the issue as discussed
> on r-devel
> >> https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
> >>
> >> A community member has provided a suggestion to a patch here
> https://github.com/r-devel/r-svn/pull/182, and we have also attempted to
> bring it up on
> >> Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806
> >>
> >> TLDR: Default `R CMD check` uses additional CRAN-specific checks for
> Rust,
> >> instead of keeping this behind the --as-cran flag.
> >>
> >> I would like to say, that there is a growing interest in Rust within
> the R community.
> >> And generally, Rust becoming a widely adopted language within the
> Python community (including the scientific part of that community). It is
> time to deal with the
> >> pain points with using Rust in R.
> >>
> >> Therefore, I would kindly ask that we have a dialogue on how to remedy
> the issue above first, and how we may deal with other issues going forward.
> There are both challenges embedded in R itself, and the current CRAN policy
> for Rust is prohibitive.
> >>
> >>
> >>
> >> Mossa Merhi Reimert
> >> Postdoctoral Researcher
> >>
> >> K?benhavns Universitet
> >> Department of Veterinary and Animal Sciences
> >> Animal Welfare and Disease Control
> >> Gr?nneg?rdsvej 8
> >> 1870 Frederiksberg C
> >> Denmark
> >>
> >> +45 35324135
> >> mossa at sund.ku.dk<mailto:mossa at sund.ku.dk>
> >>
> >>
> >>        [[alternative HTML version deleted]]
> >>
> >> ______________________________________________
> >> R-devel at r-project.org mailing list
> >> https://stat.ethz.ch/mailman/listinfo/r-devel
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Mar  2 18:21:39 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 2 Mar 2025 12:21:39 -0500
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <CAL3ufUKSkMXpgSD6-o7dC7tZuD+DmpHaq2JUzuF9+9dosE+XEA@mail.gmail.com>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
 <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
 <CAL3ufUKSkMXpgSD6-o7dC7tZuD+DmpHaq2JUzuF9+9dosE+XEA@mail.gmail.com>
Message-ID: <4eb96716-9f8c-4f4e-8d2d-a43feba44392@gmail.com>

On 2025-03-02 11:03 a.m., Josiah Parry wrote:
> Well this has surely veered off course!
> 
> As the one who filed the BugZilla report, I'd like to redirect the 
> conversation and provide further context.
> 
> The question should?be /"how do we get a dialogue started on this 
> bugzilla issue before the next minor /
> /release of R?"/

Isn't this exactly that dialogue?

> 
> The current check for Rust-based R package's downloading external 
> dependencies works by looking at
> the output logs for the presence of? "Downloading crates." This can is 
> an entirely fine requirement for
> CRAN?however, due to the fact that it is an error, packages distributed 
> through other repositories
> fail the R-CMD check.

I think you misunderstood me.  CRAN shares the view I gave that you 
should be able to run old code to reproduce old results, but they aren't 
the only ones.  That's always been a goal of R.

> Folks who use R-universe or PPM or some mysterious third thing may not 
> share the same philosophy as
> CRAN and prefer the convenience of fetching the dependencies at compile 
> time and not vendoring them.
> An alternative would be for the check to be optionally skipped or become 
> a NOTE when the CRAN
> flag is not set and an ERROR otherwise. Skipping this CRAN check is as 
> easy as adding `--quiet`
> or setting an environment variable?but that is against the spirit of the 
> check.

If it is that easy to skip the check, then I really don't see the issue. 
  Just ask the repository where you want to put your package to put that 
option or environment variable in place, and there's no longer a problem.

Duncan Murdoch

> Ideally, the check can remain, but scoped appropriately.
> 
> 
> On Sun, Mar 2, 2025 at 6:49?AM Duncan Murdoch <murdoch.duncan at gmail.com 
> <mailto:murdoch.duncan at gmail.com>> wrote:
> 
>     You seem to be taking a confontational tone, which isn't likely to
>     encourage a reasonable dialogue.
> 
>     I've looked for other messages on this, and didn't see any besides this
>     one explaining why including check_rust() in the checks is a problem.
>     The problem you talk about here is that it encourages vendoring, which
>     makes it harder for package authors to count downloads.
> 
>     To be honest, that doesn't seem like a very serious problem.? I assume
>     the packages ("crates") we are talking about are open source, so
>     this is
>     entirely in the spirit of how they are allowed to be distributed.
> 
>     If they aren't open source, then users of those packages should be
>     warned about that, and a check failure is a good way to do that.
> 
>     So you need to explain why it is important to be able to download and
>     install software and not be warned about it.
> 
>     I am not in R Core or CRAN, but I can suggest why it is better to
>     include source in the package:? it makes the use of that package more
>     reliable in the future.? It's not uncommon to run an R computation that
>     was written a few years ago.? Sometimes libraries or R have changed,
>     and
>     a user will need to go back to a previous version to reproduce the
>     calculation.? Being able to able to rebuild a system as it would have
>     been back then is important.
> 
>     Is that possible if the package needs to make a download?? The download
>     site that worked a few years ago may no longer exist.? If the site
>     exists, the code versions there may be different.
> 
>     Those are some of the issues that Simon was alluding to.
> 
>     Duncan Murdoch
> 
> 
> 
>     On 2025-03-02 5:45 a.m., Mossa Merhi Reimert via R-devel wrote:
>      > Dear Simon Urbanek,
>      >
>      > There has been very little engagement with the issue I referred
>     to. If it was decided that this ?check? ought to be part of the
>     default checks for R,
>      > then that could have been written to us. Either on the
>     bugs.r-project.org <http://bugs.r-project.org> or the proposed
>     patch. Before we talk about anything else,
>      > it does seem very strange that we cannot get a reasonable
>     dialogue going.
>      >
>      > I would like to say that the R/Rust community has grown
>     substantially. From my end, there are 3 bindings project, extendr,
>     savvy, and roxido.
>      > Then, there are now many rust-based packages on CRAN, see this
>     most recent compiled list https://github.com/nanxstats/r-rust-pkgs
>     <https://github.com/nanxstats/r-rust-pkgs>.
>      > There is also proof-of-concept
>     https://github.com/r-rust/hellorust
>     <https://github.com/r-rust/hellorust> that integrates `cargo`,
>     rust?s official build system, with R?s package build system,
>      > and https://github.com/extendr/hellorustc
>     <https://github.com/extendr/hellorustc>, which showcases how Rust
>     compiler could be directly linked with R?s package system.
>      >
>      >? ?Let me say, that the current R CMD check is not meant to be
>     ?helpful?. When a package is built, `cargo` tells the user
>     ?Downloading crates?.
>      > Thus, this information is already conveyed to the user.
>      >
>      > Personally, I do wish we could debate this requirement further. I
>     do not believe that having R-packages on CRAN vendor rust dependencies
>      > as a good policy. Download statistics is a success metric of a
>     given r-package and rust packages. By insisting on vendoring, and thus
>      > side-stepping `cargo` / crates.io <http://crates.io>, we are
>     robbing upstream authors of their download-numbers. I do not think
>     such policy is honourable.
>      >
>      > While C/C++ do not have official package repositories, it could
>     be thought of, as fair game, to have CRAN act as a pseudo package
>     manager for C/C++ libraries.
>      > I?m not going to argue for or against this part.
>      >
>      > There are many objections from the CRAN side to all things
>     related to Rust. I don?t want to open multiple topics in the same
>     thread.
>      > But there is plenty to bring up. And I had hoped we could talk
>     this little issue through, before embarking on a larger discussion.
>      > I do not appreciate the ?random demands? comment, as this is not
>     a demand, nor is it random.
>      > I have inquired my end of the community for suggestions
>      > to compile a larger proposal, but then I was afraid that this
>     would be perceived as a big, bulky demand.
>      >
>      > Rust is not C/C++/Java, and the support for Rust cannot look like
>     the support for these languages.
>      >
>      >
>      >
>      > From: Simon Urbanek <simon.urbanek at R-project.org>
>      > Date: Sunday, 2 March 2025 at 00.39
>      > To: Mossa Merhi Reimert <mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>
>      > Cc: r-devel at r-project.org <mailto:r-devel at r-project.org>
>     <r-devel at r-project.org <mailto:r-devel at r-project.org>>
>      > Subject: Re: [Rd] R CMD check and CRAN's Rust policy
>      > [Du f?r ikke ofte mails fra simon.urbanek at r-project.org
>     <mailto:simon.urbanek at r-project.org>. F? mere at vide om, hvorfor
>     dette er vigtigt, p? https://aka.ms/LearnAboutSenderIdentification
>     <https://aka.ms/LearnAboutSenderIdentification> ]
>      >
>      > Mossa,
>      >
>      > the issue you cite is lacking any pertinent information and it's
>     not even clear why it should be an issue. The check is perfectly
>     justified, it just reports whether a package using rust declares
>     this correctly and where it downloads 3rd party content - something
>     that is important to R users in general and not related to CRAN. I
>     don't see how any of this is "prohibitive" it just calls out what
>     the package is already doing.
>      >
>      > As discussed before, my hope was that the "R"ust community will
>     mature enough to work on proper support. It is not clear that it
>     happened yet, but once it does it would make sense to talk about
>     support just as we have for C, C++ and Java, so certainly that
>     should be the right discussion. However, it will have to start with
>     some thinking and a proposal on how the associated issues (compiler
>     support, versioning, dependency sources etc.) are to be addressed,
>     as opposed to making random demands. All this has nothing to do with
>     CRAN so the issue you mention seems irrelevant to the progress. Also
>     I'd like to know what are the "challenges embedded in R itself".
>      >
>      > Cheers,
>      > Simon
>      >
>      >
>      >> On Mar 2, 2025, at 8:45 AM, Mossa Merhi Reimert via R-devel
>     <r-devel at r-project.org <mailto:r-devel at r-project.org>> wrote:
>      >>
>      >> Hello everyone!
>      >>
>      >> I'm Mossa, I'm one of the maintainers of extendr, an automated
>     generation of bindings project for
>      >> Rust code, for use in R-packages.
>      >>
>      >> I'm writing to you, as R 4.4.3 was just released, and there have
>     not been
>      >> follow-up on an issue important to us. Link to the issue as
>     discussed on r-devel
>      >> https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
>     <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>
>      >>
>      >> A community member has provided a suggestion to a patch here
>     https://github.com/r-devel/r-svn/pull/182
>     <https://github.com/r-devel/r-svn/pull/182>, and we have also
>     attempted to bring it up on
>      >> Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806
>     <https://bugs.r-project.org/show_bug.cgi?id=18806>
>      >>
>      >> TLDR: Default `R CMD check` uses additional CRAN-specific checks
>     for Rust,
>      >> instead of keeping this behind the --as-cran flag.
>      >>
>      >> I would like to say, that there is a growing interest in Rust
>     within the R community.
>      >> And generally, Rust becoming a widely adopted language within
>     the Python community (including the scientific part of that
>     community). It is time to deal with the
>      >> pain points with using Rust in R.
>      >>
>      >> Therefore, I would kindly ask that we have a dialogue on how to
>     remedy the issue above first, and how we may deal with other issues
>     going forward. There are both challenges embedded in R itself, and
>     the current CRAN policy for Rust is prohibitive.
>      >>
>      >>
>      >>
>      >> Mossa Merhi Reimert
>      >> Postdoctoral Researcher
>      >>
>      >> K?benhavns Universitet
>      >> Department of Veterinary and Animal Sciences
>      >> Animal Welfare and Disease Control
>      >> Gr?nneg?rdsvej 8
>      >> 1870 Frederiksberg C
>      >> Denmark
>      >>
>      >> +45 35324135
>      >> mossa at sund.ku.dk
>     <mailto:mossa at sund.ku.dk><mailto:mossa at sund.ku.dk
>     <mailto:mossa at sund.ku.dk>>
>      >>
>      >>
>      >>? ? ? ? [[alternative HTML version deleted]]
>      >>
>      >> ______________________________________________
>      >> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>      >> https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
>      >
>      >? ? ? ?[[alternative HTML version deleted]]
>      >
>      > ______________________________________________
>      > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
> 
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
>


From bbo|ker @end|ng |rom gm@||@com  Sun Mar  2 19:09:28 2025
From: bbo|ker @end|ng |rom gm@||@com (Ben Bolker)
Date: Sun, 2 Mar 2025 13:09:28 -0500
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <4eb96716-9f8c-4f4e-8d2d-a43feba44392@gmail.com>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
 <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
 <CAL3ufUKSkMXpgSD6-o7dC7tZuD+DmpHaq2JUzuF9+9dosE+XEA@mail.gmail.com>
 <4eb96716-9f8c-4f4e-8d2d-a43feba44392@gmail.com>
Message-ID: <df6bc0fc-1699-4691-a83c-1606d5db72a7@gmail.com>

  I, like Duncan, am just following along here. I think there might be 
two distinct questions which it would be useful to keep distinct:

  * how to silence the rust-check if desired?

   rather than debating whether the rust-check should be always-on, 
on-for-CRAN-only, etc., would it provide for useful flexibility to add 
an environment variable that enables/disables this functionality?  There 
are already 168 of these environment variables, how much would one more 
cost?

   I'm not sure how adding an environment variable to allow easier 
user/alternate-repository control of the check is "against the spirit of 
the check" ...

   All the existing check-regulating env variables ...

cd src/library/tools/R
grep 'Sys.getenv("_R_CHECK' * | sed -e 's/^.*Sys.getenv(//' | sed -e 
's/[,)].*//' | sort | uniq | wc


   * should CRAN allow Rust crates to be downloaded?

   This is a much more fundamental policy decision, which I have no 
opinion about.

   cheers
    Ben Bolker




On 2025-03-02 12:21 p.m., Duncan Murdoch wrote:
> On 2025-03-02 11:03 a.m., Josiah Parry wrote:
>> Well this has surely veered off course!
>>
>> As the one who filed the BugZilla report, I'd like to redirect the 
>> conversation and provide further context.
>>
>> The question should?be /"how do we get a dialogue started on this 
>> bugzilla issue before the next minor /
>> /release of R?"/
> 
> Isn't this exactly that dialogue?
> 
>>
>> The current check for Rust-based R package's downloading external 
>> dependencies works by looking at
>> the output logs for the presence of? "Downloading crates." This can is 
>> an entirely fine requirement for
>> CRAN?however, due to the fact that it is an error, packages 
>> distributed through other repositories
>> fail the R-CMD check.
> 
> I think you misunderstood me.? CRAN shares the view I gave that you 
> should be able to run old code to reproduce old results, but they aren't 
> the only ones.? That's always been a goal of R.
> 
>> Folks who use R-universe or PPM or some mysterious third thing may not 
>> share the same philosophy as
>> CRAN and prefer the convenience of fetching the dependencies at 
>> compile time and not vendoring them.
>> An alternative would be for the check to be optionally skipped or 
>> become a NOTE when the CRAN
>> flag is not set and an ERROR otherwise. Skipping this CRAN check is as 
>> easy as adding `--quiet`
>> or setting an environment variable?but that is against the spirit of 
>> the check.
> 
> If it is that easy to skip the check, then I really don't see the issue. 
>  ?Just ask the repository where you want to put your package to put that 
> option or environment variable in place, and there's no longer a problem.
> 
> Duncan Murdoch
> 
>> Ideally, the check can remain, but scoped appropriately.
>>
>>
>> On Sun, Mar 2, 2025 at 6:49?AM Duncan Murdoch 
>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>
>> ??? You seem to be taking a confontational tone, which isn't likely to
>> ??? encourage a reasonable dialogue.
>>
>> ??? I've looked for other messages on this, and didn't see any besides 
>> this
>> ??? one explaining why including check_rust() in the checks is a problem.
>> ??? The problem you talk about here is that it encourages vendoring, 
>> which
>> ??? makes it harder for package authors to count downloads.
>>
>> ??? To be honest, that doesn't seem like a very serious problem.? I 
>> assume
>> ??? the packages ("crates") we are talking about are open source, so
>> ??? this is
>> ??? entirely in the spirit of how they are allowed to be distributed.
>>
>> ??? If they aren't open source, then users of those packages should be
>> ??? warned about that, and a check failure is a good way to do that.
>>
>> ??? So you need to explain why it is important to be able to download and
>> ??? install software and not be warned about it.
>>
>> ??? I am not in R Core or CRAN, but I can suggest why it is better to
>> ??? include source in the package:? it makes the use of that package more
>> ??? reliable in the future.? It's not uncommon to run an R computation 
>> that
>> ??? was written a few years ago.? Sometimes libraries or R have changed,
>> ??? and
>> ??? a user will need to go back to a previous version to reproduce the
>> ??? calculation.? Being able to able to rebuild a system as it would have
>> ??? been back then is important.
>>
>> ??? Is that possible if the package needs to make a download?? The 
>> download
>> ??? site that worked a few years ago may no longer exist.? If the site
>> ??? exists, the code versions there may be different.
>>
>> ??? Those are some of the issues that Simon was alluding to.
>>
>> ??? Duncan Murdoch
>>
>>
>>
>> ??? On 2025-03-02 5:45 a.m., Mossa Merhi Reimert via R-devel wrote:
>> ???? > Dear Simon Urbanek,
>> ???? >
>> ???? > There has been very little engagement with the issue I referred
>> ??? to. If it was decided that this ?check? ought to be part of the
>> ??? default checks for R,
>> ???? > then that could have been written to us. Either on the
>> ??? bugs.r-project.org <http://bugs.r-project.org> or the proposed
>> ??? patch. Before we talk about anything else,
>> ???? > it does seem very strange that we cannot get a reasonable
>> ??? dialogue going.
>> ???? >
>> ???? > I would like to say that the R/Rust community has grown
>> ??? substantially. From my end, there are 3 bindings project, extendr,
>> ??? savvy, and roxido.
>> ???? > Then, there are now many rust-based packages on CRAN, see this
>> ??? most recent compiled list https://github.com/nanxstats/r-rust-pkgs
>> ??? <https://github.com/nanxstats/r-rust-pkgs>.
>> ???? > There is also proof-of-concept
>> ??? https://github.com/r-rust/hellorust
>> ??? <https://github.com/r-rust/hellorust> that integrates `cargo`,
>> ??? rust?s official build system, with R?s package build system,
>> ???? > and https://github.com/extendr/hellorustc
>> ??? <https://github.com/extendr/hellorustc>, which showcases how Rust
>> ??? compiler could be directly linked with R?s package system.
>> ???? >
>> ???? >? ?Let me say, that the current R CMD check is not meant to be
>> ??? ?helpful?. When a package is built, `cargo` tells the user
>> ??? ?Downloading crates?.
>> ???? > Thus, this information is already conveyed to the user.
>> ???? >
>> ???? > Personally, I do wish we could debate this requirement further. I
>> ??? do not believe that having R-packages on CRAN vendor rust 
>> dependencies
>> ???? > as a good policy. Download statistics is a success metric of a
>> ??? given r-package and rust packages. By insisting on vendoring, and 
>> thus
>> ???? > side-stepping `cargo` / crates.io <http://crates.io>, we are
>> ??? robbing upstream authors of their download-numbers. I do not think
>> ??? such policy is honourable.
>> ???? >
>> ???? > While C/C++ do not have official package repositories, it could
>> ??? be thought of, as fair game, to have CRAN act as a pseudo package
>> ??? manager for C/C++ libraries.
>> ???? > I?m not going to argue for or against this part.
>> ???? >
>> ???? > There are many objections from the CRAN side to all things
>> ??? related to Rust. I don?t want to open multiple topics in the same
>> ??? thread.
>> ???? > But there is plenty to bring up. And I had hoped we could talk
>> ??? this little issue through, before embarking on a larger discussion.
>> ???? > I do not appreciate the ?random demands? comment, as this is not
>> ??? a demand, nor is it random.
>> ???? > I have inquired my end of the community for suggestions
>> ???? > to compile a larger proposal, but then I was afraid that this
>> ??? would be perceived as a big, bulky demand.
>> ???? >
>> ???? > Rust is not C/C++/Java, and the support for Rust cannot look like
>> ??? the support for these languages.
>> ???? >
>> ???? >
>> ???? >
>> ???? > From: Simon Urbanek <simon.urbanek at R-project.org>
>> ???? > Date: Sunday, 2 March 2025 at 00.39
>> ???? > To: Mossa Merhi Reimert <mossa at sund.ku.dk 
>> <mailto:mossa at sund.ku.dk>>
>> ???? > Cc: r-devel at r-project.org <mailto:r-devel at r-project.org>
>> ??? <r-devel at r-project.org <mailto:r-devel at r-project.org>>
>> ???? > Subject: Re: [Rd] R CMD check and CRAN's Rust policy
>> ???? > [Du f?r ikke ofte mails fra simon.urbanek at r-project.org
>> ??? <mailto:simon.urbanek at r-project.org>. F? mere at vide om, hvorfor
>> ??? dette er vigtigt, p? https://aka.ms/LearnAboutSenderIdentification
>> ??? <https://aka.ms/LearnAboutSenderIdentification> ]
>> ???? >
>> ???? > Mossa,
>> ???? >
>> ???? > the issue you cite is lacking any pertinent information and it's
>> ??? not even clear why it should be an issue. The check is perfectly
>> ??? justified, it just reports whether a package using rust declares
>> ??? this correctly and where it downloads 3rd party content - something
>> ??? that is important to R users in general and not related to CRAN. I
>> ??? don't see how any of this is "prohibitive" it just calls out what
>> ??? the package is already doing.
>> ???? >
>> ???? > As discussed before, my hope was that the "R"ust community will
>> ??? mature enough to work on proper support. It is not clear that it
>> ??? happened yet, but once it does it would make sense to talk about
>> ??? support just as we have for C, C++ and Java, so certainly that
>> ??? should be the right discussion. However, it will have to start with
>> ??? some thinking and a proposal on how the associated issues (compiler
>> ??? support, versioning, dependency sources etc.) are to be addressed,
>> ??? as opposed to making random demands. All this has nothing to do with
>> ??? CRAN so the issue you mention seems irrelevant to the progress. Also
>> ??? I'd like to know what are the "challenges embedded in R itself".
>> ???? >
>> ???? > Cheers,
>> ???? > Simon
>> ???? >
>> ???? >
>> ???? >> On Mar 2, 2025, at 8:45 AM, Mossa Merhi Reimert via R-devel
>> ??? <r-devel at r-project.org <mailto:r-devel at r-project.org>> wrote:
>> ???? >>
>> ???? >> Hello everyone!
>> ???? >>
>> ???? >> I'm Mossa, I'm one of the maintainers of extendr, an automated
>> ??? generation of bindings project for
>> ???? >> Rust code, for use in R-packages.
>> ???? >>
>> ???? >> I'm writing to you, as R 4.4.3 was just released, and there have
>> ??? not been
>> ???? >> follow-up on an issue important to us. Link to the issue as
>> ??? discussed on r-devel
>> ???? >> https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
>> ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>
>> ???? >>
>> ???? >> A community member has provided a suggestion to a patch here
>> ??? https://github.com/r-devel/r-svn/pull/182
>> ??? <https://github.com/r-devel/r-svn/pull/182>, and we have also
>> ??? attempted to bring it up on
>> ???? >> Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806
>> ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>
>> ???? >>
>> ???? >> TLDR: Default `R CMD check` uses additional CRAN-specific checks
>> ??? for Rust,
>> ???? >> instead of keeping this behind the --as-cran flag.
>> ???? >>
>> ???? >> I would like to say, that there is a growing interest in Rust
>> ??? within the R community.
>> ???? >> And generally, Rust becoming a widely adopted language within
>> ??? the Python community (including the scientific part of that
>> ??? community). It is time to deal with the
>> ???? >> pain points with using Rust in R.
>> ???? >>
>> ???? >> Therefore, I would kindly ask that we have a dialogue on how to
>> ??? remedy the issue above first, and how we may deal with other issues
>> ??? going forward. There are both challenges embedded in R itself, and
>> ??? the current CRAN policy for Rust is prohibitive.
>> ???? >>
>> ???? >>
>> ???? >>
>> ???? >> Mossa Merhi Reimert
>> ???? >> Postdoctoral Researcher
>> ???? >>
>> ???? >> K?benhavns Universitet
>> ???? >> Department of Veterinary and Animal Sciences
>> ???? >> Animal Welfare and Disease Control
>> ???? >> Gr?nneg?rdsvej 8
>> ???? >> 1870 Frederiksberg C
>> ???? >> Denmark
>> ???? >>
>> ???? >> +45 35324135
>> ???? >> mossa at sund.ku.dk
>> ??? <mailto:mossa at sund.ku.dk><mailto:mossa at sund.ku.dk
>> ??? <mailto:mossa at sund.ku.dk>>
>> ???? >>
>> ???? >>
>> ???? >>? ? ? ? [[alternative HTML version deleted]]
>> ???? >>
>> ???? >> ______________________________________________
>> ???? >> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> ???? >> https://stat.ethz.ch/mailman/listinfo/r-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>> ???? >
>> ???? >? ? ? ?[[alternative HTML version deleted]]
>> ???? >
>> ???? > ______________________________________________
>> ???? > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> ???? > https://stat.ethz.ch/mailman/listinfo/r-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>
>> ??? ______________________________________________
>> ??? R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>> ??? https://stat.ethz.ch/mailman/listinfo/r-devel
>> ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel

-- 
Dr. Benjamin Bolker
Professor, Mathematics & Statistics and Biology, McMaster University
Director, School of Computational Science and Engineering
 > E-mail is sent at my convenience; I don't expect replies outside of 
working hours.


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Mar  2 20:41:50 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 2 Mar 2025 14:41:50 -0500
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <df6bc0fc-1699-4691-a83c-1606d5db72a7@gmail.com>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
 <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
 <CAL3ufUKSkMXpgSD6-o7dC7tZuD+DmpHaq2JUzuF9+9dosE+XEA@mail.gmail.com>
 <4eb96716-9f8c-4f4e-8d2d-a43feba44392@gmail.com>
 <df6bc0fc-1699-4691-a83c-1606d5db72a7@gmail.com>
Message-ID: <19f561ae-d787-4f27-b3ba-f63c9b65fba5@gmail.com>

On 2025-03-02 1:09 p.m., Ben Bolker wrote:
>    I, like Duncan, am just following along here. I think there might be
> two distinct questions which it would be useful to keep distinct:
> 
>    * how to silence the rust-check if desired?
> 
>     rather than debating whether the rust-check should be always-on,
> on-for-CRAN-only, etc., would it provide for useful flexibility to add
> an environment variable that enables/disables this functionality?  There
> are already 168 of these environment variables, how much would one more
> cost?

I may have misunderstood Josiah.  I thought his message said that it is 
already easy to silence the check, by stopping the code from issuing the 
message the check is looking for.

Presumably the package shouldn't do that, but if there's an environment 
variable that can be set to do it, then the repository or user can 
choose to do it, so there's no need for R to add another environment 
variable.

BTW, as far as I can see current R-devel doesn't issue an error, it just 
issues warnings about two issues:

  - the package is downloading crates
  - the rustc compiler doesn't report a version number

Duncan Murdoch

> 
>     I'm not sure how adding an environment variable to allow easier
> user/alternate-repository control of the check is "against the spirit of
> the check" ...
> 
>     All the existing check-regulating env variables ...
> 
> cd src/library/tools/R
> grep 'Sys.getenv("_R_CHECK' * | sed -e 's/^.*Sys.getenv(//' | sed -e
> 's/[,)].*//' | sort | uniq | wc
> 
> 
>     * should CRAN allow Rust crates to be downloaded?
> 
>     This is a much more fundamental policy decision, which I have no
> opinion about.
> 
>     cheers
>      Ben Bolker
> 
> 
> 
> 
> On 2025-03-02 12:21 p.m., Duncan Murdoch wrote:
>> On 2025-03-02 11:03 a.m., Josiah Parry wrote:
>>> Well this has surely veered off course!
>>>
>>> As the one who filed the BugZilla report, I'd like to redirect the
>>> conversation and provide further context.
>>>
>>> The question should?be /"how do we get a dialogue started on this
>>> bugzilla issue before the next minor /
>>> /release of R?"/
>>
>> Isn't this exactly that dialogue?
>>
>>>
>>> The current check for Rust-based R package's downloading external
>>> dependencies works by looking at
>>> the output logs for the presence of? "Downloading crates." This can is
>>> an entirely fine requirement for
>>> CRAN?however, due to the fact that it is an error, packages
>>> distributed through other repositories
>>> fail the R-CMD check.
>>
>> I think you misunderstood me.? CRAN shares the view I gave that you
>> should be able to run old code to reproduce old results, but they aren't
>> the only ones.? That's always been a goal of R.
>>
>>> Folks who use R-universe or PPM or some mysterious third thing may not
>>> share the same philosophy as
>>> CRAN and prefer the convenience of fetching the dependencies at
>>> compile time and not vendoring them.
>>> An alternative would be for the check to be optionally skipped or
>>> become a NOTE when the CRAN
>>> flag is not set and an ERROR otherwise. Skipping this CRAN check is as
>>> easy as adding `--quiet`
>>> or setting an environment variable?but that is against the spirit of
>>> the check.
>>
>> If it is that easy to skip the check, then I really don't see the issue.
>>   ?Just ask the repository where you want to put your package to put that
>> option or environment variable in place, and there's no longer a problem.
>>
>> Duncan Murdoch
>>
>>> Ideally, the check can remain, but scoped appropriately.
>>>
>>>
>>> On Sun, Mar 2, 2025 at 6:49?AM Duncan Murdoch
>>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>>
>>>  ??? You seem to be taking a confontational tone, which isn't likely to
>>>  ??? encourage a reasonable dialogue.
>>>
>>>  ??? I've looked for other messages on this, and didn't see any besides
>>> this
>>>  ??? one explaining why including check_rust() in the checks is a problem.
>>>  ??? The problem you talk about here is that it encourages vendoring,
>>> which
>>>  ??? makes it harder for package authors to count downloads.
>>>
>>>  ??? To be honest, that doesn't seem like a very serious problem.? I
>>> assume
>>>  ??? the packages ("crates") we are talking about are open source, so
>>>  ??? this is
>>>  ??? entirely in the spirit of how they are allowed to be distributed.
>>>
>>>  ??? If they aren't open source, then users of those packages should be
>>>  ??? warned about that, and a check failure is a good way to do that.
>>>
>>>  ??? So you need to explain why it is important to be able to download and
>>>  ??? install software and not be warned about it.
>>>
>>>  ??? I am not in R Core or CRAN, but I can suggest why it is better to
>>>  ??? include source in the package:? it makes the use of that package more
>>>  ??? reliable in the future.? It's not uncommon to run an R computation
>>> that
>>>  ??? was written a few years ago.? Sometimes libraries or R have changed,
>>>  ??? and
>>>  ??? a user will need to go back to a previous version to reproduce the
>>>  ??? calculation.? Being able to able to rebuild a system as it would have
>>>  ??? been back then is important.
>>>
>>>  ??? Is that possible if the package needs to make a download?? The
>>> download
>>>  ??? site that worked a few years ago may no longer exist.? If the site
>>>  ??? exists, the code versions there may be different.
>>>
>>>  ??? Those are some of the issues that Simon was alluding to.
>>>
>>>  ??? Duncan Murdoch
>>>
>>>
>>>
>>>  ??? On 2025-03-02 5:45 a.m., Mossa Merhi Reimert via R-devel wrote:
>>>  ???? > Dear Simon Urbanek,
>>>  ???? >
>>>  ???? > There has been very little engagement with the issue I referred
>>>  ??? to. If it was decided that this ?check? ought to be part of the
>>>  ??? default checks for R,
>>>  ???? > then that could have been written to us. Either on the
>>>  ??? bugs.r-project.org <http://bugs.r-project.org> or the proposed
>>>  ??? patch. Before we talk about anything else,
>>>  ???? > it does seem very strange that we cannot get a reasonable
>>>  ??? dialogue going.
>>>  ???? >
>>>  ???? > I would like to say that the R/Rust community has grown
>>>  ??? substantially. From my end, there are 3 bindings project, extendr,
>>>  ??? savvy, and roxido.
>>>  ???? > Then, there are now many rust-based packages on CRAN, see this
>>>  ??? most recent compiled list https://github.com/nanxstats/r-rust-pkgs
>>>  ??? <https://github.com/nanxstats/r-rust-pkgs>.
>>>  ???? > There is also proof-of-concept
>>>  ??? https://github.com/r-rust/hellorust
>>>  ??? <https://github.com/r-rust/hellorust> that integrates `cargo`,
>>>  ??? rust?s official build system, with R?s package build system,
>>>  ???? > and https://github.com/extendr/hellorustc
>>>  ??? <https://github.com/extendr/hellorustc>, which showcases how Rust
>>>  ??? compiler could be directly linked with R?s package system.
>>>  ???? >
>>>  ???? >? ?Let me say, that the current R CMD check is not meant to be
>>>  ??? ?helpful?. When a package is built, `cargo` tells the user
>>>  ??? ?Downloading crates?.
>>>  ???? > Thus, this information is already conveyed to the user.
>>>  ???? >
>>>  ???? > Personally, I do wish we could debate this requirement further. I
>>>  ??? do not believe that having R-packages on CRAN vendor rust
>>> dependencies
>>>  ???? > as a good policy. Download statistics is a success metric of a
>>>  ??? given r-package and rust packages. By insisting on vendoring, and
>>> thus
>>>  ???? > side-stepping `cargo` / crates.io <http://crates.io>, we are
>>>  ??? robbing upstream authors of their download-numbers. I do not think
>>>  ??? such policy is honourable.
>>>  ???? >
>>>  ???? > While C/C++ do not have official package repositories, it could
>>>  ??? be thought of, as fair game, to have CRAN act as a pseudo package
>>>  ??? manager for C/C++ libraries.
>>>  ???? > I?m not going to argue for or against this part.
>>>  ???? >
>>>  ???? > There are many objections from the CRAN side to all things
>>>  ??? related to Rust. I don?t want to open multiple topics in the same
>>>  ??? thread.
>>>  ???? > But there is plenty to bring up. And I had hoped we could talk
>>>  ??? this little issue through, before embarking on a larger discussion.
>>>  ???? > I do not appreciate the ?random demands? comment, as this is not
>>>  ??? a demand, nor is it random.
>>>  ???? > I have inquired my end of the community for suggestions
>>>  ???? > to compile a larger proposal, but then I was afraid that this
>>>  ??? would be perceived as a big, bulky demand.
>>>  ???? >
>>>  ???? > Rust is not C/C++/Java, and the support for Rust cannot look like
>>>  ??? the support for these languages.
>>>  ???? >
>>>  ???? >
>>>  ???? >
>>>  ???? > From: Simon Urbanek <simon.urbanek at R-project.org>
>>>  ???? > Date: Sunday, 2 March 2025 at 00.39
>>>  ???? > To: Mossa Merhi Reimert <mossa at sund.ku.dk
>>> <mailto:mossa at sund.ku.dk>>
>>>  ???? > Cc: r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>  ??? <r-devel at r-project.org <mailto:r-devel at r-project.org>>
>>>  ???? > Subject: Re: [Rd] R CMD check and CRAN's Rust policy
>>>  ???? > [Du f?r ikke ofte mails fra simon.urbanek at r-project.org
>>>  ??? <mailto:simon.urbanek at r-project.org>. F? mere at vide om, hvorfor
>>>  ??? dette er vigtigt, p? https://aka.ms/LearnAboutSenderIdentification
>>>  ??? <https://aka.ms/LearnAboutSenderIdentification> ]
>>>  ???? >
>>>  ???? > Mossa,
>>>  ???? >
>>>  ???? > the issue you cite is lacking any pertinent information and it's
>>>  ??? not even clear why it should be an issue. The check is perfectly
>>>  ??? justified, it just reports whether a package using rust declares
>>>  ??? this correctly and where it downloads 3rd party content - something
>>>  ??? that is important to R users in general and not related to CRAN. I
>>>  ??? don't see how any of this is "prohibitive" it just calls out what
>>>  ??? the package is already doing.
>>>  ???? >
>>>  ???? > As discussed before, my hope was that the "R"ust community will
>>>  ??? mature enough to work on proper support. It is not clear that it
>>>  ??? happened yet, but once it does it would make sense to talk about
>>>  ??? support just as we have for C, C++ and Java, so certainly that
>>>  ??? should be the right discussion. However, it will have to start with
>>>  ??? some thinking and a proposal on how the associated issues (compiler
>>>  ??? support, versioning, dependency sources etc.) are to be addressed,
>>>  ??? as opposed to making random demands. All this has nothing to do with
>>>  ??? CRAN so the issue you mention seems irrelevant to the progress. Also
>>>  ??? I'd like to know what are the "challenges embedded in R itself".
>>>  ???? >
>>>  ???? > Cheers,
>>>  ???? > Simon
>>>  ???? >
>>>  ???? >
>>>  ???? >> On Mar 2, 2025, at 8:45 AM, Mossa Merhi Reimert via R-devel
>>>  ??? <r-devel at r-project.org <mailto:r-devel at r-project.org>> wrote:
>>>  ???? >>
>>>  ???? >> Hello everyone!
>>>  ???? >>
>>>  ???? >> I'm Mossa, I'm one of the maintainers of extendr, an automated
>>>  ??? generation of bindings project for
>>>  ???? >> Rust code, for use in R-packages.
>>>  ???? >>
>>>  ???? >> I'm writing to you, as R 4.4.3 was just released, and there have
>>>  ??? not been
>>>  ???? >> follow-up on an issue important to us. Link to the issue as
>>>  ??? discussed on r-devel
>>>  ???? >> https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
>>>  ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>
>>>  ???? >>
>>>  ???? >> A community member has provided a suggestion to a patch here
>>>  ??? https://github.com/r-devel/r-svn/pull/182
>>>  ??? <https://github.com/r-devel/r-svn/pull/182>, and we have also
>>>  ??? attempted to bring it up on
>>>  ???? >> Bugzilla: https://bugs.r-project.org/show_bug.cgi?id=18806
>>>  ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>
>>>  ???? >>
>>>  ???? >> TLDR: Default `R CMD check` uses additional CRAN-specific checks
>>>  ??? for Rust,
>>>  ???? >> instead of keeping this behind the --as-cran flag.
>>>  ???? >>
>>>  ???? >> I would like to say, that there is a growing interest in Rust
>>>  ??? within the R community.
>>>  ???? >> And generally, Rust becoming a widely adopted language within
>>>  ??? the Python community (including the scientific part of that
>>>  ??? community). It is time to deal with the
>>>  ???? >> pain points with using Rust in R.
>>>  ???? >>
>>>  ???? >> Therefore, I would kindly ask that we have a dialogue on how to
>>>  ??? remedy the issue above first, and how we may deal with other issues
>>>  ??? going forward. There are both challenges embedded in R itself, and
>>>  ??? the current CRAN policy for Rust is prohibitive.
>>>  ???? >>
>>>  ???? >>
>>>  ???? >>
>>>  ???? >> Mossa Merhi Reimert
>>>  ???? >> Postdoctoral Researcher
>>>  ???? >>
>>>  ???? >> K?benhavns Universitet
>>>  ???? >> Department of Veterinary and Animal Sciences
>>>  ???? >> Animal Welfare and Disease Control
>>>  ???? >> Gr?nneg?rdsvej 8
>>>  ???? >> 1870 Frederiksberg C
>>>  ???? >> Denmark
>>>  ???? >>
>>>  ???? >> +45 35324135
>>>  ???? >> mossa at sund.ku.dk
>>>  ??? <mailto:mossa at sund.ku.dk><mailto:mossa at sund.ku.dk
>>>  ??? <mailto:mossa at sund.ku.dk>>
>>>  ???? >>
>>>  ???? >>
>>>  ???? >>? ? ? ? [[alternative HTML version deleted]]
>>>  ???? >>
>>>  ???? >> ______________________________________________
>>>  ???? >> R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>>  ???? >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>  ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>  ???? >
>>>  ???? >? ? ? ?[[alternative HTML version deleted]]
>>>  ???? >
>>>  ???? > ______________________________________________
>>>  ???? > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>>  ???? > https://stat.ethz.ch/mailman/listinfo/r-devel
>>>  ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>
>>>  ??? ______________________________________________
>>>  ??? R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>>>  ??? https://stat.ethz.ch/mailman/listinfo/r-devel
>>>  ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>


From @|mon@urb@nek @end|ng |rom R-project@org  Sun Mar  2 20:59:18 2025
From: @|mon@urb@nek @end|ng |rom R-project@org (Simon Urbanek)
Date: Mon, 3 Mar 2025 08:59:18 +1300
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
Message-ID: <6156CEC1-8C11-4E5A-9871-67E27E5C9F48@R-project.org>

Mossa,


> On Mar 2, 2025, at 11:45 PM, Mossa Merhi Reimert <mossa at sund.ku.dk> wrote:
> 
> There has been very little engagement with the issue I referred to. If it was decided that this ?check? ought to be part of the default checks for R, then that could have been written to us. Either on the bugs.r-project.org or the proposed patch. Before we talk about anything else, it does seem very strange that we cannot get a reasonable dialogue going.
>  

I don't see anything from you on this list - your first engagement was yesterday. I have no idea what you refer to as "us" and what makes you think you should have been notified if no one heard from you before. A start of any engagement is to start communication, so here we are, perhaps not the most fortunate way to start off, but we have a discussion and there is hope.


> I would like to say that the R/Rust community has grown substantially. From my end, there are 3 bindings project, extendr, savvy, and roxido. Then, there are now many rust-based packages on CRAN, see this most recent compiled list https://github.com/nanxstats/r-rust-pkgs. There is also proof-of-concept https://github.com/r-rust/hellorust that integrates `cargo`, rust?s official build system, with R?s package build system, and https://github.com/extendr/hellorustc, which showcases how Rust compiler could be directly linked with R?s package system.
>  

I think this part of the problem - there is no systematic rust support, so each package author does something differently. As much as it is nice to have the freedom to have many different implementation of the same thing, I would argue that in cases like language support it makes more sense to combine the effort into one solution (after everyone experimented and gained enough experience) that is easy to manage and is well maintained. This is what happened to most mature languages such as C++, Java and Python. That would avoid the "hacks" in place today (I'm referring to the check).


>  Let me say, that the current R CMD check is not meant to be ?helpful?. When a package is built, `cargo` tells the user ?Downloading crates?. Thus, this information is already conveyed to the user.
>  
> Personally, I do wish we could debate this requirement further. I do not believe that having R-packages on CRAN vendor rust dependencies as a good policy. Download statistics is a success metric of a given r-package and rust packages. By insisting on vendoring, and thus side-stepping `cargo` / crates.io, we are robbing upstream authors of their download-numbers. I do not think such policy is honourable.
>  


You are jumping issues here: as I said before this has nothing to do with CRAN. So let us first take CRAN out of the picture and talk about the check. The check does two things: a) it checks that the package correctly declares rust dependency and  b) checks whether the package uses 3rd party dynamic downloads. Since the "R"ust community has yet to come up with any systematic rust support, both seem very reasonable checks. We want to know if a package requires rust by checking the DESCRIPTION file alone so the user can make an informed decision whether they want (or even can) use the package. It is also important to know if a package can accesses 3rd party resources online. Due to rising security threats it is increasingly common to not allow analytics machines to have access to the Internet so sensitive data cannot be leaked. It also opens the can of legality as the resulting software may not adhere to the license of the package and there is no guarantee that the user will still have the license. Moreover, reproducibility is very important to R users so it should be possible to reproduce the installation - which excludes 3rd party distributed systems which don't have any such guarantees unless they provide a way to fully vendor dependencies. So, in short, there are many reasons why the user should know about the things checked so they can make informed decisions. Whether this is the best way to signal that is up for debate.

Your argument is that the important reason is a popularity contest based on download statistics. I would argue that it is a very weak reason, since vast majority of R users does not use source installations to install packages, so there is no "robbing" of upstream authors - the statistics don't reflect real usage anyway.

If you want to propose improvements to the check, I'm sure it would be appreciated, but putting it behind --as-cran doesn't seem the right approach nor does that solve the problem in any way as the issues are not CRAN-specifc. I would think that some proposal to declare rust requirements (incl. toolchain) and have declared a way to vendor dependencies to address off-line install, licensing and security issues uniformly for rust packages would be steps in the right direction.


> While C/C++ do not have official package repositories, it could be thought of, as fair game, to have CRAN act as a pseudo package manager for C/C++ libraries.
> I?m not going to argue for or against this part.
>  
> There are many objections from the CRAN side to all things related to Rust. I don?t want to open multiple topics in the same thread.
> But there is plenty to bring up. And I had hoped we could talk this little issue through, before embarking on a larger discussion.
> I do not appreciate the ?random demands? comment, as this is not a demand, nor is it random.
> I have inquired my end of the community for suggestions
> to compile a larger proposal, but then I was afraid that this would be perceived as a big, bulky demand.
>  
> Rust is not C/C++/Java, and the support for Rust cannot look like the support for these languages.
>  


Why not? They all require compilers, ways to deal with dependencies and produce binaries - so does Rust. It's just one of many similar languages. The key is to have proper support instead of having each package deal with the complexities alone.

Cheers,
Simon


From h@w|ckh@m @end|ng |rom gm@||@com  Wed Mar  5 14:47:04 2025
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Wed, 5 Mar 2025 07:47:04 -0600
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <20250206181812.5155d6ed@arachnoid>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net> <26509.10892.521351.954386@hornik.net>
 <26512.37984.542732.125792@hornik.net>
 <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>
 <20250123121008.4338cff0@Tarkus> <26514.5904.863904.292546@hornik.net>
 <20250206181812.5155d6ed@arachnoid>
Message-ID: <CABdHhvHVftEyQQ3TRA8xR9xYCLgOYRPFPiQ-4TMqcbyBokAisQ@mail.gmail.com>

Unfortunately your test generates a false positive for httr2 (
https://cran.r-project.org/web/checks/check_results_httr2.html) and other
tidyverse packages where we use the base pipe in examples, but carefully
disable them for older versions of R.

Hadley

On Thu, Feb 6, 2025 at 9:18?AM Ivan Krylov via R-devel <
r-devel at r-project.org> wrote:

> On Thu, 23 Jan 2025 11:16:48 +0100
> Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>
> > My guess would be that the new syntax is particularly prominently used
> > in examples: if so, it would be good to also have coverage for this.
>
> In today's CRAN snapshot, there turned out to be 198 packages that use
> 4.1 syntax in examples but not in code, 5 packages that use 4.2 syntax
> in examples but 4.1 in the code, and 3 packages that use 4.2 syntax in
> examples but not the code. This may be slightly imprecise because I
> don't have some of the Rd macro packages installed and run
> Rd2ex(stages=NULL) on manually-parsed Rd files without installing the
> packages.
>
> Attaching a patch that checks the syntax used in Rd examples at the
> same time as the main R code, not necessarily the best way to perform
> this check. Is it perhaps worth separating R/* checks from man/*.Rd
> checks? Should R CMD check try to reuse the Rd database from the
> installed copy of the package?
>
> --
> Best regards,
> Ivan
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>


-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From @oko| @end|ng |rom |n@@-tou|ou@e@|r  Wed Mar  5 15:03:24 2025
From: @oko| @end|ng |rom |n@@-tou|ou@e@|r (Serguei Sokol)
Date: Wed, 5 Mar 2025 15:03:24 +0100
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <CABdHhvHVftEyQQ3TRA8xR9xYCLgOYRPFPiQ-4TMqcbyBokAisQ@mail.gmail.com>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net> <26509.10892.521351.954386@hornik.net>
 <26512.37984.542732.125792@hornik.net>
 <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>
 <20250123121008.4338cff0@Tarkus> <26514.5904.863904.292546@hornik.net>
 <20250206181812.5155d6ed@arachnoid>
 <CABdHhvHVftEyQQ3TRA8xR9xYCLgOYRPFPiQ-4TMqcbyBokAisQ@mail.gmail.com>
Message-ID: <2b855a17-2e93-418b-85a9-afa2e0e8100f@insa-toulouse.fr>

Le 05/03/2025 ? 14:47, Hadley Wickham a ?crit?:
> Unfortunately your test generates a false positive for httr2 (
> https://cran.r-project.org/web/checks/check_results_httr2.html) and other
> tidyverse packages where we use the base pipe in examples, but carefully
> disable them for older versions of R.
For exemple,? in one of reported files 'iterate_with_offset.Rd' ( 
https://github.com/r-lib/httr2/blob/main/man/iterate_with_offset.Rd ), 
we can see :

\examples{
req <- request(example_url()) |>
 ? req_url_path("/iris") |>
 ? req_throttle(10) |>
 ? req_url_query(limit = 50)
...

the pipe '|>' is well used but I didn't find any check for R version 
prior to 4.1. May be it is done elsewhere?

Best,
Serguei.

>
> Hadley
>
> On Thu, Feb 6, 2025 at 9:18?AM Ivan Krylov via R-devel <
> r-devel at r-project.org> wrote:
>
>> On Thu, 23 Jan 2025 11:16:48 +0100
>> Kurt Hornik <Kurt.Hornik at wu.ac.at> wrote:
>>
>>> My guess would be that the new syntax is particularly prominently used
>>> in examples: if so, it would be good to also have coverage for this.
>> In today's CRAN snapshot, there turned out to be 198 packages that use
>> 4.1 syntax in examples but not in code, 5 packages that use 4.2 syntax
>> in examples but 4.1 in the code, and 3 packages that use 4.2 syntax in
>> examples but not the code. This may be slightly imprecise because I
>> don't have some of the Rd macro packages installed and run
>> Rd2ex(stages=NULL) on manually-parsed Rd files without installing the
>> packages.
>>
>> Attaching a patch that checks the syntax used in Rd examples at the
>> same time as the main R code, not necessarily the best way to perform
>> this check. Is it perhaps worth separating R/* checks from man/*.Rd
>> checks? Should R CMD check try to reuse the Rd database from the
>> installed copy of the package?
>>
>> --
>> Best regards,
>> Ivan
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>


-- 
Serguei Sokol
Ingenieur de recherche INRAE

Cellule Math?matiques
TBI, INSA/INRAE UMR 792, INSA/CNRS UMR 5504
135 Avenue de Rangueil
31077 Toulouse Cedex 04

tel: +33 5 61 55 98 49
email: sokol at insa-toulouse.fr
https://www.toulouse-biotechnology-institute.fr/en/plateformes-plateaux/cellule-mathematiques/


From h@w|ckh@m @end|ng |rom gm@||@com  Wed Mar  5 15:52:54 2025
From: h@w|ckh@m @end|ng |rom gm@||@com (Hadley Wickham)
Date: Wed, 5 Mar 2025 08:52:54 -0600
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <2b855a17-2e93-418b-85a9-afa2e0e8100f@insa-toulouse.fr>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net> <26509.10892.521351.954386@hornik.net>
 <26512.37984.542732.125792@hornik.net>
 <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>
 <20250123121008.4338cff0@Tarkus> <26514.5904.863904.292546@hornik.net>
 <20250206181812.5155d6ed@arachnoid>
 <CABdHhvHVftEyQQ3TRA8xR9xYCLgOYRPFPiQ-4TMqcbyBokAisQ@mail.gmail.com>
 <2b855a17-2e93-418b-85a9-afa2e0e8100f@insa-toulouse.fr>
Message-ID: <CABdHhvHDkFm51UuQ1HEvW+ZtG2TkDAgooqELF7CySuhFrEtXug@mail.gmail.com>

On Wed, Mar 5, 2025 at 8:04?AM Serguei Sokol via R-devel <
r-devel at r-project.org> wrote:

> Le 05/03/2025 ? 14:47, Hadley Wickham a ?crit :
> > Unfortunately your test generates a false positive for httr2 (
> > https://cran.r-project.org/web/checks/check_results_httr2.html) and
> other
> > tidyverse packages where we use the base pipe in examples, but carefully
> > disable them for older versions of R.
> For exemple,  in one of reported files 'iterate_with_offset.Rd' (
> https://github.com/r-lib/httr2/blob/main/man/iterate_with_offset.Rd ),
> we can see :
>
> \examples{
> req <- request(example_url()) |>
>    req_url_path("/iris") |>
>    req_throttle(10) |>
>    req_url_query(limit = 50)
> ...
>
> the pipe '|>' is well used but I didn't find any check for R version
> prior to 4.1. May be it is done elsewhere?
>

Yes: look at the configure script + tools/examples.R

We automatically test all tidyverse packages with the last four versions of
R, and you can see that all checks are fine with R 4.0.5 at (e.g.)
https://github.com/r-lib/httr2/actions/runs/13665095780/job/38204665013

Hadley

-- 
http://hadley.nz

	[[alternative HTML version deleted]]


From |kry|ov @end|ng |rom d|@root@org  Wed Mar  5 16:49:01 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 5 Mar 2025 18:49:01 +0300
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <CABdHhvHVftEyQQ3TRA8xR9xYCLgOYRPFPiQ-4TMqcbyBokAisQ@mail.gmail.com>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net>
 <26509.10892.521351.954386@hornik.net>
 <26512.37984.542732.125792@hornik.net>
 <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>
 <20250123121008.4338cff0@Tarkus>
 <26514.5904.863904.292546@hornik.net>
 <20250206181812.5155d6ed@arachnoid>
 <CABdHhvHVftEyQQ3TRA8xR9xYCLgOYRPFPiQ-4TMqcbyBokAisQ@mail.gmail.com>
Message-ID: <20250305184901.37c54b4c@arachnoid>

? Wed, 5 Mar 2025 07:47:04 -0600
Hadley Wickham <h.wickham at gmail.com> ?????:

> Unfortunately your test generates a false positive for httr2 (
> https://cran.r-project.org/web/checks/check_results_httr2.html) and
> other tidyverse packages where we use the base pipe in examples, but
> carefully disable them for older versions of R.

Please accept my apologies. Indeed, the script [1] called at
configuration time does replace the examples section to avoid parse
errors for example(...). And having example() do nothing (with all code
and an explanation in the help page) is a small cost for having the
rest of the package work on R versions as old as 3.5.

I don't see a way to take this into account, since the workaround is
completely invisible to sufficiently new versions of R. It might be
that the best way forward is to revert the Rd example check.

-- 
Best regards,
Ivan

[1] https://github.com/r-lib/httr2/blob/main/tools/examples.R


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Sat Mar  8 09:23:18 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Sat, 8 Mar 2025 09:23:18 +0100
Subject: [Rd] Depends: R (>= 4.1) for packages that use |> and \(...)
In-Reply-To: <20250305184901.37c54b4c@arachnoid>
References: <20250116144121.5520a9cc@arachnoid>
 <CAFDcVCTTVa+Ea+BoVoag0RJ7LK3P1tyPzBG9vP4U-4w6a4kKKQ@mail.gmail.com>
 <26506.26949.241762.7373@hornik.net>
 <26509.10892.521351.954386@hornik.net>
 <26512.37984.542732.125792@hornik.net>
 <CAP8nD2xthJ5TzwYdok5tjXiWyf4=Y=uGf-sf7FFQKCjzNAACOA@mail.gmail.com>
 <20250123121008.4338cff0@Tarkus>
 <26514.5904.863904.292546@hornik.net>
 <20250206181812.5155d6ed@arachnoid>
 <CABdHhvHVftEyQQ3TRA8xR9xYCLgOYRPFPiQ-4TMqcbyBokAisQ@mail.gmail.com>
 <20250305184901.37c54b4c@arachnoid>
Message-ID: <26571.65142.58708.103532@hornik.net>

>>>>> Ivan Krylov via R-devel writes:

Currently, we have 146 CRAN packages for which the check code finds 4.1
or later syntax additions in the Rd file examples only.  

Ivan kindly tried the effect of checking these with 4.0 (thanks again: I
cannot "easily" do this as Debian testing has libcurl 8 and the 4.0
configure code insists on libcurl 7).  This had 140 packages fail with
parse errors, 3 more for other reasons, and packages

  gmailr httr2 purrr

still pass as using the configure plus tools/examples.R renewcommand for
\examples trick.

So in c87900 I just committed I have simply stoplisted these three in
the check code, and the false positive NOTEs for these should be gone
when this gets picked up.

Thanks for spotting and helping to fix :-)

Best
-k

> ? Wed, 5 Mar 2025 07:47:04 -0600
> Hadley Wickham <h.wickham at gmail.com> ?????:

>> Unfortunately your test generates a false positive for httr2 (
>> https://cran.r-project.org/web/checks/check_results_httr2.html) and
>> other tidyverse packages where we use the base pipe in examples, but
>> carefully disable them for older versions of R.

> Please accept my apologies. Indeed, the script [1] called at
> configuration time does replace the examples section to avoid parse
> errors for example(...). And having example() do nothing (with all code
> and an explanation in the help page) is a small cost for having the
> rest of the package work on R versions as old as 3.5.

> I don't see a way to take this into account, since the workaround is
> completely invisible to sufficiently new versions of R. It might be
> that the best way forward is to revert the Rd example check.

> -- 
> Best regards,
> Ivan

> [1] https://github.com/r-lib/httr2/blob/main/tools/examples.R

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Sun Mar  9 18:15:57 2025
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Sun, 9 Mar 2025 13:15:57 -0400
Subject: [Rd] R-devel (87913) compilation fails at "make vignettes";
 R-4-4 completes and fails "make check"
Message-ID: <CAL6gwnKvncaoD_GSniDQ7jf3VjbbUEcPE+J8EqdbZ92wkuK7FQ@mail.gmail.com>

Hello.

I recently built a new computer and I am now using Windows 11. When
building a distribution of R-devel from source using the most recent
Rtools44, the build consistently fails at the point it is supposed to
build the vignettes from base with the message below. R-4-4-branch
(also 87913) completes without error but fails "make check".

R-devel Error:
```
* DONE (mgcv)
building/updating vignettes for package 'grid' ...
processing 'displaylist.Rnw'
make[2]: *** [Makefile.win:99: vignettes] Error 1
make[1]: *** [Makefile:345: vignettes] Error 2
make: *** [Makefile:395: distribution] Error 2
```
Looking at Makefile.win in .src/library at line 99 shows:

```
vignettes:
@for pkg in grid parallel utils stats; do \
    $(ECHO) "building/updating vignettes for package '$${pkg}' ..."; \
    ($(ECHO) "tools:::.install_package_vignettes(\"$(srcdir)/$${pkg}\",
\"$(top_builddir)/library/$${pkg}\")") | \
        R_DEFAULT_PACKAGES="utils,tools" LC_ALL=C \
  R_LIBS_USER=NULL R_LIBS_SITE=NULL \
          $(R_EXE) > /dev/null || exit 1; \
done
@rm -Rf .vignettes
```

While R-4-4 completes "make distribution" compilation, it fails make check with:

```
Testing examples for package 'tools'
  comparing 'tools-Ex.Rout' to 'tools-Ex.Rout.save' ... NOTE
  1062,1063d1061
  < Warning in file(con, "r") :
  <   file("") only supports open = "w+" and open = "w+b": using the former
  1066,1067c1064,1065
  <  $ file    : chr ""
  <  $ title   : chr ""
  ---
  >  $ file    : chr "grid.Rnw"
  >  $ title   : chr "Introduction to grid"
Testing examples for package 'utils'
Error: running examples in 'utils-Ex.R' failed
Error: testing 'utils' failed
Execution halted
make[3]: *** [Makefile.win:29: test-Examples-Base] Error 1
make[2]: *** [Makefile.common:208: test-Examples] Error 2
make[1]: *** [Makefile.common:193: test-all-basics] Error 1
make: *** [Makefile:333: check-devel] Error 2
```

Some initial research indicated that permission issues can interfere
with vignette building. I have set Rtools44 to run as an administrator
and I confirmed that my build directory and all its subdirectories are
allowed full control by the logged-in windows account.

The only major difference between these sets of runs and those over
the last decade is the chip (Ryzen 9800X3D), which for vignettes
should be irrelevant, and the operating system?Windows 11 Pro instead
of Windows 10 Home. I don't know which change from R-4-4 to R-devel
triggers the error or why R-4-4 completes and fails the check. I have
exhausted my limited knowledge as to how to address the issue. Any
ideas as to why this may be happening and what I could do would be
greatly appreciated.

For completeness:

R VERSION AND TOOLS
R-devel version: 87913
R-4-4-branch:     87913
Rtools version: 6459

HARDWARE
Processor: AMD Ryzen 7 9800X3D 8-Core Processor
Installed RAM :192 GB (190 GB usable)
System type 64-bit operating system, x64-based processor

OPERATING SYSTEM
Edition Windows 11 Pro
Version 24H2
Installed on ?3/?7/?2025
OS build 26100.3194
Experience Windows Feature Experience Pack 1000.26100.48.0

Thank you,

Avi


From @eb@meyer @end|ng |rom |@u@de  Sun Mar  9 18:55:21 2025
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Sun, 9 Mar 2025 18:55:21 +0100
Subject: [Rd] R-devel (87913) compilation fails at "make vignettes";
 R-4-4 completes and fails "make check"
In-Reply-To: <CAL6gwnKvncaoD_GSniDQ7jf3VjbbUEcPE+J8EqdbZ92wkuK7FQ@mail.gmail.com>
References: <CAL6gwnKvncaoD_GSniDQ7jf3VjbbUEcPE+J8EqdbZ92wkuK7FQ@mail.gmail.com>
Message-ID: <97c1b0d7-14f0-415a-8966-b117b59e0c3a@fau.de>

Am 09.03.25 um 18:15 schrieb Avraham Adler:
> Hello.
> 
> I recently built a new computer and I am now using Windows 11. When
> building a distribution of R-devel from source using the most recent
> Rtools44, the build consistently fails at the point it is supposed to
> build the vignettes from base with the message below. R-4-4-branch
> (also 87913) completes without error but fails "make check".
> 
> R-devel Error:
> ```
> * DONE (mgcv)
> building/updating vignettes for package 'grid' ...
> processing 'displaylist.Rnw'
> make[2]: *** [Makefile.win:99: vignettes] Error 1
> make[1]: *** [Makefile:345: vignettes] Error 2
> make: *** [Makefile:395: distribution] Error 2
> ```
> Looking at Makefile.win in .src/library at line 99 shows:
> 
> ```
> vignettes:
> @for pkg in grid parallel utils stats; do \
>      $(ECHO) "building/updating vignettes for package '$${pkg}' ..."; \
>      ($(ECHO) "tools:::.install_package_vignettes(\"$(srcdir)/$${pkg}\",
> \"$(top_builddir)/library/$${pkg}\")") | \
>          R_DEFAULT_PACKAGES="utils,tools" LC_ALL=C \
>    R_LIBS_USER=NULL R_LIBS_SITE=NULL \
>            $(R_EXE) > /dev/null || exit 1; \

The '|| exit 1' only exists since r87822: previously, failures from 
building the base vignettes would be missed.

> done
> @rm -Rf .vignettes
> ```
> 
> While R-4-4 completes "make distribution" compilation, it fails make check with:
> 
> ```
> Testing examples for package 'tools'
>    comparing 'tools-Ex.Rout' to 'tools-Ex.Rout.save' ... NOTE
>    1062,1063d1061
>    < Warning in file(con, "r") :
>    <   file("") only supports open = "w+" and open = "w+b": using the former
>    1066,1067c1064,1065
>    <  $ file    : chr ""
>    <  $ title   : chr ""
>    ---
>    >  $ file    : chr "grid.Rnw"
>    >  $ title   : chr "Introduction to grid"

This output diff from the example in ?tools::vignetteInfo shows that 
your R-4-4 installation indeed lacks base vignettes. Maybe pdflatex 
isn't installed or in the PATH on your new system?

> Testing examples for package 'utils'
> Error: running examples in 'utils-Ex.R' failed
> Error: testing 'utils' failed
> Execution halted
> make[3]: *** [Makefile.win:29: test-Examples-Base] Error 1
> make[2]: *** [Makefile.common:208: test-Examples] Error 2
> make[1]: *** [Makefile.common:193: test-all-basics] Error 1
> make: *** [Makefile:333: check-devel] Error 2
> ```

There should be a file utils-Ex.Rout.fail (I think in tests/Examples/). 
What does it say about the error?

Hope this helps!

	Sebastian Meyer

> 
> Some initial research indicated that permission issues can interfere
> with vignette building. I have set Rtools44 to run as an administrator
> and I confirmed that my build directory and all its subdirectories are
> allowed full control by the logged-in windows account.
> 
> The only major difference between these sets of runs and those over
> the last decade is the chip (Ryzen 9800X3D), which for vignettes
> should be irrelevant, and the operating system?Windows 11 Pro instead
> of Windows 10 Home. I don't know which change from R-4-4 to R-devel
> triggers the error or why R-4-4 completes and fails the check. I have
> exhausted my limited knowledge as to how to address the issue. Any
> ideas as to why this may be happening and what I could do would be
> greatly appreciated.
> 
> For completeness:
> 
> R VERSION AND TOOLS
> R-devel version: 87913
> R-4-4-branch:     87913
> Rtools version: 6459
> 
> HARDWARE
> Processor: AMD Ryzen 7 9800X3D 8-Core Processor
> Installed RAM :192 GB (190 GB usable)
> System type 64-bit operating system, x64-based processor
> 
> OPERATING SYSTEM
> Edition Windows 11 Pro
> Version 24H2
> Installed on ?3/?7/?2025
> OS build 26100.3194
> Experience Windows Feature Experience Pack 1000.26100.48.0
> 
> Thank you,
> 
> Avi
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Sun Mar  9 20:15:12 2025
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Sun, 9 Mar 2025 15:15:12 -0400
Subject: [Rd] R-devel (87913) compilation fails at "make vignettes";
 R-4-4 completes and fails "make check"
In-Reply-To: <97c1b0d7-14f0-415a-8966-b117b59e0c3a@fau.de>
References: <CAL6gwnKvncaoD_GSniDQ7jf3VjbbUEcPE+J8EqdbZ92wkuK7FQ@mail.gmail.com>
 <97c1b0d7-14f0-415a-8966-b117b59e0c3a@fau.de>
Message-ID: <CAL6gwnLbzSA7u_Xk78FkaggbD6fAUy6nAXn3NCWsNMnAsuYK5w@mail.gmail.com>

Thank you very much, Sebastian. Your suggestion about checking the
FAIL solved the problem. It reminded me that GCC 12+ has a bug
regarding AVX2 alignments on Windows, which manifests when calling
`agrep` or `adist`, the latter being precisely the point of failure in
the FAIL file. See this thread [1] and this post in particular [2] for
more detail. Restoring passing "-Wa,-muse-unaligned-vector-move" to
EOPTS and Makevars solved the problem and check-devel passes. Tomas is
going to be rightfully annoyed with me for forgetting!

Thank you again!!

Avi

[1] https://stat.ethz.ch/pipermail/r-sig-windows/2024q1/000106.html
[2] https://stat.ethz.ch/pipermail/r-sig-windows/2024q1/000113.html

On Sun, Mar 9, 2025 at 1:55?PM Sebastian Meyer <seb.meyer at fau.de> wrote:
>
> Am 09.03.25 um 18:15 schrieb Avraham Adler:
> > Hello.
> >
> > I recently built a new computer and I am now using Windows 11. When
> > building a distribution of R-devel from source using the most recent
> > Rtools44, the build consistently fails at the point it is supposed to
> > build the vignettes from base with the message below. R-4-4-branch
> > (also 87913) completes without error but fails "make check".
> >
> > R-devel Error:
> > ```
> > * DONE (mgcv)
> > building/updating vignettes for package 'grid' ...
> > processing 'displaylist.Rnw'
> > make[2]: *** [Makefile.win:99: vignettes] Error 1
> > make[1]: *** [Makefile:345: vignettes] Error 2
> > make: *** [Makefile:395: distribution] Error 2
> > ```
> > Looking at Makefile.win in .src/library at line 99 shows:
> >
> > ```
> > vignettes:
> > @for pkg in grid parallel utils stats; do \
> >      $(ECHO) "building/updating vignettes for package '$${pkg}' ..."; \
> >      ($(ECHO) "tools:::.install_package_vignettes(\"$(srcdir)/$${pkg}\",
> > \"$(top_builddir)/library/$${pkg}\")") | \
> >          R_DEFAULT_PACKAGES="utils,tools" LC_ALL=C \
> >    R_LIBS_USER=NULL R_LIBS_SITE=NULL \
> >            $(R_EXE) > /dev/null || exit 1; \
>
> The '|| exit 1' only exists since r87822: previously, failures from
> building the base vignettes would be missed.
>
> > done
> > @rm -Rf .vignettes
> > ```
> >
> > While R-4-4 completes "make distribution" compilation, it fails make check with:
> >
> > ```
> > Testing examples for package 'tools'
> >    comparing 'tools-Ex.Rout' to 'tools-Ex.Rout.save' ... NOTE
> >    1062,1063d1061
> >    < Warning in file(con, "r") :
> >    <   file("") only supports open = "w+" and open = "w+b": using the former
> >    1066,1067c1064,1065
> >    <  $ file    : chr ""
> >    <  $ title   : chr ""
> >    ---
> >    >  $ file    : chr "grid.Rnw"
> >    >  $ title   : chr "Introduction to grid"
>
> This output diff from the example in ?tools::vignetteInfo shows that
> your R-4-4 installation indeed lacks base vignettes. Maybe pdflatex
> isn't installed or in the PATH on your new system?
>
> > Testing examples for package 'utils'
> > Error: running examples in 'utils-Ex.R' failed
> > Error: testing 'utils' failed
> > Execution halted
> > make[3]: *** [Makefile.win:29: test-Examples-Base] Error 1
> > make[2]: *** [Makefile.common:208: test-Examples] Error 2
> > make[1]: *** [Makefile.common:193: test-all-basics] Error 1
> > make: *** [Makefile:333: check-devel] Error 2
> > ```
>
> There should be a file utils-Ex.Rout.fail (I think in tests/Examples/).
> What does it say about the error?
>
> Hope this helps!
>
>         Sebastian Meyer
>
> >
> > Some initial research indicated that permission issues can interfere
> > with vignette building. I have set Rtools44 to run as an administrator
> > and I confirmed that my build directory and all its subdirectories are
> > allowed full control by the logged-in windows account.
> >
> > The only major difference between these sets of runs and those over
> > the last decade is the chip (Ryzen 9800X3D), which for vignettes
> > should be irrelevant, and the operating system?Windows 11 Pro instead
> > of Windows 10 Home. I don't know which change from R-4-4 to R-devel
> > triggers the error or why R-4-4 completes and fails the check. I have
> > exhausted my limited knowledge as to how to address the issue. Any
> > ideas as to why this may be happening and what I could do would be
> > greatly appreciated.
> >
> > For completeness:
> >
> > R VERSION AND TOOLS
> > R-devel version: 87913
> > R-4-4-branch:     87913
> > Rtools version: 6459
> >
> > HARDWARE
> > Processor: AMD Ryzen 7 9800X3D 8-Core Processor
> > Installed RAM :192 GB (190 GB usable)
> > System type 64-bit operating system, x64-based processor
> >
> > OPERATING SYSTEM
> > Edition Windows 11 Pro
> > Version 24H2
> > Installed on ?3/?7/?2025
> > OS build 26100.3194
> > Experience Windows Feature Experience Pack 1000.26100.48.0
> >
> > Thank you,
> >
> > Avi
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel


From pd@|gd @end|ng |rom gm@||@com  Mon Mar 10 14:19:50 2025
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Mon, 10 Mar 2025 14:19:50 +0100
Subject: [Rd] R 4.5.0 scheduled for April 11
Message-ID: <983AEC97-BB06-46E4-8691-4C0F90F76F7B@gmail.com>

Full schedule is available on developer.r-project.org (pending update from SVN).

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com

______________________________________________
R-devel at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-devel


From ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de  Mon Mar 10 14:36:57 2025
From: ||gge@ @end|ng |rom @t@t|@t|k@tu-dortmund@de (Uwe Ligges)
Date: Mon, 10 Mar 2025 14:36:57 +0100
Subject: [Rd] write_PACKAGES's fields default
In-Reply-To: <CAN+W6_uyiPFrxZY+1jpZfWr2OuyB8GjZWGasyKe3-0=Uj2R3iQ@mail.gmail.com>
References: <CAN+W6_uyiPFrxZY+1jpZfWr2OuyB8GjZWGasyKe3-0=Uj2R3iQ@mail.gmail.com>
Message-ID: <945a0cfd-76ea-402b-941f-6f74474ec156@statistik.tu-dortmund.de>



On 01.03.2025 13:07, Llu?s Revilla wrote:
> Dear list,
> 
> I'm trying to get some details from repositories with
> available.packages. However, despite being included on the DESCRIPTION
> files they are not available.
> 
> ap <- utils::available.packages(fields = "Additional_repositories",
>      filters = c("CRAN", "duplicates"),
>      ignore_repo_cache =  TRUE,
>      repos = "https://cran.r-project.org")
> ap[, "Additional_repositories"] |> is.na() |> all()
> ## [1] TRUE
> 
> However, some packages like Seurat have the Additional_repositories
> field [2]. If I try with another repository (Bioconductor software
> repository):
> 
> ap <- available.packages(fields = "biocViews",
>      ignore_repo_cache =  TRUE,
>      repos = "https://bioconductor.org/packages/3.21/bioc")
> ap[, "biocViews"] |> is.na() |> all()
> ## [1] TRUE
> 
> It also misses the BiocViews field compulsory on that repository.
> Both repositories use tools::write_PACKAGES [3][4] to generate the
> file read by available.packages. This function writes by default
> fields "needed by available.packages".
> 
> However, it is unclear what is needed for available.packages.
> According to its documentation, it returns "details corresponding to
> packages currently available at one or more repositories". To me this
> would mean that fields on the DESCRIPTION files should appear, but the
> default of write_PACKAGES doesn't write other fields besides
> '"Package"', '"Version"', '"Priority"',  '"Depends"', '"Imports"',
> '"LinkingTo"', '"Suggests"', '"Enhances"', '"OS_type"', '"License"'
> and '"Archs"'.
> 
> I could approach each repository and ask to include more fields.
> However, to match the documentation on available.packages and help all
> repository administrators it would make sense to change the default on
> write_PACKAGES.
> Could the default fields be changed, so
> that all fields available on packages' DESCRIPTION to
> PACKAGES(.gz,.rds). Perhaps with fields = TRUE?
> If this is too much it would be great if fields documented by Writing
> R Extensions are written on PACKAGES.
> This modification would make it easier for all to reuse repository data.
> 
> Many thanks for your consideration,
> 
> Llu?s
> 
> PD: From CRAN perspective CRAN_packages_db() function can be used to
> get Additional_repositories, but this is limited to CRAN and won't
> work for BiocViews on Bioconductor or for other arbitrary fields like
> '"RoxygenNote"'.


I'd indeed use

Cpdb <- tools:::CRAN_package_db()
Bpdb <- tools:::BioC_package_db()

for the two mentioned repos. ALso, PACLAGES.... is downloaded very 
frequently and should not grow too much.

Is there a use case why available.packages() should provide this info 
while not being less performant for package installatons etc.?

Best,
Uwe Ligges




> 
> [1]: https://stat.ethz.ch/pipermail/r-devel/2024-June/083477.html
> [2]: https://cran.r-project.org/package=Seurat
> [3]: https://svn.r-project.org/R-dev-web/trunk/CRAN/QA/Uwe/make/writeCRANPackages.R
> [4]: https://github.com/Bioconductor/BBS/blob/devel/utils/makePropagationStatusDb.R#L348
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Mon Mar 10 16:52:59 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Mon, 10 Mar 2025 16:52:59 +0100
Subject: [Rd] S4: show() method for "MethodDefinition": show non-trivial
 generic
Message-ID: <26575.2779.682772.959686@stat.math.ethz.ch>

Context: We are working to add complex and integer (sparse and dense)
	 matrix classes to package Matrix.

I'm working with "Ops", notably "Arith" group methods in order
to ensure that all combinations of classes  and arithmetic,
comparison, etc operators work.
 { and yes, if you don't know anything about S4 or group methods
   (which also exist for S3 or S7) you may now press "delete message"
   and go on to something else ...

   In the other case, maybe browse ?S4groupGeneric in R or on the web
   https://rdrr.io/r/methods/S4groupGeneric.html  
 }

Debugging problems and testing, for me always involves lots of
showMethods(..) and selectMethod(..) calls such as, say,

 selectMethod("+", c("lgCMatrix", "nMatrix"))

For the current (CRAN) version of Matrix, this prints the method
definition, and then ends in

   ...............
   }
   <environment: namespace:Matrix>

   Signatures:
	   e1          e2       
   target  "lgCMatrix" "nMatrix"
   defined "lMatrix"   "nMatrix"
   >

I did only ask for the "+" method, but of course,
e.g., when looking where we got this implemented, it is interesting
to note if this is from a "+" or an "Arith" or even (most
generally), an "Ops" method definition.

Now, fortunately, the selectMethod() object *does* contain this
information in its `generic` slot, but the show() method does not show it.

I propose to look into fixing this situation, such that in cases
as this one, there would be one additional line of show() output
   ` Generic: "Ops" `
and it would show (not the '~~~~~~~~~~~~~~' line I only added
here for visibility) :


   ...............
   }
   <environment: namespace:Matrix>

   Generic: "Ops"
   ~~~~~~~~~~~~~~
   Signatures:
	   e1          e2       
   target  "lgCMatrix" "nMatrix"
   defined "lMatrix"   "nMatrix"
   >


Of course this may break people's "pipelines" if they rely on
exact reproduction of R's console (or *.Rout R batch) output.
Apart from that, I see really advantages here, and I don't expect
the net effect to be problematic.

It may affect  the many Bioconductor packages using S4, and I'm
particularly glad for feedback from "there".

With thanks in advance,
Martin


--
Martin Maechler
ETH Zurich   and   R Core team


From |@go@g|ne @end|ng |rom @jd@e@  Mon Mar 10 17:22:23 2025
From: |@go@g|ne @end|ng |rom @jd@e@ (=?UTF-8?Q?Iago_Gin=C3=A9-V=C3=A1zquez?=)
Date: Mon, 10 Mar 2025 17:22:23 +0100
Subject: [Rd] Customizing width of input in Rterm
In-Reply-To: <20250226144203.203a8a31@arachnoid>
References: <725b0cf4-4874-4747-9bba-4ae24891ba38@sjd.es>
 <20250226144203.203a8a31@arachnoid>
Message-ID: <8c90ae43-cad4-411a-af12-1ef08d7f492f@sjd.es>

Thank you, Ivan!

On 26/02/2025 12:42, Ivan Krylov wrote:

> ? Fri, 21 Feb 2025 11:52:41 +0100
> Iago Gin?-V?zquez<iago.gine at sjd.es> ?????:
>
>> When using Rterm.exe (on Windows, I didn?t check Linux) only a
>> limited number of characters is displayed in the input lines,
>> independent on the |width| option, and, when navigating through the
>> command history this becomes very uncomfortable, since a command is
>> not fully displayed and, for example, it is very difficult to know
>> which parts of a command are being edited.
> The patch at the end of this message reads the console width on startup
> and handles the console resize events while getline() is running. The
> automatic resizing doesn't look nice due to gl_redraw() starting a new
> line newline before redrawing the prompt, but it works.
>
> This may have accessibility implications since it changes the behaviour
> of Rterm.exe, which is what A. Jonathan R. Godfrey recommends for blind
> Windows users [1]. I've experimented with NVDA and didn't notice
> anything breaking in Windows 10 terminal or mintty.exe, but it's hard
> to be sure without the real experience of using a screen reader.
>
> Is this approach worth adopting? Is it better to erase the current line
> instead of starting a new one? options(setWidthOnResize) could be
> implemented similarly but may require more care due to
> R_SetOptionWidth(...) evaluating R code.
>
> Index: src/gnuwin32/getline/getline.c
> ===================================================================
> --- src/gnuwin32/getline/getline.c	(revision 87795)
> +++ src/gnuwin32/getline/getline.c	(working copy)
> @@ -25,6 +25,7 @@
>   int 		(*gl_in_hook)(char *) = 0;
>   int 		(*gl_out_hook)(char *) = 0;
>   int 		(*gl_tab_hook)(char *, int, int *) = gl_tab;
> +static int      do_setwidth(int w);
>   
>   #include <Rconfig.h>
>   #include <R_ext/Riconv.h>
> @@ -214,6 +215,10 @@
>            The bug still exists in Windows 10, and thus we now call
>            GetConsoleInputW to get uchar.UnicodeChar. */
>         ReadConsoleInputW(Win32InputStream, &r, 1, &a);
> +      if (r.EventType == WINDOW_BUFFER_SIZE_EVENT) {
> +        if (do_setwidth(r.Event.WindowBufferSizeEvent.dwSize.X))
> +          gl_redraw();
> +      }
>         if (!(r.EventType == KEY_EVENT)) break;
>         st = r.Event.KeyEvent.dwControlKeyState;
>         vk = r.Event.KeyEvent.wVirtualKeyCode;
> @@ -487,6 +492,11 @@
>       gl_w2e_map = gl_realloc(NULL, 0, BUF_SIZE, sizeof(size_t));
>   
>       gl_char_init();
> +
> +    CONSOLE_SCREEN_BUFFER_INFO csb;
> +    GetConsoleScreenBufferInfo(Win32OutputStream, &csb);
> +    do_setwidth(csb.dwSize.X);
> +
>       gl_init_done = 1;
>   }
>   
> @@ -536,13 +546,21 @@
>       BUF_SIZE = newsize;
>   }
>   
> +static int
> +do_setwidth(int w)
> +{
> +    /* may be called from gl_getc if a resize event is received */
> +    if (w > 20) {
> +	gl_w_termw = w;
> +	return 1;
> +    }
> +    return 0;
> +}
> +
>   void
>   gl_setwidth(int w)
>   {
> -    /* not used in R; should arrange for redraw */
> -    if (w > 20)
> -	gl_w_termw = w;
> -    else
> +    if (!do_setwidth(w))
>   	gl_error("\n*** Error: minimum screen width is 21\n");
>   }
>   
>
>
&#8203;

-------------- next part --------------
A non-text attachment was scrubbed...
Name: OpenPGP_signature.asc
Type: application/pgp-signature
Size: 665 bytes
Desc: OpenPGP digital signature
URL: <https://stat.ethz.ch/pipermail/r-devel/attachments/20250310/365bb625/attachment.sig>

