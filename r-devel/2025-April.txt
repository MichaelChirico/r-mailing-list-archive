From edd @end|ng |rom deb|@n@org  Tue Apr  1 01:17:48 2025
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Mon, 31 Mar 2025 18:17:48 -0500
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <4a3d45bb-9df2-4cc7-a7ef-5183f9613d03@gmail.com>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
 <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
 <CAL3ufUKSkMXpgSD6-o7dC7tZuD+DmpHaq2JUzuF9+9dosE+XEA@mail.gmail.com>
 <4eb96716-9f8c-4f4e-8d2d-a43feba44392@gmail.com>
 <df6bc0fc-1699-4691-a83c-1606d5db72a7@gmail.com>
 <19f561ae-d787-4f27-b3ba-f63c9b65fba5@gmail.com>
 <CAL3ufUJVe_jgfHH==EcfxuGiSbQ13KRXTSEP8-oYKafCPNR-+A@mail.gmail.com>
 <703123c9-c09e-4e14-8f4e-75ffd3c5931f@gmail.com>
 <CAL3ufULb0DDV94_m9kX2S2iTgiTqSaBUBo7ZD1PTVF6F-Gyb5A@mail.gmail.com>
 <17675b90-69a0-4f21-8d17-27aa2a8fda33@gmail.com>
 <483fe286-5a17-459c-8faf-f87208663188@gmail.com>
 <4a3d45bb-9df2-4cc7-a7ef-5183f9613d03@gmail.com>
Message-ID: <26603.8860.322941.868158@rob.eddelbuettel.com>


It is also pretty straightforward to roll your own actions and / or use
different, simpler YAML setups. I still use a 'rolled forward and maintained
by me now version' of the shell script many of us started with at Travis CI.
It works, is portable across multiple CI backend, and is still a shell script
and easy to customize. I eventually added basic actions that fetch it / do
the setup.  Would be easy to deploy a modified rcmdcheck with it too. It only
covers linux (where it works rather well with r2u for speed, ease of use and
reliability) and macOS, both arm64 and x86_64. See [1] if interested.

Dirk

[1] https://eddelbuettel.github.io/r-ci/

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Apr  1 01:20:00 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 31 Mar 2025 19:20:00 -0400
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <4a3d45bb-9df2-4cc7-a7ef-5183f9613d03@gmail.com>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
 <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
 <CAL3ufUKSkMXpgSD6-o7dC7tZuD+DmpHaq2JUzuF9+9dosE+XEA@mail.gmail.com>
 <4eb96716-9f8c-4f4e-8d2d-a43feba44392@gmail.com>
 <df6bc0fc-1699-4691-a83c-1606d5db72a7@gmail.com>
 <19f561ae-d787-4f27-b3ba-f63c9b65fba5@gmail.com>
 <CAL3ufUJVe_jgfHH==EcfxuGiSbQ13KRXTSEP8-oYKafCPNR-+A@mail.gmail.com>
 <703123c9-c09e-4e14-8f4e-75ffd3c5931f@gmail.com>
 <CAL3ufULb0DDV94_m9kX2S2iTgiTqSaBUBo7ZD1PTVF6F-Gyb5A@mail.gmail.com>
 <17675b90-69a0-4f21-8d17-27aa2a8fda33@gmail.com>
 <483fe286-5a17-459c-8faf-f87208663188@gmail.com>
 <4a3d45bb-9df2-4cc7-a7ef-5183f9613d03@gmail.com>
Message-ID: <8866a57b-fa81-4993-be17-3d9095ebc1c5@gmail.com>

On 2025-03-31 4:50 p.m., Duncan Murdoch wrote:
> Just for fun I forked rcmdcheck and added arguments to it to allow
> particular messages to be changed in severity.
> 
> For example, if the WARNING message says something which matches the
> regexp "Compiled code should not call entry points which might terminate
> R" you could run
> 
>     rcmdcheck::rcmdcheck(".", demote = list(warnings = "Compiled code
> should not call entry points which might terminate R"))
> 
> and the warning will be counted as a NOTE.  The decision about whether
> to signal an error from the run will be based on the value after demotion.
> 
>    I haven't done anything with the Github action, but users can play
> with this fork if they like.  It can be installed using
> 
>     remotes::install_github("dmurdoch/rcmdcheck")

Sorry, that should be

   remotes::install_github("dmurdoch/rcmdcheck at demotions")

Duncan Murdoch

> 
> You can install custom builds in a Github action fairly easily, but it's
> hard to add a new argument to a call deep within the action script.  A
> simpler approach would be to fork my fork and set the default value for
> "demote" to whatever you want, then install your own fork during the
> Github action.
> 
> Comments are welcome.
> 
> Duncan Murdoch
> 
> 
> On 2025-03-31 1:48 p.m., Ben Bolker wrote:
>>
>>
>> On 2025-03-31 1:04 p.m., Duncan Murdoch wrote:
>>> On 2025-03-31 12:41 p.m., Josiah Parry wrote:
>>>> Duncan, the changes to symbols checking was introduced March 22nd see
>>>> https://bugs.r-project.org/show_bug.cgi?id=18789 <https://bugs.r-
>>>> project.org/show_bug.cgi?id=18789> and https://developer.r-
>>>> project.org/blosxom.cgi/R-devel/NEWS/2025/03/22#n2025-03-22 <https://
>>>> developer.r-project.org/blosxom.cgi/R-devel/
>>>> NEWS/2025/03/22#n2025-03-22>. But that is unrelated.
>>>
>>> Sorry, I missed that.
>>>
>>>>
>>>> To Tim's comment?the check is a simple grep of the installation?log
>>>> for "Downloading crates." This could be easily circumvented on CRAN
>>>> and locally by suppressing stdout/err. But that would be adversarial
>>>> and I would like to adhere to the intent of the check.
>>>
>>> I think Tim was suggesting that you modify your Github action to ignore
>>> this particular warning.? The warning would still appear, but it
>>> wouldn't cause a check failure.
>>>
>>> Duncan Murdoch
>>
>>      At a very quick look, I don't see an easy way to do that (but I am
>> admittedly really bad at doing stuff with Github actions). Maybe longer
>> term, but it feels like the best way to do this would be to request a
>> feature in `rcmdcheck` that allowed the user to request ignoring
>> specific warnings (e.g. specified by regexp?), then expose that feature
>> in the r-check-package action (or whatever it's called ...)
>>
>>>
>>>
>>>
>>>>
>>>>
>>>>
>>>> On Mon, Mar 31, 2025 at 9:23?AM Duncan Murdoch
>>>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>>>
>>>>   ??? On 2025-03-31 11:50 a.m., Josiah Parry wrote:
>>>>   ???? > Following up with this as I address the new R-devel "Compiled code
>>>>   ???? > should not call entry points which might terminate R" WARNING and
>>>>   ??? this
>>>>   ???? > issue has reared its head again.
>>>>   ???? >
>>>>   ???? > Would a path forward be an environment variable similar
>>>>   ???? > to?_R_CHECK_CRAN_INCOMING_ to skip this check primarily for GitHub
>>>>   ???? > Actions and CI?
>>>>
>>>>   ??? The "Compiled code should not call entry points which might
>>>>   ??? terminate R"
>>>>   ??? isn't a new warning.? I think the last change to it was made in 2022.
>>>>
>>>>   ??? Maybe your code, or code in one of the libraries you use, has
>>>> changed?
>>>>
>>>>   ??? Duncan Murdoch
>>>>
>>>>
>>>>
>>>>
>>>>   ???? >
>>>>   ???? > Or, alternatively, if this could be a NOTE when the `--as-cran`
>>>> flag
>>>>   ???? > isn't set but a WARNING when it is?
>>>>   ???? >
>>>>   ???? > Re-vendoring dependencies each time they are changed during the
>>>>   ???? > development lifecycle is quite a bit. However, vendoring once
>>>>   ??? prior to
>>>>   ???? > publishing makes good sense.
>>>>   ???? >
>>>>   ???? > Is there a balance we can strike here to lower development
>>>>   ??? friction but
>>>>   ???? > also ensure the robust package installation requirements when
>>>>   ??? expected?
>>>>   ???? >
>>>>   ???? > Using
>>>>   ???? >
>>>>   ???? >
>>>>   ???? >
>>>>   ???? >
>>>>   ???? > On Sun, Mar 2, 2025 at 11:42?AM Duncan Murdoch
>>>>   ??? <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>>>   ???? > <mailto:murdoch.duncan at gmail.com
>>>>   ??? <mailto:murdoch.duncan at gmail.com>>> wrote:
>>>>   ???? >
>>>>   ???? >? ? ?On 2025-03-02 1:09 p.m., Ben Bolker wrote:
>>>>   ???? >? ? ? >? ? I, like Duncan, am just following along here. I think
>>>> there
>>>>   ???? >? ? ?might be
>>>>   ???? >? ? ? > two distinct questions which it would be useful to keep
>>>>   ??? distinct:
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >? ? * how to silence the rust-check if desired?
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >? ? ?rather than debating whether the rust-check should be
>>>>   ??? always-on,
>>>>   ???? >? ? ? > on-for-CRAN-only, etc., would it provide for useful
>>>>   ??? flexibility
>>>>   ???? >? ? ?to add
>>>>   ???? >? ? ? > an environment variable that enables/disables this
>>>>   ???? >? ? ?functionality?? There
>>>>   ???? >? ? ? > are already 168 of these environment variables, how much
>>>> would
>>>>   ???? >? ? ?one more
>>>>   ???? >? ? ? > cost?
>>>>   ???? >
>>>>   ???? >? ? ?I may have misunderstood Josiah.? I thought his message said
>>>>   ??? that it is
>>>>   ???? >? ? ?already easy to silence the check, by stopping the code from
>>>>   ??? issuing
>>>>   ???? >? ? ?the
>>>>   ???? >? ? ?message the check is looking for.
>>>>   ???? >
>>>>   ???? >? ? ?Presumably the package shouldn't do that, but if there's an
>>>>   ??? environment
>>>>   ???? >? ? ?variable that can be set to do it, then the repository or
>>>>   ??? user can
>>>>   ???? >? ? ?choose to do it, so there's no need for R to add another
>>>>   ??? environment
>>>>   ???? >? ? ?variable.
>>>>   ???? >
>>>>   ???? >? ? ?BTW, as far as I can see current R-devel doesn't issue an
>>>>   ??? error, it
>>>>   ???? >? ? ?just
>>>>   ???? >? ? ?issues warnings about two issues:
>>>>   ???? >
>>>>   ???? >? ? ? ? - the package is downloading crates
>>>>   ???? >? ? ? ? - the rustc compiler doesn't report a version number
>>>>   ???? >
>>>>   ???? >? ? ?Duncan Murdoch
>>>>   ???? >
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >? ? ?I'm not sure how adding an environment variable to
>>>>   ??? allow easier
>>>>   ???? >? ? ? > user/alternate-repository control of the check is
>>>> "against the
>>>>   ???? >? ? ?spirit of
>>>>   ???? >? ? ? > the check" ...
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >? ? ?All the existing check-regulating env variables ...
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? > cd src/library/tools/R
>>>>   ???? >? ? ? > grep 'Sys.getenv("_R_CHECK' * | sed -e
>>>>   ??? 's/^.*Sys.getenv(//' | sed -e
>>>>   ???? >? ? ? > 's/[,)].*//' | sort | uniq | wc
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >? ? ?* should CRAN allow Rust crates to be downloaded?
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >? ? ?This is a much more fundamental policy decision, which
>>>>   ??? I have no
>>>>   ???? >? ? ? > opinion about.
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >? ? ?cheers
>>>>   ???? >? ? ? >? ? ? Ben Bolker
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? >
>>>>   ???? >? ? ? > On 2025-03-02 12:21 p.m., Duncan Murdoch wrote:
>>>>   ???? >? ? ? >> On 2025-03-02 11:03 a.m., Josiah Parry wrote:
>>>>   ???? >? ? ? >>> Well this has surely veered off course!
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>> As the one who filed the BugZilla report, I'd like to
>>>>   ??? redirect the
>>>>   ???? >? ? ? >>> conversation and provide further context.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>> The question should?be /"how do we get a dialogue
>>>>   ??? started on this
>>>>   ???? >? ? ? >>> bugzilla issue before the next minor /
>>>>   ???? >? ? ? >>> /release of R?"/
>>>>   ???? >? ? ? >>
>>>>   ???? >? ? ? >> Isn't this exactly that dialogue?
>>>>   ???? >? ? ? >>
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>> The current check for Rust-based R package's downloading
>>>>   ??? external
>>>>   ???? >? ? ? >>> dependencies works by looking at
>>>>   ???? >? ? ? >>> the output logs for the presence of? "Downloading
>>>>   ??? crates." This
>>>>   ???? >? ? ?can is
>>>>   ???? >? ? ? >>> an entirely fine requirement for
>>>>   ???? >? ? ? >>> CRAN?however, due to the fact that it is an error,
>>>> packages
>>>>   ???? >? ? ? >>> distributed through other repositories
>>>>   ???? >? ? ? >>> fail the R-CMD check.
>>>>   ???? >? ? ? >>
>>>>   ???? >? ? ? >> I think you misunderstood me.? CRAN shares the view I
>>>>   ??? gave that you
>>>>   ???? >? ? ? >> should be able to run old code to reproduce old
>>>> results, but
>>>>   ???? >? ? ?they aren't
>>>>   ???? >? ? ? >> the only ones.? That's always been a goal of R.
>>>>   ???? >? ? ? >>
>>>>   ???? >? ? ? >>> Folks who use R-universe or PPM or some mysterious third
>>>>   ??? thing
>>>>   ???? >? ? ?may not
>>>>   ???? >? ? ? >>> share the same philosophy as
>>>>   ???? >? ? ? >>> CRAN and prefer the convenience of fetching the
>>>>   ??? dependencies at
>>>>   ???? >? ? ? >>> compile time and not vendoring them.
>>>>   ???? >? ? ? >>> An alternative would be for the check to be optionally
>>>>   ??? skipped or
>>>>   ???? >? ? ? >>> become a NOTE when the CRAN
>>>>   ???? >? ? ? >>> flag is not set and an ERROR otherwise. Skipping this
>>>> CRAN
>>>>   ???? >? ? ?check is as
>>>>   ???? >? ? ? >>> easy as adding `--quiet`
>>>>   ???? >? ? ? >>> or setting an environment variable?but that is against
>>>> the
>>>>   ???? >? ? ?spirit of
>>>>   ???? >? ? ? >>> the check.
>>>>   ???? >? ? ? >>
>>>>   ???? >? ? ? >> If it is that easy to skip the check, then I really
>>>> don't see
>>>>   ???? >? ? ?the issue.
>>>>   ???? >? ? ? >>? ??Just ask the repository where you want to put your
>>>>   ??? package to
>>>>   ???? >? ? ?put that
>>>>   ???? >? ? ? >> option or environment variable in place, and there's no
>>>>   ??? longer a
>>>>   ???? >? ? ?problem.
>>>>   ???? >? ? ? >>
>>>>   ???? >? ? ? >> Duncan Murdoch
>>>>   ???? >? ? ? >>
>>>>   ???? >? ? ? >>> Ideally, the check can remain, but scoped appropriately.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>> On Sun, Mar 2, 2025 at 6:49?AM Duncan Murdoch
>>>>   ???? >? ? ? >>> <murdoch.duncan at gmail.com
>>>>   ??? <mailto:murdoch.duncan at gmail.com> <mailto:murdoch.duncan at gmail.com
>>>>   ??? <mailto:murdoch.duncan at gmail.com>>
>>>>   ???? >? ? ?<mailto:murdoch.duncan at gmail.com
>>>>   ??? <mailto:murdoch.duncan at gmail.com> <mailto:murdoch.duncan at gmail.com
>>>>   ??? <mailto:murdoch.duncan at gmail.com>>>>
>>>>   ???? >? ? ?wrote:
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? You seem to be taking a confontational tone, which
>>>>   ??? isn't
>>>>   ???? >? ? ?likely to
>>>>   ???? >? ? ? >>>? ??? encourage a reasonable dialogue.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? I've looked for other messages on this, and didn't
>>>>   ??? see any
>>>>   ???? >? ? ?besides
>>>>   ???? >? ? ? >>> this
>>>>   ???? >? ? ? >>>? ??? one explaining why including check_rust() in the
>>>>   ??? checks is
>>>>   ???? >? ? ?a problem.
>>>>   ???? >? ? ? >>>? ??? The problem you talk about here is that it
>>>> encourages
>>>>   ???? >? ? ?vendoring,
>>>>   ???? >? ? ? >>> which
>>>>   ???? >? ? ? >>>? ??? makes it harder for package authors to count
>>>> downloads.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? To be honest, that doesn't seem like a very serious
>>>>   ???? >? ? ?problem.? I
>>>>   ???? >? ? ? >>> assume
>>>>   ???? >? ? ? >>>? ??? the packages ("crates") we are talking about are
>>>> open
>>>>   ???? >? ? ?source, so
>>>>   ???? >? ? ? >>>? ??? this is
>>>>   ???? >? ? ? >>>? ??? entirely in the spirit of how they are allowed to be
>>>>   ???? >? ? ?distributed.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? If they aren't open source, then users of those
>>>>   ??? packages
>>>>   ???? >? ? ?should be
>>>>   ???? >? ? ? >>>? ??? warned about that, and a check failure is a good
>>>>   ??? way to do
>>>>   ???? >? ? ?that.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? So you need to explain why it is important to be
>>>>   ??? able to
>>>>   ???? >? ? ?download and
>>>>   ???? >? ? ? >>>? ??? install software and not be warned about it.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? I am not in R Core or CRAN, but I can suggest why
>>>> it is
>>>>   ???? >? ? ?better to
>>>>   ???? >? ? ? >>>? ??? include source in the package:? it makes the use of
>>>>   ??? that
>>>>   ???? >? ? ?package more
>>>>   ???? >? ? ? >>>? ??? reliable in the future.? It's not uncommon to run
>>>> an R
>>>>   ???? >? ? ?computation
>>>>   ???? >? ? ? >>> that
>>>>   ???? >? ? ? >>>? ??? was written a few years ago.? Sometimes libraries
>>>> or R
>>>>   ???? >? ? ?have changed,
>>>>   ???? >? ? ? >>>? ??? and
>>>>   ???? >? ? ? >>>? ??? a user will need to go back to a previous version to
>>>>   ???? >? ? ?reproduce the
>>>>   ???? >? ? ? >>>? ??? calculation.? Being able to able to rebuild a
>>>>   ??? system as it
>>>>   ???? >? ? ?would have
>>>>   ???? >? ? ? >>>? ??? been back then is important.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? Is that possible if the package needs to make a
>>>>   ??? download?? The
>>>>   ???? >? ? ? >>> download
>>>>   ???? >? ? ? >>>? ??? site that worked a few years ago may no longer
>>>>   ??? exist.? If
>>>>   ???? >? ? ?the site
>>>>   ???? >? ? ? >>>? ??? exists, the code versions there may be different.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? Those are some of the issues that Simon was
>>>>   ??? alluding to.
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? Duncan Murdoch
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? On 2025-03-02 5:45 a.m., Mossa Merhi Reimert via
>>>>   ??? R-devel
>>>>   ???? >? ? ?wrote:
>>>>   ???? >? ? ? >>>? ???? > Dear Simon Urbanek,
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > There has been very little engagement with the
>>>>   ??? issue I
>>>>   ???? >? ? ?referred
>>>>   ???? >? ? ? >>>? ??? to. If it was decided that this ?check? ought to be
>>>>   ??? part
>>>>   ???? >? ? ?of the
>>>>   ???? >? ? ? >>>? ??? default checks for R,
>>>>   ???? >? ? ? >>>? ???? > then that could have been written to us. Either
>>>>   ??? on the
>>>>   ???? >? ? ? >>> bugs.r-project.org <http://bugs.r-project.org>
>>>>   ??? <http://bugs.r-project.org <http://bugs.r-project.org>>
>>>>   ???? >? ? ?<http://bugs.r-project.org <http://bugs.r-project.org>
>>>>   ??? <http://bugs.r-project.org <http://bugs.r-project.org>>> or the
>>>> proposed
>>>>   ???? >? ? ? >>>? ??? patch. Before we talk about anything else,
>>>>   ???? >? ? ? >>>? ???? > it does seem very strange that we cannot get a
>>>>   ??? reasonable
>>>>   ???? >? ? ? >>>? ??? dialogue going.
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > I would like to say that the R/Rust community
>>>>   ??? has grown
>>>>   ???? >? ? ? >>>? ??? substantially. From my end, there are 3 bindings
>>>>   ??? project,
>>>>   ???? >? ? ?extendr,
>>>>   ???? >? ? ? >>>? ??? savvy, and roxido.
>>>>   ???? >? ? ? >>>? ???? > Then, there are now many rust-based packages on
>>>>   ??? CRAN,
>>>>   ???? >? ? ?see this
>>>>   ???? >? ? ? >>>? ??? most recent compiled list
>>>>   ???? > https://github.com/nanxstats/r-rust-pkgs
>>>>   ??? <https://github.com/nanxstats/r-rust-pkgs>
>>>>   ???? >? ? ?<https://github.com/nanxstats/r-rust-pkgs
>>>>   ??? <https://github.com/nanxstats/r-rust-pkgs>>
>>>>   ???? >? ? ? >>>? ??? <https://github.com/nanxstats/r-rust-pkgs
>>>>   ??? <https://github.com/nanxstats/r-rust-pkgs>
>>>>   ???? >? ? ?<https://github.com/nanxstats/r-rust-pkgs
>>>>   ??? <https://github.com/nanxstats/r-rust-pkgs>>>.
>>>>   ???? >? ? ? >>>? ???? > There is also proof-of-concept
>>>>   ???? >? ? ? >>> https://github.com/r-rust/hellorust
>>>>   ??? <https://github.com/r-rust/hellorust>
>>>>   ???? >? ? ?<https://github.com/r-rust/hellorust
>>>>   ??? <https://github.com/r-rust/hellorust>>
>>>>   ???? >? ? ? >>>? ??? <https://github.com/r-rust/hellorust
>>>>   ??? <https://github.com/r-rust/hellorust>
>>>>   ???? >? ? ?<https://github.com/r-rust/hellorust
>>>>   ??? <https://github.com/r-rust/hellorust>>> that integrates `cargo`,
>>>>   ???? >? ? ? >>>? ??? rust?s official build system, with R?s package
>>>>   ??? build system,
>>>>   ???? >? ? ? >>>? ???? > and https://github.com/extendr/hellorustc
>>>>   ??? <https://github.com/extendr/hellorustc>
>>>>   ???? >? ? ?<https://github.com/extendr/hellorustc
>>>>   ??? <https://github.com/extendr/hellorustc>>
>>>>   ???? >? ? ? >>>? ??? <https://github.com/extendr/hellorustc
>>>>   ??? <https://github.com/extendr/hellorustc>
>>>>   ???? >? ? ?<https://github.com/extendr/hellorustc
>>>>   ??? <https://github.com/extendr/hellorustc>>>, which showcases how Rust
>>>>   ???? >? ? ? >>>? ??? compiler could be directly linked with R?s package
>>>>   ??? system.
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? >? ?Let me say, that the current R CMD check is
>>>>   ??? not meant
>>>>   ???? >? ? ?to be
>>>>   ???? >? ? ? >>>? ??? ?helpful?. When a package is built, `cargo` tells
>>>>   ??? the user
>>>>   ???? >? ? ? >>>? ??? ?Downloading crates?.
>>>>   ???? >? ? ? >>>? ???? > Thus, this information is already conveyed to
>>>>   ??? the user.
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > Personally, I do wish we could debate this
>>>>   ??? requirement
>>>>   ???? >? ? ?further. I
>>>>   ???? >? ? ? >>>? ??? do not believe that having R-packages on CRAN
>>>>   ??? vendor rust
>>>>   ???? >? ? ? >>> dependencies
>>>>   ???? >? ? ? >>>? ???? > as a good policy. Download statistics is a
>>>> success
>>>>   ???? >? ? ?metric of a
>>>>   ???? >? ? ? >>>? ??? given r-package and rust packages. By insisting on
>>>>   ???? >? ? ?vendoring, and
>>>>   ???? >? ? ? >>> thus
>>>>   ???? >? ? ? >>>? ???? > side-stepping `cargo` / crates.io
>>>>   ??? <http://crates.io> <http://crates.io <http://crates.io>>
>>>>   ???? >? ? ?<http://crates.io <http://crates.io> <http://crates.io
>>>>   ??? <http://crates.io>>>, we are
>>>>   ???? >? ? ? >>>? ??? robbing upstream authors of their download-numbers.
>>>>   ??? I do
>>>>   ???? >? ? ?not think
>>>>   ???? >? ? ? >>>? ??? such policy is honourable.
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > While C/C++ do not have official package
>>>>   ??? repositories,
>>>>   ???? >? ? ?it could
>>>>   ???? >? ? ? >>>? ??? be thought of, as fair game, to have CRAN act as a
>>>>   ??? pseudo
>>>>   ???? >? ? ?package
>>>>   ???? >? ? ? >>>? ??? manager for C/C++ libraries.
>>>>   ???? >? ? ? >>>? ???? > I?m not going to argue for or against this part.
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > There are many objections from the CRAN side to
>>>>   ??? all things
>>>>   ???? >? ? ? >>>? ??? related to Rust. I don?t want to open multiple
>>>>   ??? topics in
>>>>   ???? >? ? ?the same
>>>>   ???? >? ? ? >>>? ??? thread.
>>>>   ???? >? ? ? >>>? ???? > But there is plenty to bring up. And I had
>>>> hoped we
>>>>   ???? >? ? ?could talk
>>>>   ???? >? ? ? >>>? ??? this little issue through, before embarking on a
>>>> larger
>>>>   ???? >? ? ?discussion.
>>>>   ???? >? ? ? >>>? ???? > I do not appreciate the ?random demands?
>>>> comment, as
>>>>   ???? >? ? ?this is not
>>>>   ???? >? ? ? >>>? ??? a demand, nor is it random.
>>>>   ???? >? ? ? >>>? ???? > I have inquired my end of the community for
>>>>   ??? suggestions
>>>>   ???? >? ? ? >>>? ???? > to compile a larger proposal, but then I was
>>>> afraid
>>>>   ???? >? ? ?that this
>>>>   ???? >? ? ? >>>? ??? would be perceived as a big, bulky demand.
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > Rust is not C/C++/Java, and the support for Rust
>>>>   ??? cannot
>>>>   ???? >? ? ?look like
>>>>   ???? >? ? ? >>>? ??? the support for these languages.
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > From: Simon Urbanek <simon.urbanek at R-project.org>
>>>>   ???? >? ? ? >>>? ???? > Date: Sunday, 2 March 2025 at 00.39
>>>>   ???? >? ? ? >>>? ???? > To: Mossa Merhi Reimert <mossa at sund.ku.dk
>>>>   ??? <mailto:mossa at sund.ku.dk>
>>>>   ???? >? ? ?<mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>
>>>>   ???? >? ? ? >>> <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>
>>>>   ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>>>
>>>>   ???? >? ? ? >>>? ???? > Cc: r-devel at r-project.org
>>>>   ??? <mailto:r-devel at r-project.org>
>>>>   ???? >? ? ?<mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>>
>>>>   ??? <mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>>   ???? >? ? ?<mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>>>
>>>>   ???? >? ? ? >>>? ??? <r-devel at r-project.org
>>>>   ??? <mailto:r-devel at r-project.org> <mailto:r-devel at r-project.org
>>>>   ??? <mailto:r-devel at r-project.org>>
>>>>   ???? >? ? ?<mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>>   ??? <mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>>>>
>>>>   ???? >? ? ? >>>? ???? > Subject: Re: [Rd] R CMD check and CRAN's Rust
>>>> policy
>>>>   ???? >? ? ? >>>? ???? > [Du f?r ikke ofte mails fra
>>>>   ??? simon.urbanek at r-project.org <mailto:simon.urbanek at r-project.org>
>>>>   ???? >? ? ?<mailto:simon.urbanek at r-project.org
>>>>   ??? <mailto:simon.urbanek at r-project.org>>
>>>>   ???? >? ? ? >>>? ??? <mailto:simon.urbanek at r-project.org
>>>>   ??? <mailto:simon.urbanek at r-project.org>
>>>>   ???? >? ? ?<mailto:simon.urbanek at r-project.org
>>>>   ??? <mailto:simon.urbanek at r-project.org>>>. F? mere at vide om, hvorfor
>>>>   ???? >? ? ? >>>? ??? dette er vigtigt, p?
>>>>   ???? > https://aka.ms/LearnAboutSenderIdentification
>>>>   ??? <https://aka.ms/LearnAboutSenderIdentification>
>>>>   ???? >? ? ?<https://aka.ms/LearnAboutSenderIdentification
>>>>   ??? <https://aka.ms/LearnAboutSenderIdentification>>
>>>>   ???? >? ? ? >>>? ??? <https://aka.ms/LearnAboutSenderIdentification
>>>>   ??? <https://aka.ms/LearnAboutSenderIdentification>
>>>>   ???? >? ? ?<https://aka.ms/LearnAboutSenderIdentification
>>>>   ??? <https://aka.ms/LearnAboutSenderIdentification>>> ]
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > Mossa,
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > the issue you cite is lacking any pertinent
>>>>   ??? information
>>>>   ???? >? ? ?and it's
>>>>   ???? >? ? ? >>>? ??? not even clear why it should be an issue. The
>>>> check is
>>>>   ???? >? ? ?perfectly
>>>>   ???? >? ? ? >>>? ??? justified, it just reports whether a package
>>>> using rust
>>>>   ???? >? ? ?declares
>>>>   ???? >? ? ? >>>? ??? this correctly and where it downloads 3rd party
>>>>   ??? content -
>>>>   ???? >? ? ?something
>>>>   ???? >? ? ? >>>? ??? that is important to R users in general and not
>>>>   ??? related to
>>>>   ???? >? ? ?CRAN. I
>>>>   ???? >? ? ? >>>? ??? don't see how any of this is "prohibitive" it just
>>>>   ??? calls
>>>>   ???? >? ? ?out what
>>>>   ???? >? ? ? >>>? ??? the package is already doing.
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > As discussed before, my hope was that the "R"ust
>>>>   ???? >? ? ?community will
>>>>   ???? >? ? ? >>>? ??? mature enough to work on proper support. It is not
>>>>   ??? clear
>>>>   ???? >? ? ?that it
>>>>   ???? >? ? ? >>>? ??? happened yet, but once it does it would make sense
>>>>   ??? to talk
>>>>   ???? >? ? ?about
>>>>   ???? >? ? ? >>>? ??? support just as we have for C, C++ and Java, so
>>>>   ??? certainly that
>>>>   ???? >? ? ? >>>? ??? should be the right discussion. However, it will
>>>>   ??? have to
>>>>   ???? >? ? ?start with
>>>>   ???? >? ? ? >>>? ??? some thinking and a proposal on how the associated
>>>>   ??? issues
>>>>   ???? >? ? ?(compiler
>>>>   ???? >? ? ? >>>? ??? support, versioning, dependency sources etc.) are
>>>> to be
>>>>   ???? >? ? ?addressed,
>>>>   ???? >? ? ? >>>? ??? as opposed to making random demands. All this has
>>>>   ??? nothing
>>>>   ???? >? ? ?to do with
>>>>   ???? >? ? ? >>>? ??? CRAN so the issue you mention seems irrelevant to
>>>> the
>>>>   ???? >? ? ?progress. Also
>>>>   ???? >? ? ? >>>? ??? I'd like to know what are the "challenges
>>>> embedded in R
>>>>   ???? >? ? ?itself".
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > Cheers,
>>>>   ???? >? ? ? >>>? ???? > Simon
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? >> On Mar 2, 2025, at 8:45 AM, Mossa Merhi
>>>> Reimert via
>>>>   ???? >? ? ?R-devel
>>>>   ???? >? ? ? >>>? ??? <r-devel at r-project.org
>>>>   ??? <mailto:r-devel at r-project.org> <mailto:r-devel at r-project.org
>>>>   ??? <mailto:r-devel at r-project.org>>
>>>>   ???? >? ? ?<mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>>   ??? <mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>>>>
>>>> wrote:
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> Hello everyone!
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> I'm Mossa, I'm one of the maintainers of
>>>>   ??? extendr, an
>>>>   ???? >? ? ?automated
>>>>   ???? >? ? ? >>>? ??? generation of bindings project for
>>>>   ???? >? ? ? >>>? ???? >> Rust code, for use in R-packages.
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> I'm writing to you, as R 4.4.3 was just
>>>>   ??? released, and
>>>>   ???? >? ? ?there have
>>>>   ???? >? ? ? >>>? ??? not been
>>>>   ???? >? ? ? >>>? ???? >> follow-up on an issue important to us. Link
>>>> to the
>>>>   ???? >? ? ?issue as
>>>>   ???? >? ? ? >>>? ??? discussed on r-devel
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? > https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
>>>>   ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>
>>>>   ???? > ???? ?<https://stat.ethz.ch/pipermail/r-devel/2024-
>>>> October/083666.html
>>>>   ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>>
>>>>   ???? >? ? ? >>>
>>>>   ???? > ???? ?<https://stat.ethz.ch/pipermail/r-devel/2024-
>>>> October/083666.html
>>>>   ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>
>>>>   ???? > ???? ?<https://stat.ethz.ch/pipermail/r-devel/2024-
>>>> October/083666.html
>>>>   ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>>>
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> A community member has provided a suggestion
>>>> to a
>>>>   ???? >? ? ?patch here
>>>>   ???? >? ? ? >>> https://github.com/r-devel/r-svn/pull/182
>>>>   ??? <https://github.com/r-devel/r-svn/pull/182>
>>>>   ???? >? ? ?<https://github.com/r-devel/r-svn/pull/182
>>>>   ??? <https://github.com/r-devel/r-svn/pull/182>>
>>>>   ???? >? ? ? >>>? ??? <https://github.com/r-devel/r-svn/pull/182
>>>>   ??? <https://github.com/r-devel/r-svn/pull/182>
>>>>   ???? >? ? ?<https://github.com/r-devel/r-svn/pull/182
>>>>   ??? <https://github.com/r-devel/r-svn/pull/182>>>, and we have also
>>>>   ???? >? ? ? >>>? ??? attempted to bring it up on
>>>>   ???? >? ? ? >>>? ???? >> Bugzilla:
>>>>   ???? > https://bugs.r-project.org/show_bug.cgi?id=18806
>>>>   ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>
>>>>   ???? >? ? ?<https://bugs.r-project.org/show_bug.cgi?id=18806
>>>>   ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>>
>>>>   ???? >? ? ? >>>? ??? <https://bugs.r-project.org/show_bug.cgi?id=18806
>>>>   ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>
>>>>   ???? >? ? ?<https://bugs.r-project.org/show_bug.cgi?id=18806
>>>>   ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>>>
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> TLDR: Default `R CMD check` uses additional
>>>>   ???? >? ? ?CRAN-specific checks
>>>>   ???? >? ? ? >>>? ??? for Rust,
>>>>   ???? >? ? ? >>>? ???? >> instead of keeping this behind the --as-cran
>>>> flag.
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> I would like to say, that there is a growing
>>>>   ??? interest
>>>>   ???? >? ? ?in Rust
>>>>   ???? >? ? ? >>>? ??? within the R community.
>>>>   ???? >? ? ? >>>? ???? >> And generally, Rust becoming a widely adopted
>>>>   ??? language
>>>>   ???? >? ? ?within
>>>>   ???? >? ? ? >>>? ??? the Python community (including the scientific part
>>>>   ??? of that
>>>>   ???? >? ? ? >>>? ??? community). It is time to deal with the
>>>>   ???? >? ? ? >>>? ???? >> pain points with using Rust in R.
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> Therefore, I would kindly ask that we have a
>>>>   ??? dialogue
>>>>   ???? >? ? ?on how to
>>>>   ???? >? ? ? >>>? ??? remedy the issue above first, and how we may deal
>>>> with
>>>>   ???? >? ? ?other issues
>>>>   ???? >? ? ? >>>? ??? going forward. There are both challenges embedded
>>>> in R
>>>>   ???? >? ? ?itself, and
>>>>   ???? >? ? ? >>>? ??? the current CRAN policy for Rust is prohibitive.
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> Mossa Merhi Reimert
>>>>   ???? >? ? ? >>>? ???? >> Postdoctoral Researcher
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> K?benhavns Universitet
>>>>   ???? >? ? ? >>>? ???? >> Department of Veterinary and Animal Sciences
>>>>   ???? >? ? ? >>>? ???? >> Animal Welfare and Disease Control
>>>>   ???? >? ? ? >>>? ???? >> Gr?nneg?rdsvej 8
>>>>   ???? >? ? ? >>>? ???? >> 1870 Frederiksberg C
>>>>   ???? >? ? ? >>>? ???? >> Denmark
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> +45 35324135
>>>>   ???? >? ? ? >>>? ???? >> mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>
>>>>   ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>
>>>>   ???? >? ? ? >>>? ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>
>>>>   ???? >? ? ?<mailto:mossa at sund.ku.dk
>>>>   ??? <mailto:mossa at sund.ku.dk>>><mailto:mossa at sund.ku.dk
>>>>   ??? <mailto:mossa at sund.ku.dk>
>>>>   ???? >? ? ?<mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>
>>>>   ???? >? ? ? >>>? ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>
>>>>   ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>>>
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >>? ? ? ? [[alternative HTML version deleted]]
>>>>   ???? >? ? ? >>>? ???? >>
>>>>   ???? >? ? ? >>>? ???? >> ______________________________________________
>>>>   ???? >? ? ? >>>? ???? >> R-devel at r-project.org
>>>>   ??? <mailto:R-devel at r-project.org> <mailto:R-devel at r-project.org
>>>>   ??? <mailto:R-devel at r-project.org>>
>>>>   ???? >? ? ?<mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>   ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>>
>>>>   ???? >? ? ?mailing list
>>>>   ???? >? ? ? >>>? ???? >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>   ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>   ???? >? ? ? >>>? ??? <https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>   ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>>
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? >? ? ? ?[[alternative HTML version deleted]]
>>>>   ???? >? ? ? >>>? ???? >
>>>>   ???? >? ? ? >>>? ???? > ______________________________________________
>>>>   ???? >? ? ? >>>? ???? > R-devel at r-project.org
>>>>   ??? <mailto:R-devel at r-project.org> <mailto:R-devel at r-project.org
>>>>   ??? <mailto:R-devel at r-project.org>>
>>>>   ???? >? ? ?<mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>   ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>>
>>>>   ???? >? ? ?mailing list
>>>>   ???? >? ? ? >>>? ???? > https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>   ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>   ???? >? ? ? >>>? ??? <https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>   ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>>
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>>? ??? ______________________________________________
>>>>   ???? >? ? ? >>> R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>   ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>
>>>>   ???? >? ? ?<mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>   ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>>
>>>>   ???? >? ? ?mailing list
>>>>   ???? >? ? ? >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>   ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>   ???? >? ? ? >>>? ??? <https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>   ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>>
>>>>   ???? >? ? ? >>>
>>>>   ???? >? ? ? >>
>>>>   ???? >? ? ? >> ______________________________________________
>>>>   ???? >? ? ? >> R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>   ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>
>>>>   ??? mailing list
>>>>   ???? >? ? ? >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>   ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>   ???? >? ? ? >
>>>>   ???? >
>>>>   ???? >? ? ?______________________________________________
>>>>   ???? > R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>   ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>
>>>>   ??? mailing list
>>>>   ???? > https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>   ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>   ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>   ???? >
>>>>
>>>
>>
>


From murdoch@dunc@n @end|ng |rom gm@||@com  Tue Apr  1 02:44:01 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Mon, 31 Mar 2025 20:44:01 -0400
Subject: [Rd] R CMD check and CRAN's Rust policy
In-Reply-To: <8866a57b-fa81-4993-be17-3d9095ebc1c5@gmail.com>
References: <6ea9752b54b347e682240bc024665cef@sund.ku.dk>
 <9CB72F1A-D397-4133-B8D6-C7B9CD04A4A1@R-project.org>
 <32ad0520e7784407b08ad105304b714b@sund.ku.dk>
 <66df3450-ed40-4d0c-b40b-626b75eabf0b@gmail.com>
 <CAL3ufUKSkMXpgSD6-o7dC7tZuD+DmpHaq2JUzuF9+9dosE+XEA@mail.gmail.com>
 <4eb96716-9f8c-4f4e-8d2d-a43feba44392@gmail.com>
 <df6bc0fc-1699-4691-a83c-1606d5db72a7@gmail.com>
 <19f561ae-d787-4f27-b3ba-f63c9b65fba5@gmail.com>
 <CAL3ufUJVe_jgfHH==EcfxuGiSbQ13KRXTSEP8-oYKafCPNR-+A@mail.gmail.com>
 <703123c9-c09e-4e14-8f4e-75ffd3c5931f@gmail.com>
 <CAL3ufULb0DDV94_m9kX2S2iTgiTqSaBUBo7ZD1PTVF6F-Gyb5A@mail.gmail.com>
 <17675b90-69a0-4f21-8d17-27aa2a8fda33@gmail.com>
 <483fe286-5a17-459c-8faf-f87208663188@gmail.com>
 <4a3d45bb-9df2-4cc7-a7ef-5183f9613d03@gmail.com>
 <8866a57b-fa81-4993-be17-3d9095ebc1c5@gmail.com>
Message-ID: <deb30b2e-e67c-45c5-a67c-4a66403de2a2@gmail.com>

One more change to

    remotes::install_github("dmurdoch/rcmdcheck at demotions")

Now the changes in message severity have to be coded into the 
DESCRIPTION file of the package being checked.  For example, add this line:

Config/rcmdcheck/demote/warnings:
   Compiled code should not call entry points which might terminate

The message being matched has to appear all on one line, but multiple 
patterns can be given on separate lines.  Embedded newlines are not 
allowed.  A simple fixed grep is used to match it to the check log.
See the ?rcmdcheck help page for more details.

Duncan Murdoch

On 2025-03-31 7:20 p.m., Duncan Murdoch wrote:
> On 2025-03-31 4:50 p.m., Duncan Murdoch wrote:
>> Just for fun I forked rcmdcheck and added arguments to it to allow
>> particular messages to be changed in severity.
>>
>> For example, if the WARNING message says something which matches the
>> regexp "Compiled code should not call entry points which might terminate
>> R" you could run
>>
>>      rcmdcheck::rcmdcheck(".", demote = list(warnings = "Compiled code
>> should not call entry points which might terminate R"))
>>
>> and the warning will be counted as a NOTE.  The decision about whether
>> to signal an error from the run will be based on the value after demotion.
>>
>>     I haven't done anything with the Github action, but users can play
>> with this fork if they like.  It can be installed using
>>
>>      remotes::install_github("dmurdoch/rcmdcheck")
> 
> Sorry, that should be
> 
>     remotes::install_github("dmurdoch/rcmdcheck at demotions")
> 
> Duncan Murdoch
> 
>>
>> You can install custom builds in a Github action fairly easily, but it's
>> hard to add a new argument to a call deep within the action script.  A
>> simpler approach would be to fork my fork and set the default value for
>> "demote" to whatever you want, then install your own fork during the
>> Github action.
>>
>> Comments are welcome.
>>
>> Duncan Murdoch
>>
>>
>> On 2025-03-31 1:48 p.m., Ben Bolker wrote:
>>>
>>>
>>> On 2025-03-31 1:04 p.m., Duncan Murdoch wrote:
>>>> On 2025-03-31 12:41 p.m., Josiah Parry wrote:
>>>>> Duncan, the changes to symbols checking was introduced March 22nd see
>>>>> https://bugs.r-project.org/show_bug.cgi?id=18789 <https://bugs.r-
>>>>> project.org/show_bug.cgi?id=18789> and https://developer.r-
>>>>> project.org/blosxom.cgi/R-devel/NEWS/2025/03/22#n2025-03-22 <https://
>>>>> developer.r-project.org/blosxom.cgi/R-devel/
>>>>> NEWS/2025/03/22#n2025-03-22>. But that is unrelated.
>>>>
>>>> Sorry, I missed that.
>>>>
>>>>>
>>>>> To Tim's comment?the check is a simple grep of the installation?log
>>>>> for "Downloading crates." This could be easily circumvented on CRAN
>>>>> and locally by suppressing stdout/err. But that would be adversarial
>>>>> and I would like to adhere to the intent of the check.
>>>>
>>>> I think Tim was suggesting that you modify your Github action to ignore
>>>> this particular warning.? The warning would still appear, but it
>>>> wouldn't cause a check failure.
>>>>
>>>> Duncan Murdoch
>>>
>>>       At a very quick look, I don't see an easy way to do that (but I am
>>> admittedly really bad at doing stuff with Github actions). Maybe longer
>>> term, but it feels like the best way to do this would be to request a
>>> feature in `rcmdcheck` that allowed the user to request ignoring
>>> specific warnings (e.g. specified by regexp?), then expose that feature
>>> in the r-check-package action (or whatever it's called ...)
>>>
>>>>
>>>>
>>>>
>>>>>
>>>>>
>>>>>
>>>>> On Mon, Mar 31, 2025 at 9:23?AM Duncan Murdoch
>>>>> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
>>>>>
>>>>>    ??? On 2025-03-31 11:50 a.m., Josiah Parry wrote:
>>>>>    ???? > Following up with this as I address the new R-devel "Compiled code
>>>>>    ???? > should not call entry points which might terminate R" WARNING and
>>>>>    ??? this
>>>>>    ???? > issue has reared its head again.
>>>>>    ???? >
>>>>>    ???? > Would a path forward be an environment variable similar
>>>>>    ???? > to?_R_CHECK_CRAN_INCOMING_ to skip this check primarily for GitHub
>>>>>    ???? > Actions and CI?
>>>>>
>>>>>    ??? The "Compiled code should not call entry points which might
>>>>>    ??? terminate R"
>>>>>    ??? isn't a new warning.? I think the last change to it was made in 2022.
>>>>>
>>>>>    ??? Maybe your code, or code in one of the libraries you use, has
>>>>> changed?
>>>>>
>>>>>    ??? Duncan Murdoch
>>>>>
>>>>>
>>>>>
>>>>>
>>>>>    ???? >
>>>>>    ???? > Or, alternatively, if this could be a NOTE when the `--as-cran`
>>>>> flag
>>>>>    ???? > isn't set but a WARNING when it is?
>>>>>    ???? >
>>>>>    ???? > Re-vendoring dependencies each time they are changed during the
>>>>>    ???? > development lifecycle is quite a bit. However, vendoring once
>>>>>    ??? prior to
>>>>>    ???? > publishing makes good sense.
>>>>>    ???? >
>>>>>    ???? > Is there a balance we can strike here to lower development
>>>>>    ??? friction but
>>>>>    ???? > also ensure the robust package installation requirements when
>>>>>    ??? expected?
>>>>>    ???? >
>>>>>    ???? > Using
>>>>>    ???? >
>>>>>    ???? >
>>>>>    ???? >
>>>>>    ???? >
>>>>>    ???? > On Sun, Mar 2, 2025 at 11:42?AM Duncan Murdoch
>>>>>    ??? <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>
>>>>>    ???? > <mailto:murdoch.duncan at gmail.com
>>>>>    ??? <mailto:murdoch.duncan at gmail.com>>> wrote:
>>>>>    ???? >
>>>>>    ???? >? ? ?On 2025-03-02 1:09 p.m., Ben Bolker wrote:
>>>>>    ???? >? ? ? >? ? I, like Duncan, am just following along here. I think
>>>>> there
>>>>>    ???? >? ? ?might be
>>>>>    ???? >? ? ? > two distinct questions which it would be useful to keep
>>>>>    ??? distinct:
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >? ? * how to silence the rust-check if desired?
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >? ? ?rather than debating whether the rust-check should be
>>>>>    ??? always-on,
>>>>>    ???? >? ? ? > on-for-CRAN-only, etc., would it provide for useful
>>>>>    ??? flexibility
>>>>>    ???? >? ? ?to add
>>>>>    ???? >? ? ? > an environment variable that enables/disables this
>>>>>    ???? >? ? ?functionality?? There
>>>>>    ???? >? ? ? > are already 168 of these environment variables, how much
>>>>> would
>>>>>    ???? >? ? ?one more
>>>>>    ???? >? ? ? > cost?
>>>>>    ???? >
>>>>>    ???? >? ? ?I may have misunderstood Josiah.? I thought his message said
>>>>>    ??? that it is
>>>>>    ???? >? ? ?already easy to silence the check, by stopping the code from
>>>>>    ??? issuing
>>>>>    ???? >? ? ?the
>>>>>    ???? >? ? ?message the check is looking for.
>>>>>    ???? >
>>>>>    ???? >? ? ?Presumably the package shouldn't do that, but if there's an
>>>>>    ??? environment
>>>>>    ???? >? ? ?variable that can be set to do it, then the repository or
>>>>>    ??? user can
>>>>>    ???? >? ? ?choose to do it, so there's no need for R to add another
>>>>>    ??? environment
>>>>>    ???? >? ? ?variable.
>>>>>    ???? >
>>>>>    ???? >? ? ?BTW, as far as I can see current R-devel doesn't issue an
>>>>>    ??? error, it
>>>>>    ???? >? ? ?just
>>>>>    ???? >? ? ?issues warnings about two issues:
>>>>>    ???? >
>>>>>    ???? >? ? ? ? - the package is downloading crates
>>>>>    ???? >? ? ? ? - the rustc compiler doesn't report a version number
>>>>>    ???? >
>>>>>    ???? >? ? ?Duncan Murdoch
>>>>>    ???? >
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >? ? ?I'm not sure how adding an environment variable to
>>>>>    ??? allow easier
>>>>>    ???? >? ? ? > user/alternate-repository control of the check is
>>>>> "against the
>>>>>    ???? >? ? ?spirit of
>>>>>    ???? >? ? ? > the check" ...
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >? ? ?All the existing check-regulating env variables ...
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? > cd src/library/tools/R
>>>>>    ???? >? ? ? > grep 'Sys.getenv("_R_CHECK' * | sed -e
>>>>>    ??? 's/^.*Sys.getenv(//' | sed -e
>>>>>    ???? >? ? ? > 's/[,)].*//' | sort | uniq | wc
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >? ? ?* should CRAN allow Rust crates to be downloaded?
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >? ? ?This is a much more fundamental policy decision, which
>>>>>    ??? I have no
>>>>>    ???? >? ? ? > opinion about.
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >? ? ?cheers
>>>>>    ???? >? ? ? >? ? ? Ben Bolker
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? >
>>>>>    ???? >? ? ? > On 2025-03-02 12:21 p.m., Duncan Murdoch wrote:
>>>>>    ???? >? ? ? >> On 2025-03-02 11:03 a.m., Josiah Parry wrote:
>>>>>    ???? >? ? ? >>> Well this has surely veered off course!
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>> As the one who filed the BugZilla report, I'd like to
>>>>>    ??? redirect the
>>>>>    ???? >? ? ? >>> conversation and provide further context.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>> The question should?be /"how do we get a dialogue
>>>>>    ??? started on this
>>>>>    ???? >? ? ? >>> bugzilla issue before the next minor /
>>>>>    ???? >? ? ? >>> /release of R?"/
>>>>>    ???? >? ? ? >>
>>>>>    ???? >? ? ? >> Isn't this exactly that dialogue?
>>>>>    ???? >? ? ? >>
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>> The current check for Rust-based R package's downloading
>>>>>    ??? external
>>>>>    ???? >? ? ? >>> dependencies works by looking at
>>>>>    ???? >? ? ? >>> the output logs for the presence of? "Downloading
>>>>>    ??? crates." This
>>>>>    ???? >? ? ?can is
>>>>>    ???? >? ? ? >>> an entirely fine requirement for
>>>>>    ???? >? ? ? >>> CRAN?however, due to the fact that it is an error,
>>>>> packages
>>>>>    ???? >? ? ? >>> distributed through other repositories
>>>>>    ???? >? ? ? >>> fail the R-CMD check.
>>>>>    ???? >? ? ? >>
>>>>>    ???? >? ? ? >> I think you misunderstood me.? CRAN shares the view I
>>>>>    ??? gave that you
>>>>>    ???? >? ? ? >> should be able to run old code to reproduce old
>>>>> results, but
>>>>>    ???? >? ? ?they aren't
>>>>>    ???? >? ? ? >> the only ones.? That's always been a goal of R.
>>>>>    ???? >? ? ? >>
>>>>>    ???? >? ? ? >>> Folks who use R-universe or PPM or some mysterious third
>>>>>    ??? thing
>>>>>    ???? >? ? ?may not
>>>>>    ???? >? ? ? >>> share the same philosophy as
>>>>>    ???? >? ? ? >>> CRAN and prefer the convenience of fetching the
>>>>>    ??? dependencies at
>>>>>    ???? >? ? ? >>> compile time and not vendoring them.
>>>>>    ???? >? ? ? >>> An alternative would be for the check to be optionally
>>>>>    ??? skipped or
>>>>>    ???? >? ? ? >>> become a NOTE when the CRAN
>>>>>    ???? >? ? ? >>> flag is not set and an ERROR otherwise. Skipping this
>>>>> CRAN
>>>>>    ???? >? ? ?check is as
>>>>>    ???? >? ? ? >>> easy as adding `--quiet`
>>>>>    ???? >? ? ? >>> or setting an environment variable?but that is against
>>>>> the
>>>>>    ???? >? ? ?spirit of
>>>>>    ???? >? ? ? >>> the check.
>>>>>    ???? >? ? ? >>
>>>>>    ???? >? ? ? >> If it is that easy to skip the check, then I really
>>>>> don't see
>>>>>    ???? >? ? ?the issue.
>>>>>    ???? >? ? ? >>? ??Just ask the repository where you want to put your
>>>>>    ??? package to
>>>>>    ???? >? ? ?put that
>>>>>    ???? >? ? ? >> option or environment variable in place, and there's no
>>>>>    ??? longer a
>>>>>    ???? >? ? ?problem.
>>>>>    ???? >? ? ? >>
>>>>>    ???? >? ? ? >> Duncan Murdoch
>>>>>    ???? >? ? ? >>
>>>>>    ???? >? ? ? >>> Ideally, the check can remain, but scoped appropriately.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>> On Sun, Mar 2, 2025 at 6:49?AM Duncan Murdoch
>>>>>    ???? >? ? ? >>> <murdoch.duncan at gmail.com
>>>>>    ??? <mailto:murdoch.duncan at gmail.com> <mailto:murdoch.duncan at gmail.com
>>>>>    ??? <mailto:murdoch.duncan at gmail.com>>
>>>>>    ???? >? ? ?<mailto:murdoch.duncan at gmail.com
>>>>>    ??? <mailto:murdoch.duncan at gmail.com> <mailto:murdoch.duncan at gmail.com
>>>>>    ??? <mailto:murdoch.duncan at gmail.com>>>>
>>>>>    ???? >? ? ?wrote:
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? You seem to be taking a confontational tone, which
>>>>>    ??? isn't
>>>>>    ???? >? ? ?likely to
>>>>>    ???? >? ? ? >>>? ??? encourage a reasonable dialogue.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? I've looked for other messages on this, and didn't
>>>>>    ??? see any
>>>>>    ???? >? ? ?besides
>>>>>    ???? >? ? ? >>> this
>>>>>    ???? >? ? ? >>>? ??? one explaining why including check_rust() in the
>>>>>    ??? checks is
>>>>>    ???? >? ? ?a problem.
>>>>>    ???? >? ? ? >>>? ??? The problem you talk about here is that it
>>>>> encourages
>>>>>    ???? >? ? ?vendoring,
>>>>>    ???? >? ? ? >>> which
>>>>>    ???? >? ? ? >>>? ??? makes it harder for package authors to count
>>>>> downloads.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? To be honest, that doesn't seem like a very serious
>>>>>    ???? >? ? ?problem.? I
>>>>>    ???? >? ? ? >>> assume
>>>>>    ???? >? ? ? >>>? ??? the packages ("crates") we are talking about are
>>>>> open
>>>>>    ???? >? ? ?source, so
>>>>>    ???? >? ? ? >>>? ??? this is
>>>>>    ???? >? ? ? >>>? ??? entirely in the spirit of how they are allowed to be
>>>>>    ???? >? ? ?distributed.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? If they aren't open source, then users of those
>>>>>    ??? packages
>>>>>    ???? >? ? ?should be
>>>>>    ???? >? ? ? >>>? ??? warned about that, and a check failure is a good
>>>>>    ??? way to do
>>>>>    ???? >? ? ?that.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? So you need to explain why it is important to be
>>>>>    ??? able to
>>>>>    ???? >? ? ?download and
>>>>>    ???? >? ? ? >>>? ??? install software and not be warned about it.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? I am not in R Core or CRAN, but I can suggest why
>>>>> it is
>>>>>    ???? >? ? ?better to
>>>>>    ???? >? ? ? >>>? ??? include source in the package:? it makes the use of
>>>>>    ??? that
>>>>>    ???? >? ? ?package more
>>>>>    ???? >? ? ? >>>? ??? reliable in the future.? It's not uncommon to run
>>>>> an R
>>>>>    ???? >? ? ?computation
>>>>>    ???? >? ? ? >>> that
>>>>>    ???? >? ? ? >>>? ??? was written a few years ago.? Sometimes libraries
>>>>> or R
>>>>>    ???? >? ? ?have changed,
>>>>>    ???? >? ? ? >>>? ??? and
>>>>>    ???? >? ? ? >>>? ??? a user will need to go back to a previous version to
>>>>>    ???? >? ? ?reproduce the
>>>>>    ???? >? ? ? >>>? ??? calculation.? Being able to able to rebuild a
>>>>>    ??? system as it
>>>>>    ???? >? ? ?would have
>>>>>    ???? >? ? ? >>>? ??? been back then is important.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? Is that possible if the package needs to make a
>>>>>    ??? download?? The
>>>>>    ???? >? ? ? >>> download
>>>>>    ???? >? ? ? >>>? ??? site that worked a few years ago may no longer
>>>>>    ??? exist.? If
>>>>>    ???? >? ? ?the site
>>>>>    ???? >? ? ? >>>? ??? exists, the code versions there may be different.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? Those are some of the issues that Simon was
>>>>>    ??? alluding to.
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? Duncan Murdoch
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? On 2025-03-02 5:45 a.m., Mossa Merhi Reimert via
>>>>>    ??? R-devel
>>>>>    ???? >? ? ?wrote:
>>>>>    ???? >? ? ? >>>? ???? > Dear Simon Urbanek,
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > There has been very little engagement with the
>>>>>    ??? issue I
>>>>>    ???? >? ? ?referred
>>>>>    ???? >? ? ? >>>? ??? to. If it was decided that this ?check? ought to be
>>>>>    ??? part
>>>>>    ???? >? ? ?of the
>>>>>    ???? >? ? ? >>>? ??? default checks for R,
>>>>>    ???? >? ? ? >>>? ???? > then that could have been written to us. Either
>>>>>    ??? on the
>>>>>    ???? >? ? ? >>> bugs.r-project.org <http://bugs.r-project.org>
>>>>>    ??? <http://bugs.r-project.org <http://bugs.r-project.org>>
>>>>>    ???? >? ? ?<http://bugs.r-project.org <http://bugs.r-project.org>
>>>>>    ??? <http://bugs.r-project.org <http://bugs.r-project.org>>> or the
>>>>> proposed
>>>>>    ???? >? ? ? >>>? ??? patch. Before we talk about anything else,
>>>>>    ???? >? ? ? >>>? ???? > it does seem very strange that we cannot get a
>>>>>    ??? reasonable
>>>>>    ???? >? ? ? >>>? ??? dialogue going.
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > I would like to say that the R/Rust community
>>>>>    ??? has grown
>>>>>    ???? >? ? ? >>>? ??? substantially. From my end, there are 3 bindings
>>>>>    ??? project,
>>>>>    ???? >? ? ?extendr,
>>>>>    ???? >? ? ? >>>? ??? savvy, and roxido.
>>>>>    ???? >? ? ? >>>? ???? > Then, there are now many rust-based packages on
>>>>>    ??? CRAN,
>>>>>    ???? >? ? ?see this
>>>>>    ???? >? ? ? >>>? ??? most recent compiled list
>>>>>    ???? > https://github.com/nanxstats/r-rust-pkgs
>>>>>    ??? <https://github.com/nanxstats/r-rust-pkgs>
>>>>>    ???? >? ? ?<https://github.com/nanxstats/r-rust-pkgs
>>>>>    ??? <https://github.com/nanxstats/r-rust-pkgs>>
>>>>>    ???? >? ? ? >>>? ??? <https://github.com/nanxstats/r-rust-pkgs
>>>>>    ??? <https://github.com/nanxstats/r-rust-pkgs>
>>>>>    ???? >? ? ?<https://github.com/nanxstats/r-rust-pkgs
>>>>>    ??? <https://github.com/nanxstats/r-rust-pkgs>>>.
>>>>>    ???? >? ? ? >>>? ???? > There is also proof-of-concept
>>>>>    ???? >? ? ? >>> https://github.com/r-rust/hellorust
>>>>>    ??? <https://github.com/r-rust/hellorust>
>>>>>    ???? >? ? ?<https://github.com/r-rust/hellorust
>>>>>    ??? <https://github.com/r-rust/hellorust>>
>>>>>    ???? >? ? ? >>>? ??? <https://github.com/r-rust/hellorust
>>>>>    ??? <https://github.com/r-rust/hellorust>
>>>>>    ???? >? ? ?<https://github.com/r-rust/hellorust
>>>>>    ??? <https://github.com/r-rust/hellorust>>> that integrates `cargo`,
>>>>>    ???? >? ? ? >>>? ??? rust?s official build system, with R?s package
>>>>>    ??? build system,
>>>>>    ???? >? ? ? >>>? ???? > and https://github.com/extendr/hellorustc
>>>>>    ??? <https://github.com/extendr/hellorustc>
>>>>>    ???? >? ? ?<https://github.com/extendr/hellorustc
>>>>>    ??? <https://github.com/extendr/hellorustc>>
>>>>>    ???? >? ? ? >>>? ??? <https://github.com/extendr/hellorustc
>>>>>    ??? <https://github.com/extendr/hellorustc>
>>>>>    ???? >? ? ?<https://github.com/extendr/hellorustc
>>>>>    ??? <https://github.com/extendr/hellorustc>>>, which showcases how Rust
>>>>>    ???? >? ? ? >>>? ??? compiler could be directly linked with R?s package
>>>>>    ??? system.
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? >? ?Let me say, that the current R CMD check is
>>>>>    ??? not meant
>>>>>    ???? >? ? ?to be
>>>>>    ???? >? ? ? >>>? ??? ?helpful?. When a package is built, `cargo` tells
>>>>>    ??? the user
>>>>>    ???? >? ? ? >>>? ??? ?Downloading crates?.
>>>>>    ???? >? ? ? >>>? ???? > Thus, this information is already conveyed to
>>>>>    ??? the user.
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > Personally, I do wish we could debate this
>>>>>    ??? requirement
>>>>>    ???? >? ? ?further. I
>>>>>    ???? >? ? ? >>>? ??? do not believe that having R-packages on CRAN
>>>>>    ??? vendor rust
>>>>>    ???? >? ? ? >>> dependencies
>>>>>    ???? >? ? ? >>>? ???? > as a good policy. Download statistics is a
>>>>> success
>>>>>    ???? >? ? ?metric of a
>>>>>    ???? >? ? ? >>>? ??? given r-package and rust packages. By insisting on
>>>>>    ???? >? ? ?vendoring, and
>>>>>    ???? >? ? ? >>> thus
>>>>>    ???? >? ? ? >>>? ???? > side-stepping `cargo` / crates.io
>>>>>    ??? <http://crates.io> <http://crates.io <http://crates.io>>
>>>>>    ???? >? ? ?<http://crates.io <http://crates.io> <http://crates.io
>>>>>    ??? <http://crates.io>>>, we are
>>>>>    ???? >? ? ? >>>? ??? robbing upstream authors of their download-numbers.
>>>>>    ??? I do
>>>>>    ???? >? ? ?not think
>>>>>    ???? >? ? ? >>>? ??? such policy is honourable.
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > While C/C++ do not have official package
>>>>>    ??? repositories,
>>>>>    ???? >? ? ?it could
>>>>>    ???? >? ? ? >>>? ??? be thought of, as fair game, to have CRAN act as a
>>>>>    ??? pseudo
>>>>>    ???? >? ? ?package
>>>>>    ???? >? ? ? >>>? ??? manager for C/C++ libraries.
>>>>>    ???? >? ? ? >>>? ???? > I?m not going to argue for or against this part.
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > There are many objections from the CRAN side to
>>>>>    ??? all things
>>>>>    ???? >? ? ? >>>? ??? related to Rust. I don?t want to open multiple
>>>>>    ??? topics in
>>>>>    ???? >? ? ?the same
>>>>>    ???? >? ? ? >>>? ??? thread.
>>>>>    ???? >? ? ? >>>? ???? > But there is plenty to bring up. And I had
>>>>> hoped we
>>>>>    ???? >? ? ?could talk
>>>>>    ???? >? ? ? >>>? ??? this little issue through, before embarking on a
>>>>> larger
>>>>>    ???? >? ? ?discussion.
>>>>>    ???? >? ? ? >>>? ???? > I do not appreciate the ?random demands?
>>>>> comment, as
>>>>>    ???? >? ? ?this is not
>>>>>    ???? >? ? ? >>>? ??? a demand, nor is it random.
>>>>>    ???? >? ? ? >>>? ???? > I have inquired my end of the community for
>>>>>    ??? suggestions
>>>>>    ???? >? ? ? >>>? ???? > to compile a larger proposal, but then I was
>>>>> afraid
>>>>>    ???? >? ? ?that this
>>>>>    ???? >? ? ? >>>? ??? would be perceived as a big, bulky demand.
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > Rust is not C/C++/Java, and the support for Rust
>>>>>    ??? cannot
>>>>>    ???? >? ? ?look like
>>>>>    ???? >? ? ? >>>? ??? the support for these languages.
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > From: Simon Urbanek <simon.urbanek at R-project.org>
>>>>>    ???? >? ? ? >>>? ???? > Date: Sunday, 2 March 2025 at 00.39
>>>>>    ???? >? ? ? >>>? ???? > To: Mossa Merhi Reimert <mossa at sund.ku.dk
>>>>>    ??? <mailto:mossa at sund.ku.dk>
>>>>>    ???? >? ? ?<mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>
>>>>>    ???? >? ? ? >>> <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>
>>>>>    ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>>>
>>>>>    ???? >? ? ? >>>? ???? > Cc: r-devel at r-project.org
>>>>>    ??? <mailto:r-devel at r-project.org>
>>>>>    ???? >? ? ?<mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>>
>>>>>    ??? <mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>>>    ???? >? ? ?<mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>>>
>>>>>    ???? >? ? ? >>>? ??? <r-devel at r-project.org
>>>>>    ??? <mailto:r-devel at r-project.org> <mailto:r-devel at r-project.org
>>>>>    ??? <mailto:r-devel at r-project.org>>
>>>>>    ???? >? ? ?<mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>>>    ??? <mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>>>>
>>>>>    ???? >? ? ? >>>? ???? > Subject: Re: [Rd] R CMD check and CRAN's Rust
>>>>> policy
>>>>>    ???? >? ? ? >>>? ???? > [Du f?r ikke ofte mails fra
>>>>>    ??? simon.urbanek at r-project.org <mailto:simon.urbanek at r-project.org>
>>>>>    ???? >? ? ?<mailto:simon.urbanek at r-project.org
>>>>>    ??? <mailto:simon.urbanek at r-project.org>>
>>>>>    ???? >? ? ? >>>? ??? <mailto:simon.urbanek at r-project.org
>>>>>    ??? <mailto:simon.urbanek at r-project.org>
>>>>>    ???? >? ? ?<mailto:simon.urbanek at r-project.org
>>>>>    ??? <mailto:simon.urbanek at r-project.org>>>. F? mere at vide om, hvorfor
>>>>>    ???? >? ? ? >>>? ??? dette er vigtigt, p?
>>>>>    ???? > https://aka.ms/LearnAboutSenderIdentification
>>>>>    ??? <https://aka.ms/LearnAboutSenderIdentification>
>>>>>    ???? >? ? ?<https://aka.ms/LearnAboutSenderIdentification
>>>>>    ??? <https://aka.ms/LearnAboutSenderIdentification>>
>>>>>    ???? >? ? ? >>>? ??? <https://aka.ms/LearnAboutSenderIdentification
>>>>>    ??? <https://aka.ms/LearnAboutSenderIdentification>
>>>>>    ???? >? ? ?<https://aka.ms/LearnAboutSenderIdentification
>>>>>    ??? <https://aka.ms/LearnAboutSenderIdentification>>> ]
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > Mossa,
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > the issue you cite is lacking any pertinent
>>>>>    ??? information
>>>>>    ???? >? ? ?and it's
>>>>>    ???? >? ? ? >>>? ??? not even clear why it should be an issue. The
>>>>> check is
>>>>>    ???? >? ? ?perfectly
>>>>>    ???? >? ? ? >>>? ??? justified, it just reports whether a package
>>>>> using rust
>>>>>    ???? >? ? ?declares
>>>>>    ???? >? ? ? >>>? ??? this correctly and where it downloads 3rd party
>>>>>    ??? content -
>>>>>    ???? >? ? ?something
>>>>>    ???? >? ? ? >>>? ??? that is important to R users in general and not
>>>>>    ??? related to
>>>>>    ???? >? ? ?CRAN. I
>>>>>    ???? >? ? ? >>>? ??? don't see how any of this is "prohibitive" it just
>>>>>    ??? calls
>>>>>    ???? >? ? ?out what
>>>>>    ???? >? ? ? >>>? ??? the package is already doing.
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > As discussed before, my hope was that the "R"ust
>>>>>    ???? >? ? ?community will
>>>>>    ???? >? ? ? >>>? ??? mature enough to work on proper support. It is not
>>>>>    ??? clear
>>>>>    ???? >? ? ?that it
>>>>>    ???? >? ? ? >>>? ??? happened yet, but once it does it would make sense
>>>>>    ??? to talk
>>>>>    ???? >? ? ?about
>>>>>    ???? >? ? ? >>>? ??? support just as we have for C, C++ and Java, so
>>>>>    ??? certainly that
>>>>>    ???? >? ? ? >>>? ??? should be the right discussion. However, it will
>>>>>    ??? have to
>>>>>    ???? >? ? ?start with
>>>>>    ???? >? ? ? >>>? ??? some thinking and a proposal on how the associated
>>>>>    ??? issues
>>>>>    ???? >? ? ?(compiler
>>>>>    ???? >? ? ? >>>? ??? support, versioning, dependency sources etc.) are
>>>>> to be
>>>>>    ???? >? ? ?addressed,
>>>>>    ???? >? ? ? >>>? ??? as opposed to making random demands. All this has
>>>>>    ??? nothing
>>>>>    ???? >? ? ?to do with
>>>>>    ???? >? ? ? >>>? ??? CRAN so the issue you mention seems irrelevant to
>>>>> the
>>>>>    ???? >? ? ?progress. Also
>>>>>    ???? >? ? ? >>>? ??? I'd like to know what are the "challenges
>>>>> embedded in R
>>>>>    ???? >? ? ?itself".
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > Cheers,
>>>>>    ???? >? ? ? >>>? ???? > Simon
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? >> On Mar 2, 2025, at 8:45 AM, Mossa Merhi
>>>>> Reimert via
>>>>>    ???? >? ? ?R-devel
>>>>>    ???? >? ? ? >>>? ??? <r-devel at r-project.org
>>>>>    ??? <mailto:r-devel at r-project.org> <mailto:r-devel at r-project.org
>>>>>    ??? <mailto:r-devel at r-project.org>>
>>>>>    ???? >? ? ?<mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>
>>>>>    ??? <mailto:r-devel at r-project.org <mailto:r-devel at r-project.org>>>>
>>>>> wrote:
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> Hello everyone!
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> I'm Mossa, I'm one of the maintainers of
>>>>>    ??? extendr, an
>>>>>    ???? >? ? ?automated
>>>>>    ???? >? ? ? >>>? ??? generation of bindings project for
>>>>>    ???? >? ? ? >>>? ???? >> Rust code, for use in R-packages.
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> I'm writing to you, as R 4.4.3 was just
>>>>>    ??? released, and
>>>>>    ???? >? ? ?there have
>>>>>    ???? >? ? ? >>>? ??? not been
>>>>>    ???? >? ? ? >>>? ???? >> follow-up on an issue important to us. Link
>>>>> to the
>>>>>    ???? >? ? ?issue as
>>>>>    ???? >? ? ? >>>? ??? discussed on r-devel
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? > https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html
>>>>>    ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>
>>>>>    ???? > ???? ?<https://stat.ethz.ch/pipermail/r-devel/2024-
>>>>> October/083666.html
>>>>>    ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>>
>>>>>    ???? >? ? ? >>>
>>>>>    ???? > ???? ?<https://stat.ethz.ch/pipermail/r-devel/2024-
>>>>> October/083666.html
>>>>>    ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>
>>>>>    ???? > ???? ?<https://stat.ethz.ch/pipermail/r-devel/2024-
>>>>> October/083666.html
>>>>>    ??? <https://stat.ethz.ch/pipermail/r-devel/2024-October/083666.html>>>
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> A community member has provided a suggestion
>>>>> to a
>>>>>    ???? >? ? ?patch here
>>>>>    ???? >? ? ? >>> https://github.com/r-devel/r-svn/pull/182
>>>>>    ??? <https://github.com/r-devel/r-svn/pull/182>
>>>>>    ???? >? ? ?<https://github.com/r-devel/r-svn/pull/182
>>>>>    ??? <https://github.com/r-devel/r-svn/pull/182>>
>>>>>    ???? >? ? ? >>>? ??? <https://github.com/r-devel/r-svn/pull/182
>>>>>    ??? <https://github.com/r-devel/r-svn/pull/182>
>>>>>    ???? >? ? ?<https://github.com/r-devel/r-svn/pull/182
>>>>>    ??? <https://github.com/r-devel/r-svn/pull/182>>>, and we have also
>>>>>    ???? >? ? ? >>>? ??? attempted to bring it up on
>>>>>    ???? >? ? ? >>>? ???? >> Bugzilla:
>>>>>    ???? > https://bugs.r-project.org/show_bug.cgi?id=18806
>>>>>    ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>
>>>>>    ???? >? ? ?<https://bugs.r-project.org/show_bug.cgi?id=18806
>>>>>    ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>>
>>>>>    ???? >? ? ? >>>? ??? <https://bugs.r-project.org/show_bug.cgi?id=18806
>>>>>    ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>
>>>>>    ???? >? ? ?<https://bugs.r-project.org/show_bug.cgi?id=18806
>>>>>    ??? <https://bugs.r-project.org/show_bug.cgi?id=18806>>>
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> TLDR: Default `R CMD check` uses additional
>>>>>    ???? >? ? ?CRAN-specific checks
>>>>>    ???? >? ? ? >>>? ??? for Rust,
>>>>>    ???? >? ? ? >>>? ???? >> instead of keeping this behind the --as-cran
>>>>> flag.
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> I would like to say, that there is a growing
>>>>>    ??? interest
>>>>>    ???? >? ? ?in Rust
>>>>>    ???? >? ? ? >>>? ??? within the R community.
>>>>>    ???? >? ? ? >>>? ???? >> And generally, Rust becoming a widely adopted
>>>>>    ??? language
>>>>>    ???? >? ? ?within
>>>>>    ???? >? ? ? >>>? ??? the Python community (including the scientific part
>>>>>    ??? of that
>>>>>    ???? >? ? ? >>>? ??? community). It is time to deal with the
>>>>>    ???? >? ? ? >>>? ???? >> pain points with using Rust in R.
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> Therefore, I would kindly ask that we have a
>>>>>    ??? dialogue
>>>>>    ???? >? ? ?on how to
>>>>>    ???? >? ? ? >>>? ??? remedy the issue above first, and how we may deal
>>>>> with
>>>>>    ???? >? ? ?other issues
>>>>>    ???? >? ? ? >>>? ??? going forward. There are both challenges embedded
>>>>> in R
>>>>>    ???? >? ? ?itself, and
>>>>>    ???? >? ? ? >>>? ??? the current CRAN policy for Rust is prohibitive.
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> Mossa Merhi Reimert
>>>>>    ???? >? ? ? >>>? ???? >> Postdoctoral Researcher
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> K?benhavns Universitet
>>>>>    ???? >? ? ? >>>? ???? >> Department of Veterinary and Animal Sciences
>>>>>    ???? >? ? ? >>>? ???? >> Animal Welfare and Disease Control
>>>>>    ???? >? ? ? >>>? ???? >> Gr?nneg?rdsvej 8
>>>>>    ???? >? ? ? >>>? ???? >> 1870 Frederiksberg C
>>>>>    ???? >? ? ? >>>? ???? >> Denmark
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> +45 35324135
>>>>>    ???? >? ? ? >>>? ???? >> mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>
>>>>>    ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>
>>>>>    ???? >? ? ? >>>? ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>
>>>>>    ???? >? ? ?<mailto:mossa at sund.ku.dk
>>>>>    ??? <mailto:mossa at sund.ku.dk>>><mailto:mossa at sund.ku.dk
>>>>>    ??? <mailto:mossa at sund.ku.dk>
>>>>>    ???? >? ? ?<mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>
>>>>>    ???? >? ? ? >>>? ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>
>>>>>    ??? <mailto:mossa at sund.ku.dk <mailto:mossa at sund.ku.dk>>>>
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >>? ? ? ? [[alternative HTML version deleted]]
>>>>>    ???? >? ? ? >>>? ???? >>
>>>>>    ???? >? ? ? >>>? ???? >> ______________________________________________
>>>>>    ???? >? ? ? >>>? ???? >> R-devel at r-project.org
>>>>>    ??? <mailto:R-devel at r-project.org> <mailto:R-devel at r-project.org
>>>>>    ??? <mailto:R-devel at r-project.org>>
>>>>>    ???? >? ? ?<mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>>    ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>>
>>>>>    ???? >? ? ?mailing list
>>>>>    ???? >? ? ? >>>? ???? >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>>    ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>>    ???? >? ? ? >>>? ??? <https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>>    ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>>
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? >? ? ? ?[[alternative HTML version deleted]]
>>>>>    ???? >? ? ? >>>? ???? >
>>>>>    ???? >? ? ? >>>? ???? > ______________________________________________
>>>>>    ???? >? ? ? >>>? ???? > R-devel at r-project.org
>>>>>    ??? <mailto:R-devel at r-project.org> <mailto:R-devel at r-project.org
>>>>>    ??? <mailto:R-devel at r-project.org>>
>>>>>    ???? >? ? ?<mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>>    ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>>
>>>>>    ???? >? ? ?mailing list
>>>>>    ???? >? ? ? >>>? ???? > https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>>    ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>>    ???? >? ? ? >>>? ??? <https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>>    ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>>
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>>? ??? ______________________________________________
>>>>>    ???? >? ? ? >>> R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>>    ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>
>>>>>    ???? >? ? ?<mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>>    ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>>
>>>>>    ???? >? ? ?mailing list
>>>>>    ???? >? ? ? >>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>>    ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>>    ???? >? ? ? >>>? ??? <https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>>    ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>>
>>>>>    ???? >? ? ? >>>
>>>>>    ???? >? ? ? >>
>>>>>    ???? >? ? ? >> ______________________________________________
>>>>>    ???? >? ? ? >> R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>>    ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>
>>>>>    ??? mailing list
>>>>>    ???? >? ? ? >> https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>>    ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>>    ???? >? ? ? >
>>>>>    ???? >
>>>>>    ???? >? ? ?______________________________________________
>>>>>    ???? > R-devel at r-project.org <mailto:R-devel at r-project.org>
>>>>>    ??? <mailto:R-devel at r-project.org <mailto:R-devel at r-project.org>>
>>>>>    ??? mailing list
>>>>>    ???? > https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>
>>>>>    ???? >? ? ?<https://stat.ethz.ch/mailman/listinfo/r-devel
>>>>>    ??? <https://stat.ethz.ch/mailman/listinfo/r-devel>>
>>>>>    ???? >
>>>>>
>>>>
>>>
>>
>


From ht @end|ng |rom he@therturner@net  Wed Apr  2 14:43:14 2025
From: ht @end|ng |rom he@therturner@net (Heather Turner)
Date: Wed, 02 Apr 2025 13:43:14 +0100
Subject: [Rd] R Dev Day @ RSECon25, Fri 12 Sep,
 Warwick University  - travel funding available!
Message-ID: <42fe8aa9-7aca-46eb-b795-c11f2d70ea33@app.fastmail.com>

Dear All,

There will be another R Dev Day after RSECon25, on Friday 12 Sep, Warwick University, UK.

Travel funding is available - for participants from UK/Europe, this will cover travel plus up to 2 nights accommodation and for participants from the Global South this will cover travel plus up to 6 nights accommodation. RSECon25 registration must be arranged separately (you can apply for a conference fee waiver through the bursary scheme).

Read more details and apply for a place: https://warwick.ac.uk/fac/sci/statistics/news/r-dev-day-rsecon25/

*Deadline: Tuesday, 23 April (midnight anywhere on earth).*

The latest information for all upcoming R Dev Days can be found on the contributor site: https://contributor.r-project.org/events/r-dev-days/.

Best wishes,

Heather


From |kry|ov @end|ng |rom d|@root@org  Wed Apr  2 15:35:27 2025
From: |kry|ov @end|ng |rom d|@root@org (Ivan Krylov)
Date: Wed, 2 Apr 2025 16:35:27 +0300
Subject: [Rd] 
 Suggestion: Install packages on non-appendable file systems
 (e.g. databricks volumes)
In-Reply-To: <CAGBo=GmW8jjRrVTDq6hN8Uf_Dx3nGtWY04X5-=eS1XKiA01VvA@mail.gmail.com>
References: <CAGBo=GnvV_udrRMWmL_hCsRceUZibtDfpR05sxs8ZSxkbd8rOg@mail.gmail.com>
 <ec874f23-cdb9-4902-b7a6-24cd64d6659f@gmail.com>
 <CAGBo=GmW8jjRrVTDq6hN8Uf_Dx3nGtWY04X5-=eS1XKiA01VvA@mail.gmail.com>
Message-ID: <20250402163527.7d738606@arachnoid>

? Thu, 27 Mar 2025 13:26:47 +0100
Sergio Oller <sergioller at gmail.com> ?????:

> Our current workaround kind of works, but when users expect to be able
> to install packages
> using renv or other tools that use install.packages to work; our
> wrapper is not that convenient.

Here's an idea that might help: since R CMD INSTALL launches R without
--vanilla, you can provide a system-wide startup file to your users that
would patch the installation function at runtime without patching the R
source code:

if (nzchar(Sys.getenv("R_LOCKDIR_PREFIX", "")))
invisible(suppressMessages(trace(
    tools:::.install_packages,
    tracer = quote(local({
        prefix <- path.expand(Sys.getenv("R_LOCKDIR_PREFIX", ""))
        lockdir <- NULL
        # prepend the prefix when asked for lockdir and it's non-empty
        makeActiveBinding(
            "lockdir",
            function (newval) {
                if (!missing(newval)) lockdir <<- newval
                if (nzchar(lockdir)) file.path(prefix, lockdir) else ""
            },
            parent.env(environment())
        )
    })),
    print = FALSE
)))

This is the same workaround as you have originally suggested, making
the installation on a non-appendable filesystem possible at the cost of
losing atomicity, with the added downside that an update of R could
change the internals and break the patch.

In theory, the same approach could be used to wrap the function that
installs source packages [*] in order to first install the package in a
non-databrick directory, then populate a temporary directory on the
databrick with the package contents, then rename it to the intended
installation directory. This would be even more brittle and harder to
implement because the function is created during the runtime of
tools:::.install_packages.

It might be easier to support a patched version of R installed on
databricks than such an Rprofile.

-- 
Best regards,
Ivan

[*]
https://github.com/r-devel/r-svn/blob/0a905442c27b538c7626b21e262939873523f209/src/library/tools/R/install.R#L544


From henr|k@bengt@@on @end|ng |rom gm@||@com  Thu Apr  3 05:24:37 2025
From: henr|k@bengt@@on @end|ng |rom gm@||@com (Henrik Bengtsson)
Date: Wed, 2 Apr 2025 20:24:37 -0700
Subject: [Rd] structure(<primitive function>, ...) is sticky: a bug,
 or should it be an error?
In-Reply-To: <CAFDcVCR14Tqoz4eKR5pFZLSTpoDxv2jE9fs3B0w4ZO6=CdmrXw@mail.gmail.com>
References: <CAFDcVCTka7-qHEHZ6U42ynSVffpEgZwboqJBOuDMCAMEtyNaFQ@mail.gmail.com>
 <26587.61068.527937.384919@stat.math.ethz.ch>
 <CAFDcVCSyG1HxUO1ZNUxQ=BGUGgPtoVQBqySnWg_EJyLa_VtzZA@mail.gmail.com>
 <26589.28252.677695.886493@stat.math.ethz.ch>
 <26589.35840.771000.991255@stat.math.ethz.ch>
 <CAFDcVCR14Tqoz4eKR5pFZLSTpoDxv2jE9fs3B0w4ZO6=CdmrXw@mail.gmail.com>
Message-ID: <CAFDcVCRUakN0pdCZNLjdQkw135EqCEjURUqLSCov7KALjFUO9g@mail.gmail.com>

Thank you Martin - I've been following your commits to R-devel and
R-beta. FWIW, I've just verified that it works as expected - I scanned
the base environment for all primitive functions and then verified
that attr(x, "abc") <- TRUE gives an error on R-devel;

$ R --vanilla
R Under development (unstable) (2025-04-02 r88098) -- "Unsuffered Consequences"
> attr(sum, "abc") <- TRUE
Error in attr(sum, "abc") <- TRUE : cannot set attribute on a 'builtin'

a warning on R-beta;

$ R --vanilla
> R version 4.5.0 beta (2025-04-02 r88102) -- "How About a Twenty-Six"
> attr(sum, "abc") <- TRUE
Warning message:
In attr(sum, "abc") <- TRUE :
  Setting attributes on primitive functions is deprecated and will be disabled

and neither on R release.

For the warning in R 4.5.0 beta, have you considered making it a
warning of class 'deprecatedWarning'? Not a big deal, but wanted to
mention it, just in case.

/Henrik

On Fri, Mar 21, 2025 at 10:07?AM Henrik Bengtsson
<henrik.bengtsson at gmail.com> wrote:
>
> On Fri, Mar 21, 2025 at 8:55?AM Martin Maechler
> <maechler at stat.math.ethz.ch> wrote:
> >
> > >>>>> Martin Maechler
> > >>>>>     on Fri, 21 Mar 2025 14:49:16 +0100 writes:
> >
> > >>>>> Henrik Bengtsson
> > >>>>>     on Thu, 20 Mar 2025 11:55:05 -0700 writes:
> >
> >     >>> I'm pretty convinced we should fix it by checking for
> >     >>> primitive functions inside the C code of `attributes<-` :
> >     >>> arguably the bug is really there, rather than in
> >     >>> structure().
> >     >>>
> >     >>> Patches are welcome (via R's Bugzilla or just here).
> >
> >     >> Thank you Martin. I'll make sure I create a brief BugZilla
> >     >> report on this, and hopefully a follow with a patch later
> >     >> on.
> >
> >     >> One question on urgency or not: Is it too late to get such
> >     >> a change in for the R 4.5.0 release? I suspect so, because
> >     >> it has a potential of breaking existing packages. But if
> >     >> there's a possibility of fixing this in R 4.5.0, I'll make
> >     >> this a top priority.  Please let me know.
> >
> >     >> /Henrik
> >
> >     > In such cases, I always go to  https://developer.r-project.org/
> >     > and look at the release schedule.
> >
> >     > Important for this Q seems
> >
> >     > * Friday 2025-03-14: GRAND-FEATURE FREEZE (4.5.0 alpha)
> >     > * Friday 2025-03-28: FEATURE FREEZE (4.5.0 beta)
> >     > * Friday 2025-04-04: CODE FREEZE (4.5.0 RC)
> >
> >     > So, yes there's a possibility  ... but as you mentioned, too,
> >     > it depends quite a bit on if the fix is easily affectiong useR
> >     > and CRAN/Bioc package space.
> >
> >     > Martin
> >
> > As a matter of fact, I'm testing already a simple patch I wrote
> > myself.
> > So, sorry, but I must renounce the above  "Patches are welcome".
>
> Excellent and even better (for me). Thank you Martin!
>
> /Henrik
>
> >
> > Martin


From jeroenoom@ @end|ng |rom gm@||@com  Thu Apr  3 11:13:44 2025
From: jeroenoom@ @end|ng |rom gm@||@com (Jeroen Ooms)
Date: Thu, 3 Apr 2025 11:13:44 +0200
Subject: [Rd] Enable compression in download.file()
Message-ID: <CABFfbXszJjhJCO3Dyhwodk8BCjnrdD36buttar354Q3B8FFtKg@mail.gmail.com>

Comparing download times of base R and the curl package:

  url <- 'https://jeroen.github.io/data/nycflights13.json'
  tmp <- tempfile()
  system.time(download.file(url, tmp, quiet = F)
  system.time(curl::curl_download(url, tmp, quiet = F))

Because this is an uncompressed file, the gzipped download is about 7x faster.

For the solution see https://curl.se/libcurl/c/CURLOPT_ACCEPT_ENCODING.html :

> To aid applications not having to bother about what specific algorithms this particular libcurl build supports, libcurl allows a zero-length string to be set ("") to ask for an Accept-Encoding: header to be used that contains all built-in supported encodings.


From @unwj|e @end|ng |rom gm@||@com  Thu Apr  3 10:36:39 2025
From: @unwj|e @end|ng |rom gm@||@com (Sun Wenjie)
Date: Thu, 3 Apr 2025 10:36:39 +0200
Subject: [Rd] Proposal: Integrating Rust Toolchain into Rtools for
 Rust-Based R Package Development
Message-ID: <E98B4E64-559D-41E1-8B65-7B6A39773129@gmail.com>

Dear R-devel community,

I'm exploring (experimentally) the integration of the Rust toolchain into 
Rtools, to enable smoother development and shipping of Rust-based R packages 
on Windows.

I've written a detailed blog post documenting the process, technical rationale
and what?s next:
https://medium.com/@sunwjie/integrating-the-rust-toolchain-into-rtools-e4c7df40cb82.

Currently, Rust is not included in Rtools, and setting it up alongside R on
Windows can be confusing for some users, especially those unfamiliar with
computers. However, both Rust (via the -gnu toolchain) and
Rtools share the same MinGW-based toolchain, making integration technically
feasible.

What I?ve done so far
- Built a custom Rtools45 installer with Rust 1.85.0 integrated alongside GCC
  and other tools.
- Successfully tested Rust-based R packages like {string2path} using the custom
  Rtools.

I'd love to contribute this work upstream and collaborate with Rtools
maintainers to make Rust a supported part of the official Rtools release. Are
there existing plans or blockers around this?

Thank you for your time, and I look forward to your thoughts! 

Best regards,
Wenjie

?? 
https://www.sun-wenjie.site


From @vr@h@m@@d|er @end|ng |rom gm@||@com  Thu Apr  3 13:57:07 2025
From: @vr@h@m@@d|er @end|ng |rom gm@||@com (Avraham Adler)
Date: Thu, 3 Apr 2025 07:57:07 -0400
Subject: [Rd] Proposal: Integrating Rust Toolchain into Rtools for
 Rust-Based R Package Development
In-Reply-To: <E98B4E64-559D-41E1-8B65-7B6A39773129@gmail.com>
References: <E98B4E64-559D-41E1-8B65-7B6A39773129@gmail.com>
Message-ID: <1C3455E7-B3D7-41B7-A994-82D805785B49@gmail.com>

Hello, Wenjie. 

If you are specifically interested in Windows, Tomas Kalibera is the keeper of Rtools for Windows and it has its own list at R-sig-windows which may provide more focus. 

Thank you,

Avi

Sent from my iPhone

> On Apr 3, 2025, at 7:30?AM, Sun Wenjie <sunwjie at gmail.com> wrote:
> 
> ?Dear R-devel community,
> 
> I'm exploring (experimentally) the integration of the Rust toolchain into
> Rtools, to enable smoother development and shipping of Rust-based R packages
> on Windows.
> 
> I've written a detailed blog post documenting the process, technical rationale
> and what?s next:
> https://medium.com/@sunwjie/integrating-the-rust-toolchain-into-rtools-e4c7df40cb82.
> 
> Currently, Rust is not included in Rtools, and setting it up alongside R on
> Windows can be confusing for some users, especially those unfamiliar with
> computers. However, both Rust (via the -gnu toolchain) and
> Rtools share the same MinGW-based toolchain, making integration technically
> feasible.
> 
> What I?ve done so far
> - Built a custom Rtools45 installer with Rust 1.85.0 integrated alongside GCC
>  and other tools.
> - Successfully tested Rust-based R packages like {string2path} using the custom
>  Rtools.
> 
> I'd love to contribute this work upstream and collaborate with Rtools
> maintainers to make Rust a supported part of the official Rtools release. Are
> there existing plans or blockers around this?
> 
> Thank you for your time, and I look forward to your thoughts!
> 
> Best regards,
> Wenjie
> 
> ??
> https://www.sun-wenjie.site
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Thu Apr  3 14:21:40 2025
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Thu, 3 Apr 2025 14:21:40 +0200
Subject: [Rd] Proposal: Integrating Rust Toolchain into Rtools for
 Rust-Based R Package Development
In-Reply-To: <E98B4E64-559D-41E1-8B65-7B6A39773129@gmail.com>
References: <E98B4E64-559D-41E1-8B65-7B6A39773129@gmail.com>
Message-ID: <24d5f3e1-5727-44d9-9800-22982183fdbb@gmail.com>

Congratulations on figuring out how to extend the build of the Rtools 
installer to add more programs there - it is always good to have a 
confirmation such things are clear enough from the available 
documentation and sources. You can see that e.g. QPDF is added this way, 
but adding a toolchain requires a different approach (more below).

What may not have been clear enough - please keep in mind that there are 
two distinct parts of what you get when you install Rtools from the 
installer: an (essentially vanilla) installation of Msys2 with the msys2 
subsystem, and toolchain + libraries built via (customized) MXE. The 
latter does not depend on the former. The latter can be (and is) built 
on Linux, without any involvement of Msys2. It doesn't use the Cygwin 
runtime in any way. In principle, one could use the latter only without 
the former, provided one has an alternative set of build tools (so 
perhaps the original Cygwin distribution, maybe WSL2 - even though, this 
is not tested, some details surely would have to be figured out). The 
latter is what includes the toolchains (and libraries), and can be also 
downloaded as a tarball - this is convenient for people who have their 
own installation of Msys2 they use. Also it is good for github actions 
(with a smaller tarball for that, when it suffices).

Also please note that Rtools doesn't use any of mingw-w64 from Msys2. It 
only uses programs using the Cygwin runtime (as build tools). Msys2 has 
indeed toolchains based on mingw-w64, but Rtools doesn't use them (from 
version 42).

To properly integrate Rust, one would have to make it part of the 
toolchain+libraries, so add it to MXE. One would have to build it using 
the compiler suite used within MXE. The upstream version of MXE uses 
gcc, which doesn't yet have a stable version of Rust. Once it will have 
it, it would make sense to extend MXE to also build Rust compilers using 
the same gcc used also to build C, C++ and Fortran compilers, and indeed 
make sure Rust will use the toolchains and libraries from the same build 
of MXE. That way it will be assured that the compiler runtimes and all 
libraries are compatible. Without that, they cannot be.

Rtools is also available for LLVM/aarch64, only a downstream version I 
am maintaining. In theory, Rust could already be added there, because 
LLVM already supports it. In theory, we could even use LLVM on x86_64 
then to get Rust. But, not in practice, because the Fortran 90 compiler 
(flang-new) in LLVM is not yet stable enough.

Best
Tomas

On 4/3/25 10:36, Sun Wenjie wrote:
> Dear R-devel community,
>
> I'm exploring (experimentally) the integration of the Rust toolchain into
> Rtools, to enable smoother development and shipping of Rust-based R packages
> on Windows.
>
> I've written a detailed blog post documenting the process, technical rationale
> and what?s next:
> https://medium.com/@sunwjie/integrating-the-rust-toolchain-into-rtools-e4c7df40cb82.
>
> Currently, Rust is not included in Rtools, and setting it up alongside R on
> Windows can be confusing for some users, especially those unfamiliar with
> computers. However, both Rust (via the -gnu toolchain) and
> Rtools share the same MinGW-based toolchain, making integration technically
> feasible.
>
> What I?ve done so far
> - Built a custom Rtools45 installer with Rust 1.85.0 integrated alongside GCC
>    and other tools.
> - Successfully tested Rust-based R packages like {string2path} using the custom
>    Rtools.
>
> I'd love to contribute this work upstream and collaborate with Rtools
> maintainers to make Rust a supported part of the official Rtools release. Are
> there existing plans or blockers around this?
>
> Thank you for your time, and I look forward to your thoughts!
>
> Best regards,
> Wenjie
>
> ??
> https://www.sun-wenjie.site
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From c@g|||e@p|e @end|ng |rom gm@||@com  Thu Apr  3 17:16:48 2025
From: c@g|||e@p|e @end|ng |rom gm@||@com (Colin Gillespie)
Date: Thu, 3 Apr 2025 16:16:48 +0100
Subject: [Rd] Bad URLs in DESCRIPTION files
Message-ID: <CADbDLZ=fq8_ff32mBvjZNpbi38STRpPGi1=5epknGTYcqw-2SA@mail.gmail.com>

Hi All,

Just want to flag a few packages:

MatrixLDA: https://cran.r-project.org/web/packages/MatrixLDA/index.html
The URL is technically valid - ajmolstad at github.io/ - but returns a
404. Almost certainly a typo.

redistmetrics: https://cran.r-project.org/web/packages/redistmetrics/index.html
Not a valid URL: https::/github.com/alarm-redist/redistmetrics/

yarrr: https://cran.r-project.org/web/packages/yarrr/
It looks like a lapsed domain, and Cypro folks have grabbed it.

Thanks

Colin

Ps I only found the last package because the name caught my attention


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Thu Apr  3 19:57:50 2025
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Thu, 3 Apr 2025 19:57:50 +0200
Subject: [Rd] Bad URLs in DESCRIPTION files
In-Reply-To: <CADbDLZ=fq8_ff32mBvjZNpbi38STRpPGi1=5epknGTYcqw-2SA@mail.gmail.com>
References: <CADbDLZ=fq8_ff32mBvjZNpbi38STRpPGi1=5epknGTYcqw-2SA@mail.gmail.com>
Message-ID: <CAN+W6_sGdx2x4vPrU=NF2zCJNJZASQRBuTT51XJ7Hxr2kF+n3A@mail.gmail.com>

Hi Colin,

I'm surprised this wasn't captured by the url checker on CRAN.
Are you suggesting a new check on package descriptions for the urls present?
In that case I guess it could be part of the standard R CMD check.

Llu?s

On Thu, 3 Apr 2025 at 17:17, Colin Gillespie <csgillespie at gmail.com> wrote:

> Hi All,
>
> Just want to flag a few packages:
>
> MatrixLDA: https://cran.r-project.org/web/packages/MatrixLDA/index.html
> The URL is technically valid - ajmolstad at github.io/ - but returns a
> 404. Almost certainly a typo.
>
> redistmetrics:
> https://cran.r-project.org/web/packages/redistmetrics/index.html
> Not a valid URL: https::/github.com/alarm-redist/redistmetrics/
>
> yarrr: https://cran.r-project.org/web/packages/yarrr/
> It looks like a lapsed domain, and Cypro folks have grabbed it.
>
> Thanks
>
> Colin
>
> Ps I only found the last package because the name caught my attention
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From c@g|||e@p|e @end|ng |rom gm@||@com  Fri Apr  4 09:43:17 2025
From: c@g|||e@p|e @end|ng |rom gm@||@com (Colin Gillespie)
Date: Fri, 4 Apr 2025 08:43:17 +0100
Subject: [Rd] Bad URLs in DESCRIPTION files
In-Reply-To: <CAN+W6_sGdx2x4vPrU=NF2zCJNJZASQRBuTT51XJ7Hxr2kF+n3A@mail.gmail.com>
References: <CADbDLZ=fq8_ff32mBvjZNpbi38STRpPGi1=5epknGTYcqw-2SA@mail.gmail.com>
 <CAN+W6_sGdx2x4vPrU=NF2zCJNJZASQRBuTT51XJ7Hxr2kF+n3A@mail.gmail.com>
Message-ID: <CADbDLZ=AXHGCwpZvtja0tP=yhfRpT85hmuNk-oFr4ZtX67RXwQ@mail.gmail.com>

> I'm surprised this wasn't captured by the url checker on CRAN.
As was I

> Are you suggesting a new check on package descriptions for the urls present?
Yes - but more fixing edge cases than a new check

> In that case I guess it could be part of the standard R CMD check.

Yep. Kurt's message suggests that these were edge cases that missed the check.

Thanks

>
> Llu?s
>
> On Thu, 3 Apr 2025 at 17:17, Colin Gillespie <csgillespie at gmail.com> wrote:
>>
>> Hi All,
>>
>> Just want to flag a few packages:
>>
>> MatrixLDA: https://cran.r-project.org/web/packages/MatrixLDA/index.html
>> The URL is technically valid - ajmolstad at github.io/ - but returns a
>> 404. Almost certainly a typo.
>>
>> redistmetrics: https://cran.r-project.org/web/packages/redistmetrics/index.html
>> Not a valid URL: https::/github.com/alarm-redist/redistmetrics/
>>
>> yarrr: https://cran.r-project.org/web/packages/yarrr/
>> It looks like a lapsed domain, and Cypro folks have grabbed it.
>>
>> Thanks
>>
>> Colin
>>
>> Ps I only found the last package because the name caught my attention
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From Kurt@Horn|k @end|ng |rom wu@@c@@t  Fri Apr  4 18:36:26 2025
From: Kurt@Horn|k @end|ng |rom wu@@c@@t (Kurt Hornik)
Date: Fri, 4 Apr 2025 18:36:26 +0200
Subject: [Rd] Bad URLs in DESCRIPTION files
In-Reply-To: <CADbDLZ=AXHGCwpZvtja0tP=yhfRpT85hmuNk-oFr4ZtX67RXwQ@mail.gmail.com>
References: <CADbDLZ=fq8_ff32mBvjZNpbi38STRpPGi1=5epknGTYcqw-2SA@mail.gmail.com>
 <CAN+W6_sGdx2x4vPrU=NF2zCJNJZASQRBuTT51XJ7Hxr2kF+n3A@mail.gmail.com>
 <CADbDLZ=AXHGCwpZvtja0tP=yhfRpT85hmuNk-oFr4ZtX67RXwQ@mail.gmail.com>
Message-ID: <26608.2698.826234.53113@hornik.net>

>>>>> Colin Gillespie writes:

>> I'm surprised this wasn't captured by the url checker on CRAN.
> As was I

>> Are you suggesting a new check on package descriptions for the urls present?
> Yes - but more fixing edge cases than a new check

>> In that case I guess it could be part of the standard R CMD check.

> Yep. Kurt's message suggests that these were edge cases that missed
> the check.

Actually, the check code finds all these problems, but it is only run
upon submission.  Running 

x <- tools::CRAN_package_db()
y <- parallel::mclapply(x$URL,
                        tools:::.bad_DESCRIPTION_URL_field_parts,
                        mc.cores = 6L)
names(y) <- x$Package
y <- Filter(length, y)
y

currently finds problems in 50 CRAN packages.

Best
-k

> Thanks

>> 
>> Llu?s
>> 
>> On Thu, 3 Apr 2025 at 17:17, Colin Gillespie <csgillespie at gmail.com> wrote:
>>> 
>>> Hi All,
>>> 
>>> Just want to flag a few packages:
>>> 
>>> MatrixLDA: https://cran.r-project.org/web/packages/MatrixLDA/index.html
>>> The URL is technically valid - ajmolstad at github.io/ - but returns a
>>> 404. Almost certainly a typo.
>>> 
>>> redistmetrics: https://cran.r-project.org/web/packages/redistmetrics/index.html
>>> Not a valid URL: https::/github.com/alarm-redist/redistmetrics/
>>> 
>>> yarrr: https://cran.r-project.org/web/packages/yarrr/
>>> It looks like a lapsed domain, and Cypro folks have grabbed it.
>>> 
>>> Thanks
>>> 
>>> Colin
>>> 
>>> Ps I only found the last package because the name caught my attention
>>> 
>>> ______________________________________________
>>> R-devel at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel

> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Sun Apr  6 16:55:10 2025
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Sun, 6 Apr 2025 16:55:10 +0200
Subject: [Rd] WRE Date field & CRAN
Message-ID: <CAN+W6_v7PP5tgPUG-UmYwrxZwkAYpjxGW65YT+buQM9AUfcmVg@mail.gmail.com>

Hi,

On Writing R Extensions there is a footnote [6] about the "Date" field on
the DESCRIPTION file being required by CRAN:

"required by CRAN, so checked by R CMD check --as-cran"

I think this is no longer up to date, as I've seen packages published on
CRAN without it.
This might be because now the Packaged date is checked too (around
src/tools/R/QC.R line 7998).

Best,

Llu?s


[6]: https://cran.r-project.org/doc/manuals/r-devel/R-exts.html#FOOT6

	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Apr  6 17:40:38 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 6 Apr 2025 11:40:38 -0400
Subject: [Rd] WRE Date field & CRAN
In-Reply-To: <CAN+W6_v7PP5tgPUG-UmYwrxZwkAYpjxGW65YT+buQM9AUfcmVg@mail.gmail.com>
References: <CAN+W6_v7PP5tgPUG-UmYwrxZwkAYpjxGW65YT+buQM9AUfcmVg@mail.gmail.com>
Message-ID: <1c819ad2-13b9-4ae1-993e-aa5484eb4e7e@gmail.com>

On 2025-04-06 10:55 a.m., Llu?s Revilla wrote:
> Hi,
> 
> On Writing R Extensions there is a footnote [6] about the "Date" field on
> the DESCRIPTION file being required by CRAN:
> 
> "required by CRAN, so checked by R CMD check --as-cran"
> 
> I think this is no longer up to date, as I've seen packages published on
> CRAN without it.
> This might be because now the Packaged date is checked too (around
> src/tools/R/QC.R line 7998).

I believe the text says Date is optional, but if present, the format is 
checked by CRAN.  So a missing date isn't evidence of an issue, but 
using a non-standard format would be.

I just did a check, and got this NOTE:

The Date field is not in ISO 8601 yyyy-mm-dd format.

So I think the docs are correct.

Duncan Murdoch


From ||u|@@rev|||@ @end|ng |rom gm@||@com  Sun Apr  6 18:01:13 2025
From: ||u|@@rev|||@ @end|ng |rom gm@||@com (=?UTF-8?Q?Llu=C3=ADs_Revilla?=)
Date: Sun, 6 Apr 2025 18:01:13 +0200
Subject: [Rd] WRE Date field & CRAN
In-Reply-To: <1c819ad2-13b9-4ae1-993e-aa5484eb4e7e@gmail.com>
References: <CAN+W6_v7PP5tgPUG-UmYwrxZwkAYpjxGW65YT+buQM9AUfcmVg@mail.gmail.com>
 <1c819ad2-13b9-4ae1-993e-aa5484eb4e7e@gmail.com>
Message-ID: <CAN+W6_t9oQ586Tg3GCcuOXnWa9ZQe77oGFFJSVG7JjO6OfES4A@mail.gmail.com>

Hi Duncan,

Thanks for the fast check and reply.

Indeed, the documentation is correct. I just think it can be interpreted as
saying Date is required to submit to CRAN.
Some package maintainers have been using the Date field, probably
interpreting this section this way because if you read the main text and
the footnote all together it says:

"The optional ?Date? field gives the *release date* of the current version
of the package. It is strongly recommended [and required by CRAN, so
checked by R CMD check --as-cran.] to use the ?yyyy-mm-dd? format
conforming to the ISO 8601 standard."

The footnote could be moved to the end of the sentence to clarify CRAN's
requirements are about the format not the field.
So it is read as:

"The optional ?Date? field gives the *release date* of the current version
of the package. It is strongly recommended to use the ?yyyy-mm-dd? format
conforming to the ISO 8601 standard [and required by CRAN, so checked by R
CMD check --as-cran.]."

I think the later is more clear to the package developers reading the WRE.

Llu?s


On Sun, 6 Apr 2025 at 17:40, Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On 2025-04-06 10:55 a.m., Llu?s Revilla wrote:
> > Hi,
> >
> > On Writing R Extensions there is a footnote [6] about the "Date" field on
> > the DESCRIPTION file being required by CRAN:
> >
> > "required by CRAN, so checked by R CMD check --as-cran"
> >
> > I think this is no longer up to date, as I've seen packages published on
> > CRAN without it.
> > This might be because now the Packaged date is checked too (around
> > src/tools/R/QC.R line 7998).
>
> I believe the text says Date is optional, but if present, the format is
> checked by CRAN.  So a missing date isn't evidence of an issue, but
> using a non-standard format would be.
>
> I just did a check, and got this NOTE:
>
> The Date field is not in ISO 8601 yyyy-mm-dd format.
>
> So I think the docs are correct.
>
> Duncan Murdoch
>
>

	[[alternative HTML version deleted]]


From @unwj|e @end|ng |rom gm@||@com  Mon Apr  7 15:34:04 2025
From: @unwj|e @end|ng |rom gm@||@com (Sun Wenjie)
Date: Mon, 7 Apr 2025 15:34:04 +0200
Subject: [Rd] Proposal: Integrating Rust Toolchain into Rtools for
 Rust-Based R Package Development
In-Reply-To: <24d5f3e1-5727-44d9-9800-22982183fdbb@gmail.com>
References: <E98B4E64-559D-41E1-8B65-7B6A39773129@gmail.com>
 <24d5f3e1-5727-44d9-9800-22982183fdbb@gmail.com>
Message-ID: <ECCB4930-33FF-4282-995B-EAF0C4BC843C@gmail.com>

Hi Tomas,

Thank you very much for the detailed and thoughtful reply. Your explanation really helped me better understand the architecture of Rtools.

You're absolutely right that a **ideal** integration of Rust into Rtools would ideally involve extending the MXE-based toolchain, as the same compiling environment can guarantee the ABI compatibility. 

However, that is not the only way to ensure ABI compatibility. By leveraging shared UCRT-based ABI compatibility and using Rtools' own linker during the build process, integrating the Rust compiler binaries (x86_64-pc-windows-gnu toolchain) into the Rtools environment has proven effective and stable in practice.

I documented the process, rationale, and some findings in a blog post here: https://medium.com/@sunwjie/integrating-the-rust-toolchain-into-rtools-e4c7df40cb82

What I?ve done so far is very much user-oriented. The goal isn't to replace a proper MXE-based integration, but rather to offer an usable solution for R package users with {extendr} or {savvy}, while also exploring longer-term collaboration toward better support.

I'd be very happy to contribute to or test any future concerns you had according to this integration methods, as well as explore the potential MXE-based integration in the future.

Thanks,
Wenjie

P.S. During the process, I received valuable assistance from the Extendr community, particularly from @Mossa @albersonmiranda, @josiah and @luciorq, for which I am especially grateful.

----
https://www.sun-wenjie.site

> On Apr 3, 2025, at 14:21, Tomas Kalibera <tomas.kalibera at gmail.com> wrote:
> 
> Congratulations on figuring out how to extend the build of the Rtools installer to add more programs there - it is always good to have a confirmation such things are clear enough from the available documentation and sources. You can see that e.g. QPDF is added this way, but adding a toolchain requires a different approach (more below).
> 
> What may not have been clear enough - please keep in mind that there are two distinct parts of what you get when you install Rtools from the installer: an (essentially vanilla) installation of Msys2 with the msys2 subsystem, and toolchain + libraries built via (customized) MXE. The latter does not depend on the former. The latter can be (and is) built on Linux, without any involvement of Msys2. It doesn't use the Cygwin runtime in any way. In principle, one could use the latter only without the former, provided one has an alternative set of build tools (so perhaps the original Cygwin distribution, maybe WSL2 - even though, this is not tested, some details surely would have to be figured out). The latter is what includes the toolchains (and libraries), and can be also downloaded as a tarball - this is convenient for people who have their own installation of Msys2 they use. Also it is good for github actions (with a smaller tarball for that, when it suffices).
> 
> Also please note that Rtools doesn't use any of mingw-w64 from Msys2. It only uses programs using the Cygwin runtime (as build tools). Msys2 has indeed toolchains based on mingw-w64, but Rtools doesn't use them (from version 42).
> 
> To properly integrate Rust, one would have to make it part of the toolchain+libraries, so add it to MXE. One would have to build it using the compiler suite used within MXE. The upstream version of MXE uses gcc, which doesn't yet have a stable version of Rust. Once it will have it, it would make sense to extend MXE to also build Rust compilers using the same gcc used also to build C, C++ and Fortran compilers, and indeed make sure Rust will use the toolchains and libraries from the same build of MXE. That way it will be assured that the compiler runtimes and all libraries are compatible. Without that, they cannot be.
> 
> Rtools is also available for LLVM/aarch64, only a downstream version I am maintaining. In theory, Rust could already be added there, because LLVM already supports it. In theory, we could even use LLVM on x86_64 then to get Rust. But, not in practice, because the Fortran 90 compiler (flang-new) in LLVM is not yet stable enough.
> 
> Best
> Tomas
> 
> On 4/3/25 10:36, Sun Wenjie wrote:
>> Dear R-devel community,
>> 
>> I'm exploring (experimentally) the integration of the Rust toolchain into
>> Rtools, to enable smoother development and shipping of Rust-based R packages
>> on Windows.
>> 
>> I've written a detailed blog post documenting the process, technical rationale
>> and what?s next:
>> https://medium.com/@sunwjie/integrating-the-rust-toolchain-into-rtools-e4c7df40cb82.
>> 
>> Currently, Rust is not included in Rtools, and setting it up alongside R on
>> Windows can be confusing for some users, especially those unfamiliar with
>> computers. However, both Rust (via the -gnu toolchain) and
>> Rtools share the same MinGW-based toolchain, making integration technically
>> feasible.
>> 
>> What I?ve done so far
>> - Built a custom Rtools45 installer with Rust 1.85.0 integrated alongside GCC
>>   and other tools.
>> - Successfully tested Rust-based R packages like {string2path} using the custom
>>   Rtools.
>> 
>> I'd love to contribute this work upstream and collaborate with Rtools
>> maintainers to make Rust a supported part of the official Rtools release. Are
>> there existing plans or blockers around this?
>> 
>> Thank you for your time, and I look forward to your thoughts!
>> 
>> Best regards,
>> Wenjie
>> 
>> ??
>> https://www.sun-wenjie.site
>> 
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel


From bryce@@@c@r@on @end|ng |rom gm@||@com  Tue Apr  8 23:08:19 2025
From: bryce@@@c@r@on @end|ng |rom gm@||@com (Bryce Carson)
Date: Tue, 8 Apr 2025 15:08:19 -0600
Subject: [Rd] Better support ESS by allowing choice of CRAN mirror using the
 `menu-choice` widget
Message-ID: <CADPqqnJBU+FazAhySRHW8fCmsmERrkNCF988gZN20GT6JdW+MQ@mail.gmail.com>

This would allow ESS to be used in a graphical-mode emacs without utilizing
the Tcl/Tk widget, and on non-Linux platforms would allow Emacs to provide
the choice widget rather than Tcl/Tk, Aqua, or whatever Windows does.

	[[alternative HTML version deleted]]


From bryce@@@c@r@on @end|ng |rom gm@||@com  Wed Apr  9 07:15:12 2025
From: bryce@@@c@r@on @end|ng |rom gm@||@com (Bryce Carson)
Date: Tue, 8 Apr 2025 23:15:12 -0600
Subject: [Rd] 
 Better support ESS by allowing choice of CRAN mirror using the
 `menu-choice` widget
In-Reply-To: <CADPqqnJBU+FazAhySRHW8fCmsmERrkNCF988gZN20GT6JdW+MQ@mail.gmail.com>
References: <CADPqqnJBU+FazAhySRHW8fCmsmERrkNCF988gZN20GT6JdW+MQ@mail.gmail.com>
Message-ID: <CADPqqn+FxXFecbQPHS8H+n7LusV4_mx4GsQAp8Wh1AKYvqv6pw@mail.gmail.com>

I know ESS already has a better interface for installing packages, C-c C-e
TAB, but it'd be "neat" if when I forget to do this and I call
install.packages() without first setting a mirror that either the same
interface would be presented rather than Tcl/Tk, or a widget.el-based
interface was presented.

On Tue, Apr 8, 2025 at 3:08?PM Bryce Carson <bryce.a.carson at gmail.com>
wrote:

> This would allow ESS to be used in a graphical-mode emacs without
> utilizing the Tcl/Tk widget, and on non-Linux platforms would allow Emacs
> to provide the choice widget rather than Tcl/Tk, Aqua, or whatever Windows
> does.
>

	[[alternative HTML version deleted]]


From @uh@rto_@nggono @end|ng |rom y@hoo@com  Wed Apr  9 08:26:42 2025
From: @uh@rto_@nggono @end|ng |rom y@hoo@com (Suharto Anggono Suharto Anggono)
Date: Wed, 9 Apr 2025 06:26:42 +0000 (UTC)
Subject: [Rd] table() and as.character() performance for logical values
References: <61991736.3422978.1744180002225.ref@mail.yahoo.com>
Message-ID: <61991736.3422978.1744180002225@mail.yahoo.com>

With the change to 'factor',
factor(1L, levels = TRUE)
doesn't give NA, different from
factor(1, levels = TRUE)

With the change to 'factor',
factor(TRUE, levels = 1L)
and
factor(TRUE, levels = 1)
don't give NA.

With the change to 'factor',
factor(2L, levels = sqrt(2)^2)
gives NA, different from
factor(2, levels = sqrt(2)^2)

With the change to 'factor',
factor(2L, exclude = sqrt(2)^2)
has 1 level (nothing is excluded), different from
factor(2, exclude = sqrt(2)^2)

------------
Am 21.03.25 um 15:42 schrieb Aidan Lakshman via R-devel:
>> After investigating the source of table, I ended up on the reason being ?as.character()?:
> 
> This is specifically happening within the conversion of the input to type factor, which is where the as.character conversion happens.

Yes, I also think 'factor' could do a bit better for unclassed integers 
(such as when called from 'cut') as well as for logical input (such as 
from 'summary' -> 'table').

Note that 'as.factor' already has a "fast track" for plain integers 
(originally for 'split.default' from 'tapply'), so can be used instead 
of 'factor' when there is no need for custom 'levels', 'labels', or 
'exclude'. (Thanks for already mentioning 'tabulate'.)

A 'factor' patch would apply more broadly, e.g.:

===================================================================
--- src/library/base/R/factor.R	(Revision 88042)
+++ src/library/base/R/factor.R	(Arbeitskopie)
@@ -20,14 +20,18 @@
                     exclude = NA, ordered = is.ordered(x), nmax = NA)
  {
      if(is.null(x)) x <- character()
+    directmatch <- !is.object(x) &&
+        (is.character(x) || is.integer(x) || is.logical(x))
      nx <- names(x)
      if (missing(levels)) {
  	y <- unique(x, nmax = nmax)
  	ind <- order(y)
-	levels <- unique(as.character(y)[ind])
+        if (!directmatch)
+            y <- as.character(y)
+	levels <- unique(y[ind])
      }
      force(ordered) # check if original x is an ordered factor
-    if(!is.character(x))
+    if(!directmatch)
  	x <- as.character(x)
      ## levels could be a long vector, but match will not handle that.
      levels <- levels[is.na(match(levels, exclude))]
      f <- match(x, levels)
===================================================================

This skips as.character() also for integer/logical 'x' and would indeed 
bring table() runtimes "in order":

     set.seed(1)
     C <- sample(c("no", "yes"), 10^7, replace = TRUE)
     F <- as.factor(C)
     L <- F == "yes"
     I <- as.integer(L)
     N <- as.numeric(I)

     ## Median system.time(table(.)) in ms:
     ## table(F)   256
     ## table(I)   384   # not  696
     ## table(L)   409   # not 1159
     ## table(C)   591
     ## table(N)  3324

The (seemingly) small patch passes check-all, but maybe it overlooks 
some edge cases. I'd test it on a subset of CRAN/BIOC packages.

Best,

	Sebastian Meyer

> 
>    # Timing is all on my local machine (OSX)
>    N_v <- sample(c(1,0), 10^7, replace = TRUE)
>    L_v <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
>                                           #  user  system elapsed
>    system.time(table(N_v))                # 2.155   0.039   2.192
>    system.time(table(L_v))                # 0.806   0.030   0.838
> 
>    system.time(N_fv <- as.factor(N_v))    # 2.026   0.024   2.050
>    system.time(L_fv <- as.factor(L_v))    # 0.668   0.015   0.683
> 
>    system.time(table(N_fv))               # 0.133   0.022   0.156
>    system.time(table(L_fv))               # 0.134   0.018   0.151
> 
>> The performance for Integers and specially booleans is quite surprising.
> 
> Of note is that the performance is significantly better if using `tabulate`, since this doesn't involve a conversion to factor (though input must be numeric/factor, results aren't named, and it has worse handling of NA values). If you have performance critical calls like this you could consider using `tabulate` instead.
> 
>    system.time(tabulate(N_v))             # 0.054   0.002   0.056
>    system.time(tabulate(as.integer(L_v))) # 0.052   0.002   0.055
> 
> 
> I don't know if this is a known issue or not; most of my colleagues are aware of the slow-down and use `tabulate` when performance is required. My understanding was that the slower performance is a trade-off for more consistent performance (better output, better handling of ambiguities/NA, etc.), and that speed isn't the highest priority with `table`. Maybe someone else has a better understanding of the history of the function.
> 
> As for improving the speed, it would basically come down to refactoring `table` to not use a `factor` conversion. I'd be concerned about introducing a lot of edge cases with that, but it's theoretically possible. Based on 30 seconds of thinking, it may be possible to do something like:
> 
> ## just a sketch of a barebones non-factor implementation
>    test_tab <- function(x){
>      lookup <- unique(x)
>      counts <- tabulate(match(x, lookup))
>      names(counts) <- as.character(lookup)
>      counts
>    }
> 
>    system.time(test_tab(L_v))  # 0.101   0.006   0.107
>    system.time(test_tab(N_v))  # 0.129   0.015   0.144
> 
> This is also faster in the case where there are lots of categories with few entries per category:
> 
>    N_v2 <- 1:1e7
>    system.time(test_tab(N_v2)) # 0.383   0.024   0.411
>    system.time(table(N_v2))    # 6.122   0.228   6.398
> 
> Obviously there are some big shortcomings:
> - it's missing a lot of error checking etc. that the standard `table` has
> - it only works with 1D vectors
> - NA handling isn't quite the same as `table` (though it would be easy to adapt)
> 
> Just including to potentially start discussion for optimization.
> 
> For reference, the relevant section is in src/library/base/R/table.R:L75-85
> 
> -Aidan
> 
> -----------------------
> Aidan Lakshman (he/him)
> http://www.ahl27.com/
> 
> On 21 Mar 2025, at 8:26, Karolis Koncevi?ius wrote:
> 
>> [You don't often get email from karolis.koncevicius using gmail.com. Learn why this is important at https://aka.ms/LearnAboutSenderIdentification ]
>>
>> I was calling table() on some long logical vectors and noticed that it took a long time.
>>
>> Out of curiosity I checked the performance of table() on different types, and had some unexpected results:
>>
>>      C <- sample(c("yes", "no"), 10^7, replace = TRUE)
>>      F <- factor(sample(c("yes", "no"), 10^7, replace = TRUE))
>>      N <- sample(c(1,0), 10^7, replace = TRUE)
>>      I <- sample(c(1L,0L), 10^7, replace = TRUE)
>>      L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
>>
>>                             # ordered by execution time
>>                             #   user  system elapsed
>>      system.time(table(F))  #  0.088   0.006   0.093
>>      system.time(table(C))  #  0.208   0.017   0.224
>>      system.time(table(I))  #  0.242   0.019   0.261
>>      system.time(table(L))  #  0.665   0.015   0.680
>>      system.time(table(N))  #  1.771   0.019   1.791
>>
>>
>> The performance for Integers and specially booleans is quite surprising.
>> After investigating the source of table, I ended up on the reason being ?as.character()?:
>>
>>      system.time(as.character(L))
>>       user  system elapsed
>>      0.461   0.002   0.462
>>
>> Even a manual conversion can achieve a speed-up by a factor of ~7:
>>
>>      system.time(c("FALSE", "TRUE")[L+1])
>>       user  system elapsed
>>      0.061   0.006   0.067
>>
>>
>> Tested on 4.4.3 as well as devel trunk.
>>
>> Just reporting for comments and attention.
>> Karolis K.
>> ______________________________________________
>> R-devel using r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel using r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @eb@meyer @end|ng |rom |@u@de  Wed Apr  9 23:51:42 2025
From: @eb@meyer @end|ng |rom |@u@de (Sebastian Meyer)
Date: Wed, 9 Apr 2025 23:51:42 +0200
Subject: [Rd] table() and as.character() performance for logical values
In-Reply-To: <61991736.3422978.1744180002225@mail.yahoo.com>
References: <61991736.3422978.1744180002225.ref@mail.yahoo.com>
 <61991736.3422978.1744180002225@mail.yahoo.com>
Message-ID: <c5a333c2-1418-4b69-8886-cd8f2f5615e2@fau.de>

Right, thanks! These are non-standard uses of factor(), edge cases I 
alluded to. We didn't see any problems with the patch in existing tests 
nor in CRAN/BIOC package checks. Note that 'levels' is documented as

     an optional vector of the unique values (as character
     strings) that ?x? might have taken.

E.g.: factor(1L, levels = "1") is identical to factor(1, levels = "1").
Using integers (or logicals) for *both* 'x' and 'levels' still works 
(and is used by, e.g., cut.default() internally, is more efficient now, 
and could be documented), but that 2L fails to match sqrt(2)^2 doesn't 
really come as a surprise.

I'm not sure if it is worth special-casing integer/logical 'x' with 
specified non-character 'levels' of a non-conforming type, but yes, 
*not* skipping as.character() would then give the more consistent 
undocumented behaviour from before the performance patch. Maybe 
something to consider for 4.5.1.

	Sebastian Meyer


Am 09.04.25 um 08:26 schrieb Suharto Anggono Suharto Anggono via R-devel:
> With the change to 'factor',
> factor(1L, levels = TRUE)
> doesn't give NA, different from
> factor(1, levels = TRUE)
> 
> With the change to 'factor',
> factor(TRUE, levels = 1L)
> and
> factor(TRUE, levels = 1)
> don't give NA.
> 
> With the change to 'factor',
> factor(2L, levels = sqrt(2)^2)
> gives NA, different from
> factor(2, levels = sqrt(2)^2)
> 
> With the change to 'factor',
> factor(2L, exclude = sqrt(2)^2)
> has 1 level (nothing is excluded), different from
> factor(2, exclude = sqrt(2)^2)
> 
> ------------
> Am 21.03.25 um 15:42 schrieb Aidan Lakshman via R-devel:
>>> After investigating the source of table, I ended up on the reason being ?as.character()?:
>>
>> This is specifically happening within the conversion of the input to type factor, which is where the as.character conversion happens.
> 
> Yes, I also think 'factor' could do a bit better for unclassed integers
> (such as when called from 'cut') as well as for logical input (such as
> from 'summary' -> 'table').
> 
> Note that 'as.factor' already has a "fast track" for plain integers
> (originally for 'split.default' from 'tapply'), so can be used instead
> of 'factor' when there is no need for custom 'levels', 'labels', or
> 'exclude'. (Thanks for already mentioning 'tabulate'.)
> 
> A 'factor' patch would apply more broadly, e.g.:
> 
> ===================================================================
> --- src/library/base/R/factor.R	(Revision 88042)
> +++ src/library/base/R/factor.R	(Arbeitskopie)
> @@ -20,14 +20,18 @@
>                       exclude = NA, ordered = is.ordered(x), nmax = NA)
>    {
>        if(is.null(x)) x <- character()
> +    directmatch <- !is.object(x) &&
> +        (is.character(x) || is.integer(x) || is.logical(x))
>        nx <- names(x)
>        if (missing(levels)) {
>    	y <- unique(x, nmax = nmax)
>    	ind <- order(y)
> -	levels <- unique(as.character(y)[ind])
> +        if (!directmatch)
> +            y <- as.character(y)
> +	levels <- unique(y[ind])
>        }
>        force(ordered) # check if original x is an ordered factor
> -    if(!is.character(x))
> +    if(!directmatch)
>    	x <- as.character(x)
>        ## levels could be a long vector, but match will not handle that.
>        levels <- levels[is.na(match(levels, exclude))]
>        f <- match(x, levels)
> ===================================================================
> 
> This skips as.character() also for integer/logical 'x' and would indeed
> bring table() runtimes "in order":
> 
>       set.seed(1)
>       C <- sample(c("no", "yes"), 10^7, replace = TRUE)
>       F <- as.factor(C)
>       L <- F == "yes"
>       I <- as.integer(L)
>       N <- as.numeric(I)
> 
>       ## Median system.time(table(.)) in ms:
>       ## table(F)   256
>       ## table(I)   384   # not  696
>       ## table(L)   409   # not 1159
>       ## table(C)   591
>       ## table(N)  3324
> 
> The (seemingly) small patch passes check-all, but maybe it overlooks
> some edge cases. I'd test it on a subset of CRAN/BIOC packages.
> 
> Best,
> 
> 	Sebastian Meyer
> 
>>
>>     # Timing is all on my local machine (OSX)
>>     N_v <- sample(c(1,0), 10^7, replace = TRUE)
>>     L_v <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
>>                                            #  user  system elapsed
>>     system.time(table(N_v))                # 2.155   0.039   2.192
>>     system.time(table(L_v))                # 0.806   0.030   0.838
>>
>>     system.time(N_fv <- as.factor(N_v))    # 2.026   0.024   2.050
>>     system.time(L_fv <- as.factor(L_v))    # 0.668   0.015   0.683
>>
>>     system.time(table(N_fv))               # 0.133   0.022   0.156
>>     system.time(table(L_fv))               # 0.134   0.018   0.151
>>
>>> The performance for Integers and specially booleans is quite surprising.
>>
>> Of note is that the performance is significantly better if using `tabulate`, since this doesn't involve a conversion to factor (though input must be numeric/factor, results aren't named, and it has worse handling of NA values). If you have performance critical calls like this you could consider using `tabulate` instead.
>>
>>     system.time(tabulate(N_v))             # 0.054   0.002   0.056
>>     system.time(tabulate(as.integer(L_v))) # 0.052   0.002   0.055
>>
>>
>> I don't know if this is a known issue or not; most of my colleagues are aware of the slow-down and use `tabulate` when performance is required. My understanding was that the slower performance is a trade-off for more consistent performance (better output, better handling of ambiguities/NA, etc.), and that speed isn't the highest priority with `table`. Maybe someone else has a better understanding of the history of the function.
>>
>> As for improving the speed, it would basically come down to refactoring `table` to not use a `factor` conversion. I'd be concerned about introducing a lot of edge cases with that, but it's theoretically possible. Based on 30 seconds of thinking, it may be possible to do something like:
>>
>> ## just a sketch of a barebones non-factor implementation
>>     test_tab <- function(x){
>>       lookup <- unique(x)
>>       counts <- tabulate(match(x, lookup))
>>       names(counts) <- as.character(lookup)
>>       counts
>>     }
>>
>>     system.time(test_tab(L_v))  # 0.101   0.006   0.107
>>     system.time(test_tab(N_v))  # 0.129   0.015   0.144
>>
>> This is also faster in the case where there are lots of categories with few entries per category:
>>
>>     N_v2 <- 1:1e7
>>     system.time(test_tab(N_v2)) # 0.383   0.024   0.411
>>     system.time(table(N_v2))    # 6.122   0.228   6.398
>>
>> Obviously there are some big shortcomings:
>> - it's missing a lot of error checking etc. that the standard `table` has
>> - it only works with 1D vectors
>> - NA handling isn't quite the same as `table` (though it would be easy to adapt)
>>
>> Just including to potentially start discussion for optimization.
>>
>> For reference, the relevant section is in src/library/base/R/table.R:L75-85
>>
>> -Aidan
>>
>> -----------------------
>> Aidan Lakshman (he/him)
>> http://www.ahl27.com/
>>
>> On 21 Mar 2025, at 8:26, Karolis Koncevi?ius wrote:
>>
>>> [You don't often get email from karolis.koncevicius using gmail.com. Learn why this is important at https://aka.ms/LearnAboutSenderIdentification ]
>>>
>>> I was calling table() on some long logical vectors and noticed that it took a long time.
>>>
>>> Out of curiosity I checked the performance of table() on different types, and had some unexpected results:
>>>
>>>       C <- sample(c("yes", "no"), 10^7, replace = TRUE)
>>>       F <- factor(sample(c("yes", "no"), 10^7, replace = TRUE))
>>>       N <- sample(c(1,0), 10^7, replace = TRUE)
>>>       I <- sample(c(1L,0L), 10^7, replace = TRUE)
>>>       L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
>>>
>>>                              # ordered by execution time
>>>                              #   user  system elapsed
>>>       system.time(table(F))  #  0.088   0.006   0.093
>>>       system.time(table(C))  #  0.208   0.017   0.224
>>>       system.time(table(I))  #  0.242   0.019   0.261
>>>       system.time(table(L))  #  0.665   0.015   0.680
>>>       system.time(table(N))  #  1.771   0.019   1.791
>>>
>>>
>>> The performance for Integers and specially booleans is quite surprising.
>>> After investigating the source of table, I ended up on the reason being ?as.character()?:
>>>
>>>       system.time(as.character(L))
>>>        user  system elapsed
>>>       0.461   0.002   0.462
>>>
>>> Even a manual conversion can achieve a speed-up by a factor of ~7:
>>>
>>>       system.time(c("FALSE", "TRUE")[L+1])
>>>        user  system elapsed
>>>       0.061   0.006   0.067
>>>
>>>
>>> Tested on 4.4.3 as well as devel trunk.
>>>
>>> Just reporting for comments and attention.
>>> Karolis K.
>>> ______________________________________________
>>> R-devel using r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-devel
>>
>> ______________________________________________
>> R-devel using r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From edd @end|ng |rom deb|@n@org  Thu Apr 10 03:02:28 2025
From: edd @end|ng |rom deb|@n@org (Dirk Eddelbuettel)
Date: Wed, 9 Apr 2025 20:02:28 -0500
Subject: [Rd] 
 Better support ESS by allowing choice of CRAN mirror using the
 `menu-choice` widget
In-Reply-To: <CADPqqn+FxXFecbQPHS8H+n7LusV4_mx4GsQAp8Wh1AKYvqv6pw@mail.gmail.com>
References: <CADPqqnJBU+FazAhySRHW8fCmsmERrkNCF988gZN20GT6JdW+MQ@mail.gmail.com>
 <CADPqqn+FxXFecbQPHS8H+n7LusV4_mx4GsQAp8Wh1AKYvqv6pw@mail.gmail.com>
Message-ID: <26615.6308.502125.309508@rob.eddelbuettel.com>


On 8 April 2025 at 23:15, Bryce Carson wrote:
| I know ESS already has a better interface for installing packages, C-c C-e
| TAB, but it'd be "neat" if when I forget to do this and I call
| install.packages() without first setting a mirror that either the same
| interface would be presented rather than Tcl/Tk, or a widget.el-based
| interface was presented.

You could avoid the issue by setting the CDN-served cloud.r-project.org up as
your default. The ways CDNs work, they will always automatically find you the
closest server in their network. No need to manually select.

I set the following up as the default for the Debian (and hence Ubuntu,
PopOS!, ...) package back in 2018 as part of Rprofile.site:

  ## We set the cloud mirror, which is 'network-close' to everybody, as default
  local({
      r <- getOption("repos")
      r["CRAN"] <- "https://cloud.r-project.org"
      options(repos = r)
  })

and use it personally too.

In your case ESS would dispatch to R, and R would do "The Right Thing (TM)"
as instructed.

Dirk

-- 
dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org


From bryce@@@c@r@on @end|ng |rom gm@||@com  Thu Apr 10 03:09:18 2025
From: bryce@@@c@r@on @end|ng |rom gm@||@com (Bryce Carson)
Date: Wed, 9 Apr 2025 19:09:18 -0600
Subject: [Rd] 
 Better support ESS by allowing choice of CRAN mirror using the
 `menu-choice` widget
In-Reply-To: <26615.6308.502125.309508@rob.eddelbuettel.com>
References: <CADPqqnJBU+FazAhySRHW8fCmsmERrkNCF988gZN20GT6JdW+MQ@mail.gmail.com>
 <CADPqqn+FxXFecbQPHS8H+n7LusV4_mx4GsQAp8Wh1AKYvqv6pw@mail.gmail.com>
 <26615.6308.502125.309508@rob.eddelbuettel.com>
Message-ID: <CADPqqn+GGoVF245Pi=T8rq400mBstvNJFSxZBT+piBm44=8QzQ@mail.gmail.com>

I see, a profile option is a good idea.

I think I will tinker with the ESS package a bit regardless and see what
interesting things can be done.

On Wed., Apr. 9, 2025, 7:02 p.m. Dirk Eddelbuettel, <edd at debian.org> wrote:

>
> On 8 April 2025 at 23:15, Bryce Carson wrote:
> | I know ESS already has a better interface for installing packages, C-c
> C-e
> | TAB, but it'd be "neat" if when I forget to do this and I call
> | install.packages() without first setting a mirror that either the same
> | interface would be presented rather than Tcl/Tk, or a widget.el-based
> | interface was presented.
>
> You could avoid the issue by setting the CDN-served cloud.r-project.org
> up as
> your default. The ways CDNs work, they will always automatically find you
> the
> closest server in their network. No need to manually select.
>
> I set the following up as the default for the Debian (and hence Ubuntu,
> PopOS!, ...) package back in 2018 as part of Rprofile.site:
>
>   ## We set the cloud mirror, which is 'network-close' to everybody, as
> default
>   local({
>       r <- getOption("repos")
>       r["CRAN"] <- "https://cloud.r-project.org"
>       options(repos = r)
>   })
>
> and use it personally too.
>
> In your case ESS would dispatch to R, and R would do "The Right Thing (TM)"
> as instructed.
>
> Dirk
>
> --
> dirk.eddelbuettel.com | @eddelbuettel | edd at debian.org
>

	[[alternative HTML version deleted]]


From @uh@rto_@nggono @end|ng |rom y@hoo@com  Thu Apr 10 09:53:04 2025
From: @uh@rto_@nggono @end|ng |rom y@hoo@com (Suharto Anggono Suharto Anggono)
Date: Thu, 10 Apr 2025 07:53:04 +0000 (UTC)
Subject: [Rd] table() and as.character() performance for logical values
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
Message-ID: <2092175466.123741.1744271584635@mail.yahoo.com>

Chain?of?calls?of?C?functions?in?coerce.c?for?as.character(<logical>)?in?R:
do_asatomic
ascommon
coerceVector
coerceToString
StringFromLogical?(for?each?element)

The?definition?of?'StringFromLogical'?in?coerce.c?:

attribute_hidden?SEXP?StringFromLogical(int?x,?int?*warn)
{
????int?w;
????formatLogical(&x,?1,?&w);
????if?(x?==?NA_LOGICAL)?return?NA_STRING;
????else?return?mkChar(EncodeLogical(x,?w));
}

The?definition?of?'EncodeLogical'?in?printutils.c?:

const?char?*EncodeLogical(int?x,?int?w)
{
????static?char?buff[NB];
????if(x?==?NA_LOGICAL)?snprintf(buff,?NB,?"%*s",?min(w,?(NB-1)),?CHAR(R_print.na_string));
????else?if(x)?snprintf(buff,?NB,?"%*s",?min(w,?(NB-1)),?"TRUE");
????else?snprintf(buff,?NB,?"%*s",?min(w,?(NB-1)),?"FALSE");
????buff[NB-1]?=?'\0';
????return?buff;
}

>?L?<-?sample(c(TRUE,?FALSE),?10^7,?replace?=?TRUE)
>?system.time(as.character(L))
???user??system?elapsed
???2.69????0.02????2.73
>?system.time(c("FALSE",?"TRUE")[L+1])
???user??system?elapsed
???0.15????0.04????0.20
>?system.time(c("FALSE",?"TRUE")[L+1L])
???user??system?elapsed
???0.08????0.05????0.13
>?L?<-?rep(NA,?10^7)
>?system.time(as.character(L))
???user??system?elapsed
???0.11????0.00????0.11
>?system.time(c("FALSE",?"TRUE")[L+1])
???user??system?elapsed
???0.16????0.06????0.22
>?system.time(c("FALSE",?"TRUE")[L+1L])
???user??system?elapsed
???0.09????0.03????0.12

`as.character`?of?a?logical?vector?that?is?all?NA?is?fast?enough.?It?appears?that?the?call?to?'formatLogical'?inside?the?C?function?'StringFromLogical'?does?not?introduce?much?slowdown.

I?found?that?using?string?literal?inside?the?C?function?'StringFromLogical',?by?replacing
EncodeLogical(x,?w)
with
x???"TRUE"?:?"FALSE"
(and?the?call?to?'formatLogical'?is?not?needed?anymore),?make?it?faster.

Alternatively,?"fast?path"?could?be?introduced?in?'EncodeLogical', potentially also benefits format() in R.?For?example,?without?replacing?existing?code,?the?following?fragment?could?be?inserted.

????if(x?==?NA_LOGICAL)?{if(w?==?R_print.na_width)?return?CHAR(R_print.na_string);}
????else?if(x)?{if(w?==?4)?return?"TRUE";}
????else?{if(w?==?5)?return?"FALSE";}

However,?with?either?of?them,?c("FALSE",?"TRUE")[L+1L]?is?still?faster?than?as.character(L)?.

Precomputing?or?caching?possible?results?of?the?C?function?'StringFromLogical'?allows?as.character(L)?to?be?as?fast?as?c("FALSE",?"TRUE")[L+1L]?in?R. For example, 'StringFromLogical' could be changed to

attribute_hidden?SEXP?StringFromLogical(int?x,?int?*warn)
{
    static SEXP TrueCh, FalseCh;
????if?(x?==?NA_LOGICAL)?return?NA_STRING;
????else?if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
    else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));
}

----------------
On?21?Mar?2025,?at?8:26,?Karolis?Koncevi?ius?wrote:

>?[You?don't?often?get?email?from?karolis.koncevicius?using?gmail.com.?Learn?why?this?is?important?at?https://aka.ms/LearnAboutSenderIdentification?]
>
>?I?was?calling?table()?on?some?long?logical?vectors?and?noticed?that?it?took?a?long?time.
>
>?Out?of?curiosity?I?checked?the?performance?of?table()?on?different?types,?and?had?some?unexpected?results:
>
>????C?<-?sample(c("yes",?"no"),?10^7,?replace?=?TRUE)
>????F?<-?factor(sample(c("yes",?"no"),?10^7,?replace?=?TRUE))
>????N?<-?sample(c(1,0),?10^7,?replace?=?TRUE)
>????I?<-?sample(c(1L,0L),?10^7,?replace?=?TRUE)
>????L?<-?sample(c(TRUE,?FALSE),?10^7,?replace?=?TRUE)
>
>????????????????????????????#?ordered?by?execution?time
>????????????????????????????#??user??system?elapsed
>????system.time(table(F))??#??0.088??0.006??0.093
>????system.time(table(C))??#??0.208??0.017??0.224
>????system.time(table(I))??#??0.242??0.019??0.261
>????system.time(table(L))??#??0.665??0.015??0.680
>????system.time(table(N))??#??1.771??0.019??1.791
>
>
>?The?performance?for?Integers?and?specially?booleans?is?quite?surprising.
>?After?investigating?the?source?of?table,?I?ended?up?on?the?reason?being??as.character()?:
>
>????system.time(as.character(L))
>??????user??system?elapsed
>????0.461??0.002??0.462
>
>?Even?a?manual?conversion?can?achieve?a?speed-up?by?a?factor?of?~7:
>
>????system.time(c("FALSE",?"TRUE")[L+1])
>??????user??system?elapsed
>????0.061??0.006??0.067
>
>
>?Tested?on?4.4.3?as?well?as?devel?trunk.
>
>?Just?reporting?for?comments?and?attention.
>?Karolis?K.
>?______________________________________________
>?R-devel?using?r-project.org?mailing?list
>?https://stat.ethz.ch/mailman/listinfo/r-devel


From m@ech|er @end|ng |rom @t@t@m@th@ethz@ch  Thu Apr 10 17:53:58 2025
From: m@ech|er @end|ng |rom @t@t@m@th@ethz@ch (Martin Maechler)
Date: Thu, 10 Apr 2025 17:53:58 +0200
Subject: [Rd] table() and as.character() performance for logical values
In-Reply-To: <2092175466.123741.1744271584635@mail.yahoo.com>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
Message-ID: <26615.59798.376511.472793@stat.math.ethz.ch>

>>>>> Suharto Anggono Suharto Anggono via R-devel 
>>>>>     on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:

    > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:

    > do_asatomic
    > ascommon
    > coerceVector
    > coerceToString
    > StringFromLogical (for each element)

    > The definition of 'StringFromLogical' in coerce.c :

    > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
    > 
    > do_asatomic
    > ascommon
    > coerceVector
    > coerceToString
    > StringFromLogical (for each element)
    > 
    > The definition of 'StringFromLogical' in coerce.c :
    > 
    > attribute_hidden SEXP StringFromLogical(int x, int *warn)
    > {
    >     int w;
    >     formatLogical(&x, 1, &w);
    >     if (x == NA_LOGICAL) return NA_STRING;
    >     else return mkChar(EncodeLogical(x, w));
    > }
    > 
    > The definition of 'EncodeLogical' in printutils.c :
    > 
    > const char *EncodeLogical(int x, int w)
    > {
    >     static char buff[NB];
    >     if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, (NB-1)), CHAR(R_print.na_string));
    >     else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
    >     else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
    >     buff[NB-1] = '\0';
    >     return buff;
    > }
    > 
    > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
    > > system.time(as.character(L))
    >    user  system elapsed
    >    2.69    0.02    2.73
    > > system.time(c("FALSE", "TRUE")[L+1])
    >    user  system elapsed
    >    0.15    0.04    0.20
    > > system.time(c("FALSE", "TRUE")[L+1L])
    >    user  system elapsed
    >    0.08    0.05    0.13
    > > L <- rep(NA, 10^7)
    > > system.time(as.character(L))
    >    user  system elapsed
    >    0.11    0.00    0.11
    > > system.time(c("FALSE", "TRUE")[L+1])
    >    user  system elapsed
    >    0.16    0.06    0.22
    > > system.time(c("FALSE", "TRUE")[L+1L])
    >    user  system elapsed
    >    0.09    0.03    0.12
    > 
    > `as.character` of a logical vector that is all NA is fast enough. 
    > It appears that the call to 'formatLogical' inside > the C function
    > 'StringFromLogical' does not introduce much     > slowdown. 


    > I found that using string literal inside the C function 'StringFromLogical', by replacing
    > EncodeLogical(x, w)
    > with
    > x ? "TRUE" : "FALSE"
    > (and the call to 'formatLogical' is not needed anymore), make it faster.

indeed! ... and we also notice that the 'w' argument is neither
needed anymore, and that makes sense: At this point when you
know you have a an R logical value there are only three
possibilities and no reason ever to warn about the conversion.

    > Alternatively, 
or in addition !

    > "fast path" could be introduced in 'EncodeLogical', potentially also benefits format() in R. 
    > For example, without replacing existing code, the following fragment could be inserted.
    > 
    >     if(x == NA_LOGICAL) {if(w == R_print.na_width) return CHAR(R_print.na_string);}
    >     else if(x) {if(w == 4) return "TRUE";}
    >     else {if(w == 5) return "FALSE";}
    > 
    > However, with either of them, c("FALSE", "TRUE")[L+1L] is still faster than as.character(L) .
    > 
    > Precomputing or caching possible results of the C function 'StringFromLogical' allows as.character(L) to be as fast as c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical' could be changed to
    > 
    > attribute_hidden SEXP StringFromLogical(int x, int *warn)
    > {
    >     static SEXP TrueCh, FalseCh;
    >     if (x == NA_LOGICAL) return NA_STRING;
    >     else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
    >     else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));
    > }

Indeed, and something along this line (storing the other two constant strings) was also 
my thought when seeing the
   mkChar(x ? "TRUE" : "FALSE)
you implicitly proposed above.

I'm looking into applying both speedups;
thank you very much, Suharto!

Martin


--
Martin Maechler
ETH Zurich  and  R Core team


From pd@|gd @end|ng |rom gm@||@com  Fri Apr 11 11:36:22 2025
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Fri, 11 Apr 2025 11:36:22 +0200
Subject: [Rd] R 4.5.0 is released
Message-ID: <9C2862CE-A27F-48F6-99E1-3A226DCF9AA2@gmail.com>

The build system rolled up R-4.5.0.tar.gz and .xz (codename "How About a Twenty-Six") this morning.

This is a major release with a number of new features, API changes, and bug fixes.

The list below details the changes in this release. 

You can get the source code from

https://cran.r-project.org/src/base/R-4/R-4.5.0.tar.gz
https://cran.r-project.org/src/base/R-4/R-4.5.0.tar.xz

or wait for it to be mirrored at a CRAN site nearer to you.

Binaries for various platforms will appear in due course. 


For the R Core Team,

Peter Dalgaard


These are the checksums (md5 and SHA-256) for the freshly created files, in case you wish
to check that they are uncorrupted:

MD5 (AUTHORS) = 0ba932825aefae5566dc44822916b266
MD5 (build-dist.log) = 31a495e5d716faf011803973f977adbd
MD5 (COPYING) = eb723b61539feef013de476e68b5c50a
MD5 (COPYING.LIB) = a6f89e2100d9b6cdffcea4f398e37343
MD5 (FAQ) = cf1644761934816fb349f15d7956732e
MD5 (INSTALL) = 7893f754308ca31f1ccf62055090ad7b
MD5 (NEWS) = fda3e3633537ffb9c02f1278a7288db9
MD5 (NEWS.0) = bfcd7c147251b5474d96848c6f57e5a8
MD5 (NEWS.1) = f8466e418dec6b958b4ce484a13f9a9d
MD5 (NEWS.2) = 05e4a57b645e651ba13019c3cf5c495f
MD5 (NEWS.3) = 082abfc2fdc36912075e78b92fb2941e
MD5 (R-latest.tar.gz) = 2342b31a604631f8b130033d8582d547
MD5 (R-latest.tar.xz) = d379331fbe3f9bf19d3e53f547317114
MD5 (README) = e8e5ee38544d34409177cd479025fe66
MD5 (RESOURCES) = 5949c86e75c813f8f6ebc420aae46881
MD5 (THANKS) = 61d146aa6a2cf5999295b2fb340991c1
MD5 (VERSION-INFO.dcf) = 5ca3dfa954644258bfd0f83319c0377c
MD5 (R-4/R-4.5.0.tar.gz) = 2342b31a604631f8b130033d8582d547
MD5 (R-4/R-4.5.0.tar.xz) = d379331fbe3f9bf19d3e53f547317114

4cc9dcdfa46a2e2cff45c27df8f3a9f851ec97b44b8647ab8a9fbf844f37937f  AUTHORS
8f85b62440f992f6dd8e05e5bda84995b1a8d42c7d4d2a05927c6ae6e2fbad59  build-dist.log
e6d6a009505e345fe949e1310334fcb0747f28dae2856759de102ab66b722cb4  COPYING
6095e9ffa777dd22839f7801aa845b31c9ed07f3d6bf8a26dc5d2dec8ccc0ef3  COPYING.LIB
ec1eb421f6810ffb53162b9dfb371190de30ab490855ddfa49fc0bf39c7f11cf  FAQ
f87461be6cbaecc4dce44ac58e5bd52364b0491ccdadaf846cb9b452e9550f31  INSTALL
d03a80d9ab25ce50e0ec7923385729d9dfb7d4fab1f33041e62c143cbff5a4f9  NEWS
4e21b62f515b749f80997063fceab626d7258c7d650e81a662ba8e0640f12f62  NEWS.0
602f3a40ef759c7b2a6c485a33dc674af34249644ac5fb53b21283d4e12e808d  NEWS.1
7babb6d82a4479b2c3803f7dbfaab63125b0f0d1b6bb40b1389d3af65eaf83aa  NEWS.2
eb473efd365822e7ae64eb0f86028ea019815fdd273fe7daa9c6fe5e28fd2737  NEWS.3
3b33ea113e0d1ddc9793874d5949cec2c7386f66e4abfb1cef9aec22846c3ce1  R-latest.tar.gz
101766c3aefffcbacde39c8a0b9c3accf50a563955f66ff2f7b321d6bf07da8d  R-latest.tar.xz
f5aa875c23185cbfc3a50739d7295b0caba2cf0e38ba082850be338cc9541154  README
5e7ddf7349ada12c8142c42bac955835efd1768978cb476b61a3b53255442b24  RESOURCES
1d5064c86b6813865a033763f43212064c0a67ef05f5af13b13c4feb08264a33  THANKS
d3ced974014dc3da6ef3cf126d67e427172e9f3f77f801483f91acc881e2de38  VERSION-INFO.dcf
3b33ea113e0d1ddc9793874d5949cec2c7386f66e4abfb1cef9aec22846c3ce1  R-4/R-4.5.0.tar.gz
101766c3aefffcbacde39c8a0b9c3accf50a563955f66ff2f7b321d6bf07da8d  R-4/R-4.5.0.tar.xz

This is the relevant part of the NEWS file

CHANGES IN R 4.5.0:

  NEW FEATURES:

    ? as.integer(rl) and hence as.raw(rl) now work for a list of raw(1)
      elements, as proposed by Michael Chirico's PR#18696.

    ? graphics' grid() gains optional argument nintLog.

    ? New functions check_package_urls() and check_package_dois() in
      package tools for checking URLs and DOIs in package sources.

    ? New head() and tail() methods for class "ts" time series,
      proposed by Spencer Graves on R-devel.

    ? New qr.influence() function, a ?bare bones? interface to the
      lm.influence() leave-one-out diagnostics computations; wished for
      in PR#18739.

    ? Package citation() results auto-generated from the package
      metadata now also provide package DOIs for CRAN and Bioconductor
      packages.

    ? New function grepv() identical to grep() except for the default
      value = TRUE.

    ? methods(<pkg>:::<genfun>) now does report methods when neither
      the generic nor the methods have been exported.

    ? pdf() gains an author argument to set the corresponding metadata
      field, and logical arguments timestamp and producer to optionally
      omit the respective metadata.  (Thanks to Edzer Pebesma.)

    ? grDevices::glyphInfo() gains a rot argument to allow per-glyph
      rotation.  (Thanks to Daniel Sabanes Bove.)

    ? Package tools now exports functions CRAN_current_db(),
      CRAN_aliases_db(), CRAN_rdxrefs_db(), CRAN_archive_db(), and
      CRAN_authors_db().

    ? Package tools now exports functions R() and
      parse_URI_reference().

    ? Package tools now exports functions base_aliases_db() and
      base_rdxrefs_db().

    ? It is now possible to set the background color for row and column
      names in the data editor on Windows (Rgui).

    ? Rterm on Windows now accepts input lines of unlimited length.

    ? file.info() on Windows now provides file owner name and domain.

    ? Sys.info() on Windows now provides current user domain.

    ? findInterval() gets new arguments checkSorted and checkNA which
      allow skipping relatively costly checks; related to PR#16567.

    ? pnorm(x) underflows more gracefully.

    ? get(nam, env) now signals a _classed_ error, "getMissingError",
      as ?subclass? of "missingArgError" where the latter is used also
      in similar situations, e.g., f <- function(x) exp(x); try(f()) .

    ? The set operations now avoid the as.vector() transformation for
      same-kind apparently vector-like operands.

    ? md5sum() can be used to compute an MD5 hash of a raw vector of
      bytes by using the bytes= argument instead of files=. The two
      arguments are mutually exclusive.

    ? Added function sha256sum() in package tools analogous to md5sum()
      implementing the SHA-256 hashing algorithm.

    ? The xtfrm() method for class "AsIs" is now considerably faster
      thanks to a patch provided by Ivan Krylov.

    ? The merge() method for data frames will no longer convert row
      names used for indexing using I(), which will lead to faster
      execution in cases where sort = TRUE and all.x and/or all.y are
      set to TRUE.

    ? The methods package internal function .requirePackage() now calls
      requireNamespace(p) instead of require(p), hence no longer adding
      packages to the search() path in cases methods or class
      definitions are needed.  Consequently, previous workflows relying
      on the old behaviour will have to be amended by adding
      corresponding library(p) calls.

    ? More R-level messages use a common format containing "character
      string" for more consistency and less translation work.

    ? available.packages() and install.packages() get an optional
      switch cache_user_dir, somewhat experimentally.

    ? The sunspot.month data have been updated to Oct 2024; because of
      recalibration also historical numbers are changed, and we keep
      the previous data as sunspot.m2014 for reproducibility.

    ? The quartz() device now supports alpha masks.  Thanks to George
      Stagg, Gwynn Gebeyhu, Heather Turner, and Tomek Gieorgijewski.

    ? The print() method for date-time objects (POSIX.t) gets an
      optional digits argument for _fractional_ seconds, passed to
      improved format.POSIXlt(); consequently, print(<date.time>,
      digits = n) allows to print fractions of seconds.

    ? install.packages() and download.packages() download packages
      simultaneously using libcurl, significantly reducing download
      times when installing or downloading multiple packages.

    ? Status reporting in download.file() has been extended to report
      the outcome for individual files in simultaneous downloads.

    ? The Rd \link macro now allows markup in the link text when the
      topic is given by the optional argument, e.g.,
      \link[=gamma]{\eqn{\Gamma(x)}}.

    ? If La_library() is empty, sessionInfo() still reports
      La_version() when available.

    ? seq.int(from, to, by, ....) when |by| = 1 now behaves as if by
      was omitted, and hence returns from:to, possibly integer.

    ? seq.Date(from, to, by, ....) and seq.POSIXt(..)  now also work
      when from is missing and sufficient further arguments are
      provided, thanks to Michael Chirico's report, patch proposal in
      PR#17672 and ?R Dev Day? contributions.

      The Date method also works for seq(from, to), when by is missing
      and now defaults to "1 days".

      It is now documented (and tested) that the by string may be
      _abbreviated_ in both seq methods.

      Both methods return or keep internal type "integer" more
      consistently now.  Also, as.POSIXct({}) is internally integer.

    ? duplicated(), unique(), and anyDuplicated() now also work for
      class expression vectors.

    ? New function use() to use packages in R scripts with full control
      over what gets added to the search path.  (Actually already
      available since R 4.4.0.)

    ? There is some support for zstd compression of tarballs in tar()
      and untar().  (This depends on OS support of libzstd or by tar.)

    ? print(summary(<numbers>)) gets new optional argument zdigits to
      allow more flexible and consistent (double) rounding.  The
      current default zdigits = 4L is somewhat experimental.
      Specifying both digits = *, zdigits = * allows behaviour
      independent of the global digits option.

    ? The format() method for "difftime" objects gets a new back
      compatible option with.units.

    ? A summary() method for "difftime" objects which prints nicely,
      similar to those for "Date" and "POSIXct".

    ? unique()'s default method now also deals with "difftime" objects.

    ? optimize(f, *) when f(x) is not finite says more about the value
      in its warning message.  It no longer replaces -Inf by the
      largest _positive_ finite number.

    ? The documentation of gamma() and is.numeric() is more specific,
      thanks to the contributors of PR#18677.

    ? New dataset gait thanks to Heather Turner and Ella Kaye, used in
      examples.

    ? New datasets penguins and penguins_raw thanks to Ella Kaye,
      Heather Turner, and Kristen Gorman.

    ? isSymmetric(<matrix>) gains a new option trans = "C"; when set to
      non-default, it tests for ?simple? symmetry of complex matrices.

    ? model.frame() produces more informative error messages in some
      cases when variables in the formula are not found, thanks to Ben
      Bolker's PR#18860.

    ? selectMethod(f, ..) now keeps the function name if the function
      belongs to a group generic and the method is for the generic.

  BLAS and LAPACK:

    ? The bundled BLAS and LAPACK sources have been updated to those
      shipped as part of January 2025's LAPACK 3.12.1.

    ? It is intended that this will be the last update to BLAS and
      LAPACK in the R sources.  Those building R from source are
      encouraged to use external BLAS and LAPACK and this will be
      required in future.

    ? This update was mainly bug fixes but contained a barely
      documented major change.  The set of BLAS routines had been
      unchanged since 1988, so throughout R's history.  This update
      introduced new BLAS routines dgemmtr and zgemmtr which are now
      used by LAPACK routines.  This means that BLAS implementations
      are no longer interchangeable.

    ? To work around this, R can be configured with option
      --with-2025blas which arranges for the 2025 BLAS additions to be
      compiled into libRlapack (the internal LAPACK, not built if an
      external LAPACK is used).

      This option allows the continuation of the practice of swapping
      the BLAS in use by symlinking lib/libRblas.*.  It has the
      disadvantage of using the reference BLAS version of the 2025
      routines whereas an enhanced BLAS might have an optimized version
      (OpenBLAS does as from version 0.3.29).

    ? Windows builds currently use the internal LAPACK and by default
      the internal BLAS: notes on how to swap the latter _via_
      Rblas.dll are in file src/extra/blas/Makefile.win.

  INSTALLATION on a UNIX-ALIKE:

    ? A C23 compiler (if available) is now selected by default for
      compilation of R and packages.  R builds can opt out _via_ the
      configure flag --without-C23, unless the specified or default
      (usually gcc) compiler defaults to C23: gcc 15 will.

      A C23 compiler is known to be selected with gcc 13-15, LLVM clang
      18-20 (and 15 should), Apple clang 15-17 and Intel 2024.2-2025.0
      (and 2022.2 should).

      Current binary distributions on macOS use Apple clang 14 and so
      do not use C23.

    ? The minimum autoconf requirement for a maintainer build has been
      increased to autoconf 2.72.

    ? Building the HTML and Info versions of the R manuals now requires
      texi2any from Texinfo 6.1 or later.

    ? Failures in building the manuals under doc now abort the
      installation, removing any file which caused the failure.

    ? Control of symbol visibility is now supported on macOS (the
      previous check only worked on ELF platforms).

    ? There is now support for installing the debug symbols for
      recommended packages on macOS: see REC_INSTALL_OPT in file
      config.site.

    ? configure is now able to find an external libintl on macOS (the
      code from an older GNU gettext distribution failed to try linking
      with the macOS Core Foundation framework).

  INSTALLATION on WINDOWS:

    ? Both building R and installing packages use the C compiler in C23
      mode.

    ? R on Windows by default uses pkg-config for linking against
      external libraries.  This makes it easier to test R and packages
      with alternative toolchains (such as from Msys2, e.g., testing
      with LLVM and possibly with sanitizers). It also allows more
      significant Rtools updates within a single R minor release.

    ? The installer scripts for Windows have been tailored to Rtools45,
      an update of the Rtools44 toolchain.  It is based on GCC 14.  The
      experimental support for 64-bit ARM (aarch64) CPUs is based on
      LLVM 19.  R-devel and R 4.5.x are no longer maintained to be
      buildable using Rtools44 and it is advised to switch to Rtools45.

  DEPRECATED AND DEFUNCT:

    ? is.R() is defunct.  Environment variable _R_DEPRECATED_IS_R_ no
      longer has any effect.

    ? Deprecated (for more than 9 years!) functions linearizeMlist,
      listFromMlist, and showMlist and the "MethodsList" class for S4
      method handling were removed from package methods.  Deprecated
      functions balanceMethodsList, emptyMethodsList,
      inheritedSubMethodLists, insertMethod, insertMethodInEmptyList,
      makeMethodsList, mergeMethods, MethodsList, MethodsListSelect,
      and SignatureMethod were made defunct, as were the "MethodsList"
      branches of functions assignMethodsMetaData, finalDefaultMethod,
      and MethodAddCoerce.

    ? getMethods(*, table = TRUE) is deprecated.

    ? Building with the bundled (and old) version of libintl is
      deprecated and now gives a configure warning.  This should be
      selected only if neither the OS's libc (as on GNU Linux) nor an
      external libintl library provide suitable functions.

      Instead install libintl from a recent version of GNU gettext
      (available for macOS) or use configure option --disable-nls.

      The ability to use the bundled version may be removed as soon as
      R 4.5.1.

    ? The deprecated xfig() graphics device has been removed.

  PACKAGE INSTALLATION:

    ? Packages are now installed using C23 where supported by the OS
      and R build.

      Packages using R's compiler settings can ask *not* to use C23
      _via_ including USE_C17 in SystemRequirements or can be installed
      by R CMD INSTALL --use-C17.  (Some packages ignore these settings
      in their configure script or when compiling in sub-directories of
      src, as will those using a src/Makefile.)

    ? Source installs now report the package version in the log.

    ? There is preliminary support for C++26 with GCC >= 14, Apple
      clang++ >= 16 and LLVM clang++ >= 17.

  C-LEVEL FACILITIES:

    ? The non-API and hidden entry points Rf_setIVector, Rf_setRVector
      and Rf_setSVector have been removed.

    ? The internal code for changing the parent of an environment now
      signals an error if the new parent is not an environment or if
      the change would create a cycle in the parent chain.

    ? SET_TYPEOF now signals an error unless the old and new types have
      compatible memory structure and content. Use of SET_TYPE in
      package C code should be avoided and may be deprecated in the
      near future. It is better to allocate an object of the desired
      type in the first place.

    ? The set of LAPACK (double and complex) routines declared in the
      headers R_ext/Lapack.h and R_ext/Applic.h has been extended,
      mostly to routines actually in use by packages.

    ? Memory allocation messages now use the (non-SI notation) "Mb",
      "Gb" , ..., and "Mbytes" strings as _arguments_ instead of as
      part of the (translatable format) string.  This is one step for
      PR#18297; from Henrik Bengtsson.

    ? Header R_ext/Constants.h (included by R.h) now always includes
      header float.h or cfloat for constants such as DBL_MAX.

    ? Strict R headers are now the default.  This removes the legacy
      definitions of PI, Calloc, Realloc and Free: use M_PI, R_Calloc,
      R_Realloc or R_Free instead.

    ? The deprecated and seemingly never-used S-compatibility macros
      F77_COM and F77_COMDECL have been removed from header R_ext/RS.h.

    ? The enum Rboolean defined in header R_ext/Boolean.h now has a
      fixed underlying type of int on platforms whose C compiler
      supports this.

      This is a C23 feature (taken from C++11) and also supported in
      all C standards by some versions of clang (from LLVM and Apple)
      and (with a warning when using -pedantic) by GCC when in C17
      mode.

      A fair amount of code has assumed this: it may be changed to a
      smaller type in future.  In particular, as standard compilers do
      not check the validity of assignment to an enum, it has been
      possible to assign NA_INTEGER to an Rboolean variable, coerce it
      to int and recover the value.

      If there were a platform which used an underlying type of a
      different size this would be an ABI-breaking change (but we are
      unaware of any such platform).

    ? Header R_ext/Boolean.h now ensures that a bool type is available
      either as a keyword (C23 and C++) or by including the C99 header
      stdbool.h.  This is being used internally in R to replace
      Rboolean by bool.

    ? There are new functions asRboolean and asBool, variants of
      asLogical more suited to converting logical arguments to Rboolean
      or to bool. They require a length-one input and throw an error if
      that evaluates to NA.

    ? Header R_exts/Error.h now ensures that Rf_error and similar are
      given a noreturn attribute when used from C++ under all
      compilers.

    ? Header R_exts/Utils.h no longer contains a declaration for
      F77_SUB(interv).  This is intended to be called from Fortran and
      was wrongly declared: LOGICAL in Fortran corresponds to int * not
      Rboolean *.

    ? Defining R_INCLUDE_BOOLEAN_H to 0 before including headers R.h or
      Rinternals.h (or any other header which includes R_ext/Boolean.h)
      stops the inclusion of header R_ext/Boolean.h which `defines'
      constants TRUE, FALSE, true, false and the type bool which some
      package maintainers wish to avoid.

      Note that the last three are keywords in C23 and C++11 so cannot
      be avoided entirely.  However, with commonly-used compilers they
      can be masked by a macro of the same name, often with a warning.

  C-LEVEL API:

    ? The ?Writing R Extensions? Texinfo source now contains very
      experimental annotations for more clearly identifying the API
      status of C entry points. These annotations are used to produce
      indices for API, experimental API, and embedded API entry points
      in the rendered versions.  This is very preliminary and may be
      dropped if a better approach emerges.

      Also for Fortran-callable entry points which are part of the API.

    ? ?Writing R Extensions? has a new section ?Moving into C API
      compliance? to help package authors move away from using non-API
      endpoints. This section will continue to be updated as work on
      clarifying and tightening the C API continues.

    ? New API function R_mkClosure. This checks that its arguments are
      valid and should be used instead of allocSExp(CLOSXP followed by
      SET_FORMALS, SET_BODY, and SET_CLOENV.

    ? New API functions R_ClosureFormals, R_ClosureBody, and
      R_ClosureEnv for extracting closure components.  The existing
      functions R_ClosureExpr and R_BytecodeExpr have also been added
      to the API.

    ? New API function R_ParentEnv corresponding to R's parent.env().

    ? Further non-API entry points have been added to those reported by
      R CMD check: COMPLEX0, ddfind, DDVAL, ENSURE_NAMEDMAX, ENVFLAGS,
      FRAME, HASHTAB, INTERNAL, IS_ASCII, IS_UTF8, LEVELS, NAMED,
      PRSEEN, RDEBUG, REAL0, Rf_findVarInFrame3, SET_BODY, SET_CLOENV,
      SET_FORMALS, SET_PRSEEN, SET_RDEBUG, STRING_PTR, SYMVALUE, and
      VECTOR_PTR. Any declarations for these in public header files
      will be removed in the near future, and they will be hidden where
      possible.

    ? Some R CMD check NOTEs on the use of non-API entry points have
      been upgraded to WARNINGs in preparation for removing
      declarations and, where possible, hiding these entry points.

    ? Additional non-API entry points have been added to those reported
      by R CMD check: IS_LONG_VEC, PRCODE, PRENV, PRVALUE, R_nchar,
      Rf_NonNullStringMatch, R_shallow_duplicate_attr, Rf_StringBlank,
      SET_TYPEOF, TRUELENGTH, XLENGTH_EX, and XTRUELENGTH.

    ? Enable defining R_NO_REMAP_RMATH and calling Rf_*() as has been
      documented in ?Writing R Extensions? for a while, fixing PR#18800
      thanks to Mikael Jagan and Suharto Anggono.

    ? R_GetCurrentSrcref(skip) now skips calls rather than srcrefs,
      consistent with counting items in the traceback() display.  If
      skip == NA_INTEGER, it searches for the first srcref, starting at
      the current evaluation state and proceeding through the call
      stack; otherwise, it returns the srcref of the requested entry
      from the call stack.

  UTILITIES:

    ? R CMD INSTALL (and hence check) now compile C++ code with
      -DR_NO_REMAP.

      ?Writing R Extensions? has been revised to describe the remapped
      entry points, for with the Rf_ prefix remains optional when used
      from C code (but is recommended for new C code).

    ? R CMD check --as-cran notes bad parts in the DESCRIPTION file's
      URL fields.

    ? R CMD check now reports more warnings on long-deprecated/obsolete
      Fortran features reported by gfortran -Wall.  For hints on how to
      modernize these, see
      <https://fortranwiki.org/fortran/show/Modernizing+Old+Fortran>.

    ? Since almost all supported R versions now use UTF-8, R CMD check
      no longer by default reports on marked UTF-8 or Latin-1 strings
      in character data.  Set environment variable
      _R_CHECK_PACKAGE_DATASETS_SUPPRESS_NOTES_ to a false value for
      the previous behaviour.

    ? tools::checkDocFiles() notes more cases of usage documentation
      without corresponding \alias.

    ? R CMD check with a true value for environment variable
      _R_CHECK_BASHISMS_ checks more thoroughly, including for bash
      scripts and bashisms in components of autoconf-generated
      configure scripts.

    ? R CMD check gains option --run-demo to check demo scripts
      analogously to tests.  This includes a check for undeclared
      package dependencies: it can also be enabled separately by
      setting the environment variable _R_CHECK_PACKAGES_USED_IN_DEMO_
      to a true value (as done by R CMD check --as-cran).

    ? R CMD build now supports --compression=zstd on platforms with
      sufficient support for zstd.

    ? tools::texi2pdf(..., texinputs=<paths>) now _pre_pends the
      specified <paths> to TEXINPUTS.  When building R itself
      (doc/NEWS.pdf and base vignettes) or package manuals using R CMD
      Rd2pdf, it is ensured that this R's Rd.sty takes precedence over
      any other (incompatible) versions in default ?texmf trees?.

    ? tools::Rd2latex() no longer outputs an \inputencoding{utf8} line
      by default; such a declaration is obsolete since LaTeX
      2018-04-01.

  BUG FIXES:

    ? update_pkg_po() now copies .mo files to the translation package
      even if a DESCRIPTION file exists, thanks to Michael Chirico
      fixing PR#18694.

    ? Auto-generated citation() entries no longer include (additional)
      URLs in the note field (PR#18547).

    ? as.data.frame.list() gets a new option new.names and now
      preserves NA names, thus fixing the format() method for data
      frames, and also bug PR#18745.  Relatedly, the format() method
      gets an option cut.names.

    ? stem() formats correctly also in cases where rounding up, e.g.,
      from 9.96 to 10 needs more digits; thanks to Ella Kaye and Kelly
      Bodwin, fixing PR#8934 during ?R Dev Day? at useR!2024.

      Additionally, stem(x) now works normally also when length(x) ==
      1.

    ? tools' toTitleCase() now works better, fixing PR#18674, thanks to
      Shannon Pileggi, Sarah Zeller, Reiko Okamoto, and Hugo Gruson's
      ?R Dev Day? effort.

    ? Printing matrices (typically with many rows and or columns) now
      also omits columns when desirable according to option max.print,
      or argument max, respectively.  This is primarily the work of
      Lorena Abad, Ekaterina Akimova, Hanne Oberman, Abhishek Ulayil,
      and Lionel Henry at the ?R Dev Day?, thus fixing PR#15027.

    ? Sys.setLanguage() now warns about _some_ failures to change the
      language.

    ? Printing ls.str() now shows "<missing>" even when R's language
      setting is not English.

    ? xyTable() now handles and reports NAs fixing PR#18654.  Thanks to
      Heather Turner and Zhian Kamvar for report and patch.

    ? as(*, "raw") now works as documented, thanks to Mikael Jagan's
      PR#18795.

    ? Informational messages of e.g., print(1:1e4, max=1000), now
      correctly mention max in addition to getOption("max.print").

    ? rowSums(A, dims = dd), colMeans(..), etc, give a more helpful
      error message when dd is not of length one, thanks to Michael
      Chirico's PR#18811.

    ? seq.Date() no longer explicitly coerces results from integer to
      double, analogously with seq.default(), seq.int() and
      seq.POSIXt(), resolving a _modified_ PR#18782.

    ? axisTicks(usr, ...) documentation clarification for log = TRUE,
      fixing bug PR#18821 thanks to Duncan Murdoch.

    ? debug() and debugonce(fun) now also accept a string fun when it
      names an S4 generic, fixing PR#18822 thanks to Mikael Jagan.

    ? debugonce(<S4-simple-body>, signature=*) now works correctly when
      ?called twice?, fixing PR#18824 thanks to Mikael Jagan.

    ? format(dtime, digits=* / format=*) is more consistent when the
      POSIXt date-time object dtime has fractional (non integer)
      seconds.  Fixes PR#17350, thanks to new contributions by LatinR's
      ?R Dev Day? participants, Heather Turner and Dirk Eddelbuettel;
      also fixes more cases, notably when format contains "

    ? options(scipen = NULL) and other invalid values now signal an
      error instead of invalidating ops relying on a finite integer
      value.  Values outside the range -9 .. 9999 are now warned about
      and set to a boundary or to the default 0, e.g., in case of an
      NA.

    ? cbind() could segfault with NULL inputs.  (Seen when R was built
      with gcc-14, LTO and C99 inlining semantics.)

    ? Fix segfault on quartz() from grid.glyph() call with glyphInfo()
      that describes non-existent font (PR#18784).  Thanks to Tomek
      Gieorgijewski.

    ? format() etc, using decimal.mark = s, by default getting s <-
      getOption("OutDec"), signals a warning (to become an error in the
      future) when s is not a string with exactly one character.

    ? When s <- getOption("OutDec") is not a string of one character, a
      warning is signalled now whenever it is used in internal C code,
      notably when calling the default methods of format().

    ? pwilcox() and qwilcox() now check for user interrupt less
      frequently.

    ? summary(<stl>) (which prints directly) finally gets the same
      digits default as the formatting printing of default summary()
      method results, and it is documented explicitly.

    ? options(show.error.locations = TRUE) once again shows the most
      recent known location when an error is reported.  Setting its
      value to "bottom" is no longer supported.  Numerical values are
      converted to logical.

    ? C API function R_GetCurrentSrcref(skip) now returns srcref
      entries correctly.  (Note that there is also a change to the
      interpretation of skip; see the C-LEVEL API entry above.)

    ? tools::Rd2latex() now removes leading and trailing spaces from
      \alias entries as documented, fixing indexing and linking hiccups
      in some PDF manuals.

    ? R CMD Rd2pdf can now render the package manual from a --latex
      installation also when the help contains figures.

    ? The argument of as.environment() is now named x, not object, as
      was always documented and shown when printing it; thanks to Gael
      Millot's PR#18849.

    ? When R CMD check aims at getting the time+date from a world
      clock, it is more robust against unexpected non-error results,
      thanks to Michael Chirico's PR#18852.

    ? The tools::parseLatex() parser made several parsing errors
      (PR#18855).

    ? Error messages produced by tools::parseLatex() are now more
      readable (PR#18855).

    ? R CMD build <pkg> excludes more file patterns when it tars the
      <pkg> directory, fixing both PR#18432 and PR#18434, for vim and
      GNU Global emacs users, thanks to Dirk Eddelbuettel's patch.

    ? quantile()'s default method gets an option fuzz to protect
      against floating point inaccuracy before rounding, thus fixing
      PR#15811 and, en passant, PR#17683.

    ? Printing arrays now also omits columns, rows and slices when
      desirable according to option max.print, or argument max,
      respectively, addressing most of the remaining part of PR#15027,
      thanks to Sherry Zhang's patch.

    ? drop.terms(y ~ w, 1) and similar now work, thanks to Benjamin
      Sommer's report in PR#18861 and collaboration with Heather Turner
      improving reformulate().

    ? Many arguments which should be length-1 logical are checked more
      thoroughly.  The most commonly seen errors are in unlink(,
      recursive), tempdir() and the na.rm arguments of max(), min(),
      sum(), ....

      grep(), strsplit() and similar took non-TRUE/FALSE values of
      their logical arguments as FALSE, but these were almost always
      mismatches to unnamed arguments and are now reported as NA.

    ? vignette("reshape") is now also available on Windows.

    ? trace(coerce, ..) now works correctly, fixing PR#18823 thanks to
      Mikael Jagan.

    ? R CMD check now also reports bad symbols in package shared
      objects linked in from local static libraries (PR#18789).

    ? factanal() now works correctly also, e.g., for GPArotation,
      oblimin() rotations, fixing PR#18417, thanks to Coen Bernaards
      and others.

    ? Setting attributes on primitive functions is deprecated now and
      already an error in the development version of R.  Changing the
      environment of a primitive does no longer happen and signals a
      warning.

-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business School
Solbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


From @uh@rto_@nggono @end|ng |rom y@hoo@com  Fri Apr 11 12:05:30 2025
From: @uh@rto_@nggono @end|ng |rom y@hoo@com (Suharto Anggono Suharto Anggono)
Date: Fri, 11 Apr 2025 10:05:30 +0000 (UTC)
Subject: [Rd] table() and as.character() performance for logical values
In-Reply-To: <26615.59798.376511.472793@stat.math.ethz.ch>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
Message-ID: <1588848520.602023.1744365930622@mail.yahoo.com>

 On second thought, I wonder if the caching in my changed 'StringFromLogical' in my previous message is safe. While 'ans' in the C function 'coerceToString' is protected, its element is also protected. If the object corresponding to 'ans' is then no longer protected, is it possible for the cached object 'TrueCh' or 'FalseCh' in 'StringFromLogical' to be garbage collected? If it is, I think of clearing the cache for each first filling. For example, by abusing 'warn' argument, the following is added to my changed 'StringFromLogical'.

 if (*warn) TrueCh = FalseCh = NULL;

Correspondingly, in 'coerceToString',

 warn = i == 0;

is inserted before

 SET_STRING_ELT(ans, i, StringFromLogical(LOGICAL_ELT(v, i), &warn));

for LGLSXP case.

---------------------
On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler <maechler at stat.math.ethz.ch> wrote:


>>>>> Suharto Anggono Suharto Anggono via R-devel
>>>>>? ? on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:

? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:

? ? > do_asatomic
? ? > ascommon
? ? > coerceVector
? ? > coerceToString
? ? > StringFromLogical (for each element)

? ? > The definition of 'StringFromLogical' in coerce.c :

? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
? ? >
? ? > do_asatomic
? ? > ascommon
? ? > coerceVector
? ? > coerceToString
? ? > StringFromLogical (for each element)
? ? >
? ? > The definition of 'StringFromLogical' in coerce.c :
? ? >
? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
? ? > {
? ? >? ? int w;
? ? >? ? formatLogical(&x, 1, &w);
? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
? ? >? ? else return mkChar(EncodeLogical(x, w));
? ? > }
? ? >
? ? > The definition of 'EncodeLogical' in printutils.c :
? ? >
? ? > const char *EncodeLogical(int x, int w)
? ? > {
? ? >? ? static char buff[NB];
? ? >? ? if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, (NB-1)), CHAR(R_print.na_string));
? ? >? ? else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
? ? >? ? else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
? ? >? ? buff[NB-1] = '\0';
? ? >? ? return buff;
? ? > }
? ? >
? ? > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
? ? > > system.time(as.character(L))
? ? >? ? user? system elapsed
? ? >? ? 2.69? ? 0.02? ? 2.73
? ? > > system.time(c("FALSE", "TRUE")[L+1])
? ? >? ? user? system elapsed
? ? >? ? 0.15? ? 0.04? ? 0.20
? ? > > system.time(c("FALSE", "TRUE")[L+1L])
? ? >? ? user? system elapsed
? ? >? ? 0.08? ? 0.05? ? 0.13
? ? > > L <- rep(NA, 10^7)
? ? > > system.time(as.character(L))
? ? >? ? user? system elapsed
? ? >? ? 0.11? ? 0.00? ? 0.11
? ? > > system.time(c("FALSE", "TRUE")[L+1])
? ? >? ? user? system elapsed
? ? >? ? 0.16? ? 0.06? ? 0.22
? ? > > system.time(c("FALSE", "TRUE")[L+1L])
? ? >? ? user? system elapsed
? ? >? ? 0.09? ? 0.03? ? 0.12
? ? >
? ? > `as.character` of a logical vector that is all NA is fast enough.
? ? > It appears that the call to 'formatLogical' inside > the C function
? ? > 'StringFromLogical' does not introduce much? ? > slowdown.


? ? > I found that using string literal inside the C function 'StringFromLogical', by replacing
? ? > EncodeLogical(x, w)
? ? > with
? ? > x ? "TRUE" : "FALSE"
? ? > (and the call to 'formatLogical' is not needed anymore), make it faster.

indeed! ... and we also notice that the 'w' argument is neither
needed anymore, and that makes sense: At this point when you
know you have a an R logical value there are only three
possibilities and no reason ever to warn about the conversion.

? ? > Alternatively,
or in addition !


? ? > "fast path" could be introduced in 'EncodeLogical', potentially also benefits format() in R.
? ? > For example, without replacing existing code, the following fragment could be inserted.
? ? >
? ? >? ? if(x == NA_LOGICAL) {if(w == R_print.na_width) return CHAR(R_print.na_string);}
? ? >? ? else if(x) {if(w == 4) return "TRUE";}
? ? >? ? else {if(w == 5) return "FALSE";}
? ? >
? ? > However, with either of them, c("FALSE", "TRUE")[L+1L] is still faster than as.character(L) .
? ? >
? ? > Precomputing or caching possible results of the C function 'StringFromLogical' allows as.character(L) to be as fast as c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical' could be changed to
? ? >
? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
? ? > {
? ? >? ? static SEXP TrueCh, FalseCh;
? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
? ? >? ? else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
? ? >? ? else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));

? ? > }

Indeed, and something along this line (storing the other two constant strings) was also
my thought when seeing the
? mkChar(x ? "TRUE" : "FALSE)
you implicitly proposed above.

I'm looking into applying both speedups;
thank you very much, Suharto!

Martin


--
Martin Maechler
ETH Zurich? and? R Core team
  
	[[alternative HTML version deleted]]


From @uh@rto_@nggono @end|ng |rom y@hoo@com  Fri Apr 11 15:02:58 2025
From: @uh@rto_@nggono @end|ng |rom y@hoo@com (Suharto Anggono Suharto Anggono)
Date: Fri, 11 Apr 2025 13:02:58 +0000 (UTC)
Subject: [Rd] table() and as.character() performance for logical values
In-Reply-To: <1588848520.602023.1744365930622@mail.yahoo.com>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
 <1588848520.602023.1744365930622@mail.yahoo.com>
Message-ID: <344643073.637904.1744376578104@mail.yahoo.com>

 Oh, with the abuse of 'warn' in my previous message, warning would be issued if the input 'v' of 'coerceToString' is a logical vector of length 1.

Revision:

Added to my changed 'StringFromLogical':
if (*warn) {TrueCh = FalseCh = NULL; *warn = 0;}

'coerceToString': insert
if (i == 0) warn = 1;
for LGLSXP case or initialize 'warn' to 16

'coerceToSymbol': insert
warn = 1;
for LGLSXP case or initialize 'warn' to 16


Another way is following the approach of caching in ''StringFromInteger'.

--------------
On Friday, 11 April 2025 at 05:05:30 pm GMT+7, Suharto Anggono Suharto Anggono <suharto_anggono at yahoo.com> wrote:


On second thought, I wonder if the caching in my changed 'StringFromLogical' in my previous message is safe. While 'ans' in the C function 'coerceToString' is protected, its element is also protected. If the object corresponding to 'ans' is then no longer protected, is it possible for the cached object 'TrueCh' or 'FalseCh' in 'StringFromLogical' to be garbage collected? If it is, I think of clearing the cache for each first filling. For example, by abusing 'warn' argument, the following is added to my changed 'StringFromLogical'.

if (*warn) TrueCh = FalseCh = NULL;

Correspondingly, in 'coerceToString',

warn = i == 0;

is inserted before

SET_STRING_ELT(ans, i, StringFromLogical(LOGICAL_ELT(v, i), &warn));

for LGLSXP case.

---------------------
On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler <maechler at stat.math.ethz.ch> wrote:


>>>>> Suharto Anggono Suharto Anggono via R-devel
>>>>>? ? on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:

? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:

? ? > do_asatomic
? ? > ascommon
? ? > coerceVector
? ? > coerceToString
? ? > StringFromLogical (for each element)

? ? > The definition of 'StringFromLogical' in coerce.c :

? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
? ? >
? ? > do_asatomic
? ? > ascommon
? ? > coerceVector
? ? > coerceToString
? ? > StringFromLogical (for each element)
? ? >
? ? > The definition of 'StringFromLogical' in coerce.c :
? ? >
? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
? ? > {
? ? >? ? int w;
? ? >? ? formatLogical(&x, 1, &w);
? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
? ? >? ? else return mkChar(EncodeLogical(x, w));
? ? > }
? ? >
? ? > The definition of 'EncodeLogical' in printutils.c :
? ? >
? ? > const char *EncodeLogical(int x, int w)
? ? > {
? ? >? ? static char buff[NB];
? ? >? ? if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, (NB-1)), CHAR(R_print.na_string));
? ? >? ? else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
? ? >? ? else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
? ? >? ? buff[NB-1] = '\0';
? ? >? ? return buff;
? ? > }
? ? >
? ? > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
? ? > > system.time(as.character(L))
? ? >? ? user? system elapsed
? ? >? ? 2.69? ? 0.02? ? 2.73
? ? > > system.time(c("FALSE", "TRUE")[L+1])
? ? >? ? user? system elapsed
? ? >? ? 0.15? ? 0.04? ? 0.20
? ? > > system.time(c("FALSE", "TRUE")[L+1L])
? ? >? ? user? system elapsed
? ? >? ? 0.08? ? 0.05? ? 0.13
? ? > > L <- rep(NA, 10^7)
? ? > > system.time(as.character(L))
? ? >? ? user? system elapsed
? ? >? ? 0.11? ? 0.00? ? 0.11
? ? > > system.time(c("FALSE", "TRUE")[L+1])
? ? >? ? user? system elapsed
? ? >? ? 0.16? ? 0.06? ? 0.22
? ? > > system.time(c("FALSE", "TRUE")[L+1L])
? ? >? ? user? system elapsed
? ? >? ? 0.09? ? 0.03? ? 0.12
? ? >
? ? > `as.character` of a logical vector that is all NA is fast enough.
? ? > It appears that the call to 'formatLogical' inside > the C function
? ? > 'StringFromLogical' does not introduce much? ? > slowdown.


? ? > I found that using string literal inside the C function 'StringFromLogical', by replacing
? ? > EncodeLogical(x, w)
? ? > with
? ? > x ? "TRUE" : "FALSE"
? ? > (and the call to 'formatLogical' is not needed anymore), make it faster.

indeed! ... and we also notice that the 'w' argument is neither
needed anymore, and that makes sense: At this point when you
know you have a an R logical value there are only three
possibilities and no reason ever to warn about the conversion.

? ? > Alternatively,
or in addition !


? ? > "fast path" could be introduced in 'EncodeLogical', potentially also benefits format() in R.
? ? > For example, without replacing existing code, the following fragment could be inserted.
? ? >
? ? >? ? if(x == NA_LOGICAL) {if(w == R_print.na_width) return CHAR(R_print.na_string);}
? ? >? ? else if(x) {if(w == 4) return "TRUE";}
? ? >? ? else {if(w == 5) return "FALSE";}
? ? >
? ? > However, with either of them, c("FALSE", "TRUE")[L+1L] is still faster than as.character(L) .
? ? >
? ? > Precomputing or caching possible results of the C function 'StringFromLogical' allows as.character(L) to be as fast as c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical' could be changed to
? ? >
? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
? ? > {
? ? >? ? static SEXP TrueCh, FalseCh;
? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
? ? >? ? else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
? ? >? ? else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));

? ? > }

Indeed, and something along this line (storing the other two constant strings) was also
my thought when seeing the
? mkChar(x ? "TRUE" : "FALSE)
you implicitly proposed above.

I'm looking into applying both speedups;
thank you very much, Suharto!

Martin


--
Martin Maechler
ETH Zurich? and? R Core team  
	[[alternative HTML version deleted]]


From @uh@rto_@nggono @end|ng |rom y@hoo@com  Fri Apr 11 16:23:03 2025
From: @uh@rto_@nggono @end|ng |rom y@hoo@com (Suharto Anggono Suharto Anggono)
Date: Fri, 11 Apr 2025 14:23:03 +0000 (UTC)
Subject: [Rd] table() and as.character() performance for logical values
In-Reply-To: <344643073.637904.1744376578104@mail.yahoo.com>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
 <1588848520.602023.1744365930622@mail.yahoo.com>
 <344643073.637904.1744376578104@mail.yahoo.com>
Message-ID: <60350864.679029.1744381383184@mail.yahoo.com>

 Alternative revision:

Added to my changed 'StringFromLogical':
#define CACHE 16
if (!(*warn & CACHE)) {TrueCh = FalseCh = NULL; *warn |= CACHE;}

No change to 'coerceToString' and 'coerceToSymbol'.

--------------
On Friday, 11 April 2025 at 08:02:58 pm GMT+7, Suharto Anggono Suharto Anggono <suharto_anggono at yahoo.com> wrote:


Oh, with the abuse of 'warn' in my previous message, warning would be issued if the input 'v' of 'coerceToString' is a logical vector of length 1.

Revision:

Added to my changed 'StringFromLogical':
if (*warn) {TrueCh = FalseCh = NULL; *warn = 0;}

'coerceToString': insert
if (i == 0) warn = 1;
for LGLSXP case or initialize 'warn' to 16

'coerceToSymbol': insert
warn = 1;
for LGLSXP case or initialize 'warn' to 16


Another way is following the approach of caching in ''StringFromInteger'.

--------------
On Friday, 11 April 2025 at 05:05:30 pm GMT+7, Suharto Anggono Suharto Anggono <suharto_anggono at yahoo.com> wrote:


On second thought, I wonder if the caching in my changed 'StringFromLogical' in my previous message is safe. While 'ans' in the C function 'coerceToString' is protected, its element is also protected. If the object corresponding to 'ans' is then no longer protected, is it possible for the cached object 'TrueCh' or 'FalseCh' in 'StringFromLogical' to be garbage collected? If it is, I think of clearing the cache for each first filling. For example, by abusing 'warn' argument, the following is added to my changed 'StringFromLogical'.

if (*warn) TrueCh = FalseCh = NULL;

Correspondingly, in 'coerceToString',

warn = i == 0;

is inserted before

SET_STRING_ELT(ans, i, StringFromLogical(LOGICAL_ELT(v, i), &warn));

for LGLSXP case.

---------------------
On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler <maechler at stat.math.ethz.ch> wrote:


>>>>> Suharto Anggono Suharto Anggono via R-devel
>>>>>? ? on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:

? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:

? ? > do_asatomic
? ? > ascommon
? ? > coerceVector
? ? > coerceToString
? ? > StringFromLogical (for each element)

? ? > The definition of 'StringFromLogical' in coerce.c :

? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
? ? >
? ? > do_asatomic
? ? > ascommon
? ? > coerceVector
? ? > coerceToString
? ? > StringFromLogical (for each element)
? ? >
? ? > The definition of 'StringFromLogical' in coerce.c :
? ? >
? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
? ? > {
? ? >? ? int w;
? ? >? ? formatLogical(&x, 1, &w);
? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
? ? >? ? else return mkChar(EncodeLogical(x, w));
? ? > }
? ? >
? ? > The definition of 'EncodeLogical' in printutils.c :
? ? >
? ? > const char *EncodeLogical(int x, int w)
? ? > {
? ? >? ? static char buff[NB];
? ? >? ? if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, (NB-1)), CHAR(R_print.na_string));
? ? >? ? else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
? ? >? ? else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
? ? >? ? buff[NB-1] = '\0';
? ? >? ? return buff;
? ? > }
? ? >
? ? > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
? ? > > system.time(as.character(L))
? ? >? ? user? system elapsed
? ? >? ? 2.69? ? 0.02? ? 2.73
? ? > > system.time(c("FALSE", "TRUE")[L+1])
? ? >? ? user? system elapsed
? ? >? ? 0.15? ? 0.04? ? 0.20
? ? > > system.time(c("FALSE", "TRUE")[L+1L])
? ? >? ? user? system elapsed
? ? >? ? 0.08? ? 0.05? ? 0.13
? ? > > L <- rep(NA, 10^7)
? ? > > system.time(as.character(L))
? ? >? ? user? system elapsed
? ? >? ? 0.11? ? 0.00? ? 0.11
? ? > > system.time(c("FALSE", "TRUE")[L+1])
? ? >? ? user? system elapsed
? ? >? ? 0.16? ? 0.06? ? 0.22
? ? > > system.time(c("FALSE", "TRUE")[L+1L])
? ? >? ? user? system elapsed
? ? >? ? 0.09? ? 0.03? ? 0.12
? ? >
? ? > `as.character` of a logical vector that is all NA is fast enough.
? ? > It appears that the call to 'formatLogical' inside > the C function
? ? > 'StringFromLogical' does not introduce much? ? > slowdown.


? ? > I found that using string literal inside the C function 'StringFromLogical', by replacing
? ? > EncodeLogical(x, w)
? ? > with
? ? > x ? "TRUE" : "FALSE"
? ? > (and the call to 'formatLogical' is not needed anymore), make it faster.

indeed! ... and we also notice that the 'w' argument is neither
needed anymore, and that makes sense: At this point when you
know you have a an R logical value there are only three
possibilities and no reason ever to warn about the conversion.

? ? > Alternatively,
or in addition !


? ? > "fast path" could be introduced in 'EncodeLogical', potentially also benefits format() in R.
? ? > For example, without replacing existing code, the following fragment could be inserted.
? ? >
? ? >? ? if(x == NA_LOGICAL) {if(w == R_print.na_width) return CHAR(R_print.na_string);}
? ? >? ? else if(x) {if(w == 4) return "TRUE";}
? ? >? ? else {if(w == 5) return "FALSE";}
? ? >
? ? > However, with either of them, c("FALSE", "TRUE")[L+1L] is still faster than as.character(L) .
? ? >
? ? > Precomputing or caching possible results of the C function 'StringFromLogical' allows as.character(L) to be as fast as c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical' could be changed to
? ? >
? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
? ? > {
? ? >? ? static SEXP TrueCh, FalseCh;
? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
? ? >? ? else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
? ? >? ? else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));

? ? > }

Indeed, and something along this line (storing the other two constant strings) was also
my thought when seeing the
? mkChar(x ? "TRUE" : "FALSE)
you implicitly proposed above.

I'm looking into applying both speedups;
thank you very much, Suharto!

Martin


--
Martin Maechler
ETH Zurich? and? R Core team  
	[[alternative HTML version deleted]]


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Apr 11 17:39:58 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 11 Apr 2025 11:39:58 -0400
Subject: [Rd] Check for protection (was: table() and as.character()
 performance for logical values)
In-Reply-To: <1588848520.602023.1744365930622@mail.yahoo.com>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
 <1588848520.602023.1744365930622@mail.yahoo.com>
Message-ID: <4b0c81cd-fb35-4ced-834c-09a590fcf3e9@gmail.com>

On a tangent from the main topic of this thread:  sometimes (especially 
to non-experts) it's not obvious whether a variable is protected or not.

I don't think there's any easy way to determine that, but perhaps there 
should be.  Would it be possible to add a run-time test you could call 
in C code (e.g. is_protected(x)) that would do the same search the 
garbage collector does in order to determine if a particular pointer is 
protected?

This would be an expensive operation, similar in cost to actually doing 
a garbage collection.  You wouldn't want to do it routinely, but it 
would be really helpful in debugging.

Duncan Murdoch

On 2025-04-11 6:05 a.m., Suharto Anggono Suharto Anggono via R-devel wrote:
>   On second thought, I wonder if the caching in my changed 'StringFromLogical' in my previous message is safe. While 'ans' in the C function 'coerceToString' is protected, its element is also protected. If the object corresponding to 'ans' is then no longer protected, is it possible for the cached object 'TrueCh' or 'FalseCh' in 'StringFromLogical' to be garbage collected? If it is, I think of clearing the cache for each first filling. For example, by abusing 'warn' argument, the following is added to my changed 'StringFromLogical'.
> 
>   if (*warn) TrueCh = FalseCh = NULL;
> 
> Correspondingly, in 'coerceToString',
> 
>   warn = i == 0;
> 
> is inserted before
> 
>   SET_STRING_ELT(ans, i, StringFromLogical(LOGICAL_ELT(v, i), &warn));
> 
> for LGLSXP case.
> 
> ---------------------
> On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
> 
> 
>>>>>> Suharto Anggono Suharto Anggono via R-devel
>>>>>>  ? ? on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:
> 
>  ? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
> 
>  ? ? > do_asatomic
>  ? ? > ascommon
>  ? ? > coerceVector
>  ? ? > coerceToString
>  ? ? > StringFromLogical (for each element)
> 
>  ? ? > The definition of 'StringFromLogical' in coerce.c :
> 
>  ? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
>  ? ? >
>  ? ? > do_asatomic
>  ? ? > ascommon
>  ? ? > coerceVector
>  ? ? > coerceToString
>  ? ? > StringFromLogical (for each element)
>  ? ? >
>  ? ? > The definition of 'StringFromLogical' in coerce.c :
>  ? ? >
>  ? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
>  ? ? > {
>  ? ? >? ? int w;
>  ? ? >? ? formatLogical(&x, 1, &w);
>  ? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
>  ? ? >? ? else return mkChar(EncodeLogical(x, w));
>  ? ? > }
>  ? ? >
>  ? ? > The definition of 'EncodeLogical' in printutils.c :
>  ? ? >
>  ? ? > const char *EncodeLogical(int x, int w)
>  ? ? > {
>  ? ? >? ? static char buff[NB];
>  ? ? >? ? if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, (NB-1)), CHAR(R_print.na_string));
>  ? ? >? ? else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
>  ? ? >? ? else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
>  ? ? >? ? buff[NB-1] = '\0';
>  ? ? >? ? return buff;
>  ? ? > }
>  ? ? >
>  ? ? > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
>  ? ? > > system.time(as.character(L))
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 2.69? ? 0.02? ? 2.73
>  ? ? > > system.time(c("FALSE", "TRUE")[L+1])
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.15? ? 0.04? ? 0.20
>  ? ? > > system.time(c("FALSE", "TRUE")[L+1L])
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.08? ? 0.05? ? 0.13
>  ? ? > > L <- rep(NA, 10^7)
>  ? ? > > system.time(as.character(L))
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.11? ? 0.00? ? 0.11
>  ? ? > > system.time(c("FALSE", "TRUE")[L+1])
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.16? ? 0.06? ? 0.22
>  ? ? > > system.time(c("FALSE", "TRUE")[L+1L])
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.09? ? 0.03? ? 0.12
>  ? ? >
>  ? ? > `as.character` of a logical vector that is all NA is fast enough.
>  ? ? > It appears that the call to 'formatLogical' inside > the C function
>  ? ? > 'StringFromLogical' does not introduce much? ? > slowdown.
> 
> 
>  ? ? > I found that using string literal inside the C function 'StringFromLogical', by replacing
>  ? ? > EncodeLogical(x, w)
>  ? ? > with
>  ? ? > x ? "TRUE" : "FALSE"
>  ? ? > (and the call to 'formatLogical' is not needed anymore), make it faster.
> 
> indeed! ... and we also notice that the 'w' argument is neither
> needed anymore, and that makes sense: At this point when you
> know you have a an R logical value there are only three
> possibilities and no reason ever to warn about the conversion.
> 
>  ? ? > Alternatively,
> or in addition !
> 
> 
>  ? ? > "fast path" could be introduced in 'EncodeLogical', potentially also benefits format() in R.
>  ? ? > For example, without replacing existing code, the following fragment could be inserted.
>  ? ? >
>  ? ? >? ? if(x == NA_LOGICAL) {if(w == R_print.na_width) return CHAR(R_print.na_string);}
>  ? ? >? ? else if(x) {if(w == 4) return "TRUE";}
>  ? ? >? ? else {if(w == 5) return "FALSE";}
>  ? ? >
>  ? ? > However, with either of them, c("FALSE", "TRUE")[L+1L] is still faster than as.character(L) .
>  ? ? >
>  ? ? > Precomputing or caching possible results of the C function 'StringFromLogical' allows as.character(L) to be as fast as c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical' could be changed to
>  ? ? >
>  ? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
>  ? ? > {
>  ? ? >? ? static SEXP TrueCh, FalseCh;
>  ? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
>  ? ? >? ? else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
>  ? ? >? ? else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));
> 
>  ? ? > }
> 
> Indeed, and something along this line (storing the other two constant strings) was also
> my thought when seeing the
>  ? mkChar(x ? "TRUE" : "FALSE)
> you implicitly proposed above.
> 
> I'm looking into applying both speedups;
> thank you very much, Suharto!
> 
> Martin
> 
> 
> --
> Martin Maechler
> ETH Zurich? and? R Core team
>    
> 	[[alternative HTML version deleted]]
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From mcque@ten @end|ng |rom gm@||@com  Fri Apr 11 17:57:28 2025
From: mcque@ten @end|ng |rom gm@||@com (Paul McQuesten)
Date: Fri, 11 Apr 2025 10:57:28 -0500
Subject: [Rd] Check for protection (was: table() and as.character()
 performance for logical values)
In-Reply-To: <4b0c81cd-fb35-4ced-834c-09a590fcf3e9@gmail.com>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
 <1588848520.602023.1744365930622@mail.yahoo.com>
 <4b0c81cd-fb35-4ced-834c-09a590fcf3e9@gmail.com>
Message-ID: <CAN6Gc-1iqWDpw==tDmwSYPgMSrN3AkgiFPG8qN0Jm9nBYGhQMQ@mail.gmail.com>

For a long-term horizon, would it help R developers to use a naming
convention?
Perhaps, varName_PROT, or the inverse varName_UNPROT?
Eventually, teach some linter about that?

On Fri, Apr 11, 2025 at 10:40?AM Duncan Murdoch <murdoch.duncan at gmail.com>
wrote:

> On a tangent from the main topic of this thread:  sometimes (especially
> to non-experts) it's not obvious whether a variable is protected or not.
>
> I don't think there's any easy way to determine that, but perhaps there
> should be.  Would it be possible to add a run-time test you could call
> in C code (e.g. is_protected(x)) that would do the same search the
> garbage collector does in order to determine if a particular pointer is
> protected?
>
> This would be an expensive operation, similar in cost to actually doing
> a garbage collection.  You wouldn't want to do it routinely, but it
> would be really helpful in debugging.
>
> Duncan Murdoch
>
> On 2025-04-11 6:05 a.m., Suharto Anggono Suharto Anggono via R-devel wrote:
> >   On second thought, I wonder if the caching in my changed
> 'StringFromLogical' in my previous message is safe. While 'ans' in the C
> function 'coerceToString' is protected, its element is also protected. If
> the object corresponding to 'ans' is then no longer protected, is it
> possible for the cached object 'TrueCh' or 'FalseCh' in 'StringFromLogical'
> to be garbage collected? If it is, I think of clearing the cache for each
> first filling. For example, by abusing 'warn' argument, the following is
> added to my changed 'StringFromLogical'.
> >
> >   if (*warn) TrueCh = FalseCh = NULL;
> >
> > Correspondingly, in 'coerceToString',
> >
> >   warn = i == 0;
> >
> > is inserted before
> >
> >   SET_STRING_ELT(ans, i, StringFromLogical(LOGICAL_ELT(v, i), &warn));
> >
> > for LGLSXP case.
> >
> > ---------------------
> > On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler <
> maechler at stat.math.ethz.ch> wrote:
> >
> >
> >>>>>> Suharto Anggono Suharto Anggono via R-devel
> >>>>>>      on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:
> >
> >      > Chain of calls of C functions in coerce.c for
> as.character(<logical>) in R:
> >
> >      > do_asatomic
> >      > ascommon
> >      > coerceVector
> >      > coerceToString
> >      > StringFromLogical (for each element)
> >
> >      > The definition of 'StringFromLogical' in coerce.c :
> >
> >      > Chain of calls of C functions in coerce.c for
> as.character(<logical>) in R:
> >      >
> >      > do_asatomic
> >      > ascommon
> >      > coerceVector
> >      > coerceToString
> >      > StringFromLogical (for each element)
> >      >
> >      > The definition of 'StringFromLogical' in coerce.c :
> >      >
> >      > attribute_hidden SEXP StringFromLogical(int x, int *warn)
> >      > {
> >      >    int w;
> >      >    formatLogical(&x, 1, &w);
> >      >    if (x == NA_LOGICAL) return NA_STRING;
> >      >    else return mkChar(EncodeLogical(x, w));
> >      > }
> >      >
> >      > The definition of 'EncodeLogical' in printutils.c :
> >      >
> >      > const char *EncodeLogical(int x, int w)
> >      > {
> >      >    static char buff[NB];
> >      >    if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, (NB-1)),
> CHAR(R_print.na_string));
> >      >    else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
> >      >    else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
> >      >    buff[NB-1] = '\0';
> >      >    return buff;
> >      > }
> >      >
> >      > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
> >      > > system.time(as.character(L))
> >      >    user  system elapsed
> >      >    2.69    0.02    2.73
> >      > > system.time(c("FALSE", "TRUE")[L+1])
> >      >    user  system elapsed
> >      >    0.15    0.04    0.20
> >      > > system.time(c("FALSE", "TRUE")[L+1L])
> >      >    user  system elapsed
> >      >    0.08    0.05    0.13
> >      > > L <- rep(NA, 10^7)
> >      > > system.time(as.character(L))
> >      >    user  system elapsed
> >      >    0.11    0.00    0.11
> >      > > system.time(c("FALSE", "TRUE")[L+1])
> >      >    user  system elapsed
> >      >    0.16    0.06    0.22
> >      > > system.time(c("FALSE", "TRUE")[L+1L])
> >      >    user  system elapsed
> >      >    0.09    0.03    0.12
> >      >
> >      > `as.character` of a logical vector that is all NA is fast enough.
> >      > It appears that the call to 'formatLogical' inside > the C
> function
> >      > 'StringFromLogical' does not introduce much    > slowdown.
> >
> >
> >      > I found that using string literal inside the C function
> 'StringFromLogical', by replacing
> >      > EncodeLogical(x, w)
> >      > with
> >      > x ? "TRUE" : "FALSE"
> >      > (and the call to 'formatLogical' is not needed anymore), make it
> faster.
> >
> > indeed! ... and we also notice that the 'w' argument is neither
> > needed anymore, and that makes sense: At this point when you
> > know you have a an R logical value there are only three
> > possibilities and no reason ever to warn about the conversion.
> >
> >      > Alternatively,
> > or in addition !
> >
> >
> >      > "fast path" could be introduced in 'EncodeLogical', potentially
> also benefits format() in R.
> >      > For example, without replacing existing code, the following
> fragment could be inserted.
> >      >
> >      >    if(x == NA_LOGICAL) {if(w == R_print.na_width) return
> CHAR(R_print.na_string);}
> >      >    else if(x) {if(w == 4) return "TRUE";}
> >      >    else {if(w == 5) return "FALSE";}
> >      >
> >      > However, with either of them, c("FALSE", "TRUE")[L+1L] is still
> faster than as.character(L) .
> >      >
> >      > Precomputing or caching possible results of the C function
> 'StringFromLogical' allows as.character(L) to be as fast as c("FALSE",
> "TRUE")[L+1L] in R. For example, 'StringFromLogical' could be changed to
> >      >
> >      > attribute_hidden SEXP StringFromLogical(int x, int *warn)
> >      > {
> >      >    static SEXP TrueCh, FalseCh;
> >      >    if (x == NA_LOGICAL) return NA_STRING;
> >      >    else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
> >      >    else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));
> >
> >      > }
> >
> > Indeed, and something along this line (storing the other two constant
> strings) was also
> > my thought when seeing the
> >    mkChar(x ? "TRUE" : "FALSE)
> > you implicitly proposed above.
> >
> > I'm looking into applying both speedups;
> > thank you very much, Suharto!
> >
> > Martin
> >
> >
> > --
> > Martin Maechler
> > ETH Zurich  and  R Core team
> >
> >       [[alternative HTML version deleted]]
> >
> > ______________________________________________
> > R-devel at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel
>

	[[alternative HTML version deleted]]


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Apr 11 18:01:03 2025
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 11 Apr 2025 18:01:03 +0200
Subject: [Rd] table() and as.character() performance for logical values
In-Reply-To: <60350864.679029.1744381383184@mail.yahoo.com>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
 <1588848520.602023.1744365930622@mail.yahoo.com>
 <344643073.637904.1744376578104@mail.yahoo.com>
 <60350864.679029.1744381383184@mail.yahoo.com>
Message-ID: <cae57a97-f777-4dc8-9e37-06d4d34d4e03@gmail.com>


On 4/11/25 16:23, Suharto Anggono Suharto Anggono via R-devel wrote:
>   Alternative revision:
>
> Added to my changed 'StringFromLogical':
> #define CACHE 16
> if (!(*warn & CACHE)) {TrueCh = FalseCh = NULL; *warn |= CACHE;}
>
> No change to 'coerceToString' and 'coerceToSymbol'.
>
> --------------
> On Friday, 11 April 2025 at 08:02:58 pm GMT+7, Suharto Anggono Suharto Anggono <suharto_anggono at yahoo.com> wrote:
>
>
> Oh, with the abuse of 'warn' in my previous message, warning would be issued if the input 'v' of 'coerceToString' is a logical vector of length 1.
>
> Revision:
>
> Added to my changed 'StringFromLogical':
> if (*warn) {TrueCh = FalseCh = NULL; *warn = 0;}
>
> 'coerceToString': insert
> if (i == 0) warn = 1;
> for LGLSXP case or initialize 'warn' to 16
>
> 'coerceToSymbol': insert
> warn = 1;
> for LGLSXP case or initialize 'warn' to 16
>
>
> Another way is following the approach of caching in ''StringFromInteger'.
>
> --------------
> On Friday, 11 April 2025 at 05:05:30 pm GMT+7, Suharto Anggono Suharto Anggono <suharto_anggono at yahoo.com> wrote:
>
>
> On second thought, I wonder if the caching in my changed 'StringFromLogical' in my previous message is safe. While 'ans' in the C function 'coerceToString' is protected, its element is also protected. If the object corresponding to 'ans' is then no longer protected, is it possible for the cached object 'TrueCh' or 'FalseCh' in 'StringFromLogical' to be garbage collected? If it is, I think of clearing the cache for each first filling. For example, by abusing 'warn' argument, the following is added to my changed 'StringFromLogical'.

If this is the caching you had in mind:

 ??? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
 ??? > {
 ??? >??? static SEXP TrueCh, FalseCh;
 ??? >??? if (x == NA_LOGICAL) return NA_STRING;
 ??? >??? else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
 ??? >??? else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));

that is really a protection error. StringFromLogical() should make sure 
that TrueCh, FalseCh will be protected as long as recorded in the static 
field. PreserveObject() would be a natural function for this.

Best
Tomas

> if (*warn) TrueCh = FalseCh = NULL;
>
> Correspondingly, in 'coerceToString',
>
> warn = i == 0;
>
> is inserted before
>
> SET_STRING_ELT(ans, i, StringFromLogical(LOGICAL_ELT(v, i), &warn));
>
> for LGLSXP case.
>
> ---------------------
> On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler <maechler at stat.math.ethz.ch> wrote:
>
>
>>>>>> Suharto Anggono Suharto Anggono via R-devel
>>>>>>  ? ? on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:
>  ? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
>
>  ? ? > do_asatomic
>  ? ? > ascommon
>  ? ? > coerceVector
>  ? ? > coerceToString
>  ? ? > StringFromLogical (for each element)
>
>  ? ? > The definition of 'StringFromLogical' in coerce.c :
>
>  ? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
>  ? ? >
>  ? ? > do_asatomic
>  ? ? > ascommon
>  ? ? > coerceVector
>  ? ? > coerceToString
>  ? ? > StringFromLogical (for each element)
>  ? ? >
>  ? ? > The definition of 'StringFromLogical' in coerce.c :
>  ? ? >
>  ? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
>  ? ? > {
>  ? ? >? ? int w;
>  ? ? >? ? formatLogical(&x, 1, &w);
>  ? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
>  ? ? >? ? else return mkChar(EncodeLogical(x, w));
>  ? ? > }
>  ? ? >
>  ? ? > The definition of 'EncodeLogical' in printutils.c :
>  ? ? >
>  ? ? > const char *EncodeLogical(int x, int w)
>  ? ? > {
>  ? ? >? ? static char buff[NB];
>  ? ? >? ? if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, (NB-1)), CHAR(R_print.na_string));
>  ? ? >? ? else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
>  ? ? >? ? else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
>  ? ? >? ? buff[NB-1] = '\0';
>  ? ? >? ? return buff;
>  ? ? > }
>  ? ? >
>  ? ? > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
>  ? ? > > system.time(as.character(L))
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 2.69? ? 0.02? ? 2.73
>  ? ? > > system.time(c("FALSE", "TRUE")[L+1])
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.15? ? 0.04? ? 0.20
>  ? ? > > system.time(c("FALSE", "TRUE")[L+1L])
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.08? ? 0.05? ? 0.13
>  ? ? > > L <- rep(NA, 10^7)
>  ? ? > > system.time(as.character(L))
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.11? ? 0.00? ? 0.11
>  ? ? > > system.time(c("FALSE", "TRUE")[L+1])
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.16? ? 0.06? ? 0.22
>  ? ? > > system.time(c("FALSE", "TRUE")[L+1L])
>  ? ? >? ? user? system elapsed
>  ? ? >? ? 0.09? ? 0.03? ? 0.12
>  ? ? >
>  ? ? > `as.character` of a logical vector that is all NA is fast enough.
>  ? ? > It appears that the call to 'formatLogical' inside > the C function
>  ? ? > 'StringFromLogical' does not introduce much? ? > slowdown.
>
>
>  ? ? > I found that using string literal inside the C function 'StringFromLogical', by replacing
>  ? ? > EncodeLogical(x, w)
>  ? ? > with
>  ? ? > x ? "TRUE" : "FALSE"
>  ? ? > (and the call to 'formatLogical' is not needed anymore), make it faster.
>
> indeed! ... and we also notice that the 'w' argument is neither
> needed anymore, and that makes sense: At this point when you
> know you have a an R logical value there are only three
> possibilities and no reason ever to warn about the conversion.
>
>  ? ? > Alternatively,
> or in addition !
>
>
>  ? ? > "fast path" could be introduced in 'EncodeLogical', potentially also benefits format() in R.
>  ? ? > For example, without replacing existing code, the following fragment could be inserted.
>  ? ? >
>  ? ? >? ? if(x == NA_LOGICAL) {if(w == R_print.na_width) return CHAR(R_print.na_string);}
>  ? ? >? ? else if(x) {if(w == 4) return "TRUE";}
>  ? ? >? ? else {if(w == 5) return "FALSE";}
>  ? ? >
>  ? ? > However, with either of them, c("FALSE", "TRUE")[L+1L] is still faster than as.character(L) .
>  ? ? >
>  ? ? > Precomputing or caching possible results of the C function 'StringFromLogical' allows as.character(L) to be as fast as c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical' could be changed to
>  ? ? >
>  ? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
>  ? ? > {
>  ? ? >? ? static SEXP TrueCh, FalseCh;
>  ? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
>  ? ? >? ? else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
>  ? ? >? ? else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));
>
>  ? ? > }
>
> Indeed, and something along this line (storing the other two constant strings) was also
> my thought when seeing the
>  ? mkChar(x ? "TRUE" : "FALSE)
> you implicitly proposed above.
>
> I'm looking into applying both speedups;
> thank you very much, Suharto!
>
> Martin
>
>
> --
> Martin Maechler
> ETH Zurich? and? R Core team
> 	[[alternative HTML version deleted]]
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From murdoch@dunc@n @end|ng |rom gm@||@com  Fri Apr 11 18:28:44 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Fri, 11 Apr 2025 12:28:44 -0400
Subject: [Rd] Check for protection
In-Reply-To: <CAN6Gc-1iqWDpw==tDmwSYPgMSrN3AkgiFPG8qN0Jm9nBYGhQMQ@mail.gmail.com>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
 <1588848520.602023.1744365930622@mail.yahoo.com>
 <4b0c81cd-fb35-4ced-834c-09a590fcf3e9@gmail.com>
 <CAN6Gc-1iqWDpw==tDmwSYPgMSrN3AkgiFPG8qN0Jm9nBYGhQMQ@mail.gmail.com>
Message-ID: <d956cbd8-836b-4e20-9617-1210d1f862a0@gmail.com>

That might help, but protecting things is a fairly cheap operation, so I 
don't know if people would bother with the naming convention.  It's just 
as easy to just protect things if you're not sure.

One way things can go wrong is when you think you protected something, 
but then the pointer changes and the new pointer is not protected. 
Maybe a linter could recognize that some code path assigned a new value 
to a variable without protecting it?  I guess it's easier to recognize 
that you made an assignment to varName_PROT without protecting it again 
than to look at the PROTECT calls, but it's not really that different.

Duncan Murdoch



On 2025-04-11 11:57 a.m., Paul McQuesten wrote:
> For a long-term horizon, would it help R developers to use a naming 
> convention?
> Perhaps, varName_PROT, or the inverse varName_UNPROT?
> Eventually, teach some linter about that?
> 
> On Fri, Apr 11, 2025 at 10:40?AM Duncan Murdoch 
> <murdoch.duncan at gmail.com <mailto:murdoch.duncan at gmail.com>> wrote:
> 
>     On a tangent from the main topic of this thread:? sometimes (especially
>     to non-experts) it's not obvious whether a variable is protected or not.
> 
>     I don't think there's any easy way to determine that, but perhaps there
>     should be.? Would it be possible to add a run-time test you could call
>     in C code (e.g. is_protected(x)) that would do the same search the
>     garbage collector does in order to determine if a particular pointer is
>     protected?
> 
>     This would be an expensive operation, similar in cost to actually doing
>     a garbage collection.? You wouldn't want to do it routinely, but it
>     would be really helpful in debugging.
> 
>     Duncan Murdoch
> 
>     On 2025-04-11 6:05 a.m., Suharto Anggono Suharto Anggono via R-devel
>     wrote:
>      >? ?On second thought, I wonder if the caching in my changed
>     'StringFromLogical' in my previous message is safe. While 'ans' in
>     the C function 'coerceToString' is protected, its element is also
>     protected. If the object corresponding to 'ans' is then no longer
>     protected, is it possible for the cached object 'TrueCh' or
>     'FalseCh' in 'StringFromLogical' to be garbage collected? If it is,
>     I think of clearing the cache for each first filling. For example,
>     by abusing 'warn' argument, the following is added to my changed
>     'StringFromLogical'.
>      >
>      >? ?if (*warn) TrueCh = FalseCh = NULL;
>      >
>      > Correspondingly, in 'coerceToString',
>      >
>      >? ?warn = i == 0;
>      >
>      > is inserted before
>      >
>      >? ?SET_STRING_ELT(ans, i, StringFromLogical(LOGICAL_ELT(v, i),
>     &warn));
>      >
>      > for LGLSXP case.
>      >
>      > ---------------------
>      > On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler
>     <maechler at stat.math.ethz.ch <mailto:maechler at stat.math.ethz.ch>> wrote:
>      >
>      >
>      >>>>>> Suharto Anggono Suharto Anggono via R-devel
>      >>>>>>? ? ? on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:
>      >
>      >? ? ? > Chain of calls of C functions in coerce.c for
>     as.character(<logical>) in R:
>      >
>      >? ? ? > do_asatomic
>      >? ? ? > ascommon
>      >? ? ? > coerceVector
>      >? ? ? > coerceToString
>      >? ? ? > StringFromLogical (for each element)
>      >
>      >? ? ? > The definition of 'StringFromLogical' in coerce.c :
>      >
>      >? ? ? > Chain of calls of C functions in coerce.c for
>     as.character(<logical>) in R:
>      >? ? ? >
>      >? ? ? > do_asatomic
>      >? ? ? > ascommon
>      >? ? ? > coerceVector
>      >? ? ? > coerceToString
>      >? ? ? > StringFromLogical (for each element)
>      >? ? ? >
>      >? ? ? > The definition of 'StringFromLogical' in coerce.c :
>      >? ? ? >
>      >? ? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
>      >? ? ? > {
>      >? ? ? >? ? int w;
>      >? ? ? >? ? formatLogical(&x, 1, &w);
>      >? ? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
>      >? ? ? >? ? else return mkChar(EncodeLogical(x, w));
>      >? ? ? > }
>      >? ? ? >
>      >? ? ? > The definition of 'EncodeLogical' in printutils.c :
>      >? ? ? >
>      >? ? ? > const char *EncodeLogical(int x, int w)
>      >? ? ? > {
>      >? ? ? >? ? static char buff[NB];
>      >? ? ? >? ? if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w,
>     (NB-1)), CHAR(R_print.na_string));
>      >? ? ? >? ? else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)),
>     "TRUE");
>      >? ? ? >? ? else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
>      >? ? ? >? ? buff[NB-1] = '\0';
>      >? ? ? >? ? return buff;
>      >? ? ? > }
>      >? ? ? >
>      >? ? ? > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
>      >? ? ? > > system.time(as.character(L))
>      >? ? ? >? ? user? system elapsed
>      >? ? ? >? ? 2.69? ? 0.02? ? 2.73
>      >? ? ? > > system.time(c("FALSE", "TRUE")[L+1])
>      >? ? ? >? ? user? system elapsed
>      >? ? ? >? ? 0.15? ? 0.04? ? 0.20
>      >? ? ? > > system.time(c("FALSE", "TRUE")[L+1L])
>      >? ? ? >? ? user? system elapsed
>      >? ? ? >? ? 0.08? ? 0.05? ? 0.13
>      >? ? ? > > L <- rep(NA, 10^7)
>      >? ? ? > > system.time(as.character(L))
>      >? ? ? >? ? user? system elapsed
>      >? ? ? >? ? 0.11? ? 0.00? ? 0.11
>      >? ? ? > > system.time(c("FALSE", "TRUE")[L+1])
>      >? ? ? >? ? user? system elapsed
>      >? ? ? >? ? 0.16? ? 0.06? ? 0.22
>      >? ? ? > > system.time(c("FALSE", "TRUE")[L+1L])
>      >? ? ? >? ? user? system elapsed
>      >? ? ? >? ? 0.09? ? 0.03? ? 0.12
>      >? ? ? >
>      >? ? ? > `as.character` of a logical vector that is all NA is fast
>     enough.
>      >? ? ? > It appears that the call to 'formatLogical' inside > the C
>     function
>      >? ? ? > 'StringFromLogical' does not introduce much? ? > slowdown.
>      >
>      >
>      >? ? ? > I found that using string literal inside the C function
>     'StringFromLogical', by replacing
>      >? ? ? > EncodeLogical(x, w)
>      >? ? ? > with
>      >? ? ? > x ? "TRUE" : "FALSE"
>      >? ? ? > (and the call to 'formatLogical' is not needed anymore),
>     make it faster.
>      >
>      > indeed! ... and we also notice that the 'w' argument is neither
>      > needed anymore, and that makes sense: At this point when you
>      > know you have a an R logical value there are only three
>      > possibilities and no reason ever to warn about the conversion.
>      >
>      >? ? ? > Alternatively,
>      > or in addition !
>      >
>      >
>      >? ? ? > "fast path" could be introduced in 'EncodeLogical',
>     potentially also benefits format() in R.
>      >? ? ? > For example, without replacing existing code, the
>     following fragment could be inserted.
>      >? ? ? >
>      >? ? ? >? ? if(x == NA_LOGICAL) {if(w == R_print.na_width) return
>     CHAR(R_print.na_string);}
>      >? ? ? >? ? else if(x) {if(w == 4) return "TRUE";}
>      >? ? ? >? ? else {if(w == 5) return "FALSE";}
>      >? ? ? >
>      >? ? ? > However, with either of them, c("FALSE", "TRUE")[L+1L] is
>     still faster than as.character(L) .
>      >? ? ? >
>      >? ? ? > Precomputing or caching possible results of the C function
>     'StringFromLogical' allows as.character(L) to be as fast as
>     c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical'
>     could be changed to
>      >? ? ? >
>      >? ? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
>      >? ? ? > {
>      >? ? ? >? ? static SEXP TrueCh, FalseCh;
>      >? ? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
>      >? ? ? >? ? else if (x) return TrueCh ? TrueCh : (TrueCh =
>     mkChar("TRUE"));
>      >? ? ? >? ? else return FalseCh ? FalseCh : (FalseCh =
>     mkChar("FALSE"));
>      >
>      >? ? ? > }
>      >
>      > Indeed, and something along this line (storing the other two
>     constant strings) was also
>      > my thought when seeing the
>      >? ? mkChar(x ? "TRUE" : "FALSE)
>      > you implicitly proposed above.
>      >
>      > I'm looking into applying both speedups;
>      > thank you very much, Suharto!
>      >
>      > Martin
>      >
>      >
>      > --
>      > Martin Maechler
>      > ETH Zurich? and? R Core team
>      >
>      >? ? ? ?[[alternative HTML version deleted]]
>      >
>      > ______________________________________________
>      > R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>      > https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
> 
>     ______________________________________________
>     R-devel at r-project.org <mailto:R-devel at r-project.org> mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-devel
>     <https://stat.ethz.ch/mailman/listinfo/r-devel>
>


From tom@@@k@||ber@ @end|ng |rom gm@||@com  Fri Apr 11 18:31:38 2025
From: tom@@@k@||ber@ @end|ng |rom gm@||@com (Tomas Kalibera)
Date: Fri, 11 Apr 2025 18:31:38 +0200
Subject: [Rd] Check for protection
In-Reply-To: <4b0c81cd-fb35-4ced-834c-09a590fcf3e9@gmail.com>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
 <1588848520.602023.1744365930622@mail.yahoo.com>
 <4b0c81cd-fb35-4ced-834c-09a590fcf3e9@gmail.com>
Message-ID: <130e2d22-1398-4611-a100-e6313f4323c5@gmail.com>

On 4/11/25 17:39, Duncan Murdoch wrote:
> On a tangent from the main topic of this thread:? sometimes 
> (especially to non-experts) it's not obvious whether a variable is 
> protected or not.
>
> I don't think there's any easy way to determine that, but perhaps 
> there should be.? Would it be possible to add a run-time test you 
> could call in C code (e.g. is_protected(x)) that would do the same 
> search the garbage collector does in order to determine if a 
> particular pointer is protected?
>
> This would be an expensive operation, similar in cost to actually 
> doing a garbage collection.? You wouldn't want to do it routinely, but 
> it would be really helpful in debugging.

I've experimented with some things like that in the past and concluded 
they were not that useful.

Learning that a value is not protected at certain point in the program 
doesn't necessarily mean this is a bug - it depends whether that value 
will be exposed to a possible garbage collection. It is perfectly fine 
that an unprotected value is returned from a C function (and this is how 
it should be). It is fine when an unprotected value exists before it is 
passed to say SET_VECTOR_ELT().

So, right, one might ask if a specific value would be later exposed to a 
garbage collection unprotected (leaving to the tool when such collection 
would happen). But then, it may be ok, because when such a garbage 
collection happens, it would be clear the value cannot be used anymore. 
It only matters if such a value is then being used.

And then: a value may be protected by coincidence, by something that is 
not safe to rely on. Such as the example of the caching of a value in a 
global variable: when we ask whether it is protected, it may be that it 
happens to be protected by some inconsequential call on the stack, but 
we should not rely on that.

We have gc torture with the strict barrier checking, which allows to 
detect use of a value that has been in fact garbage collected. Also, one 
can use the strict barrier checking and manually place calls to gc at 
certain points of interest (though, the danger is one places it where it 
actually cannot happen). These runtime solutions can't find all possible 
problems nor would they tell one what should actually be protected where.

And we have rchk, a static analysis tool, which can direct one close to 
where the problems occur, and works based on the rules how protection 
should be done. It is faster, but, it will have false alarms.

The rules for how to protect objects in Writing R Extensions should be 
quite clear and easy to follow, and certainly it is fine and appropriate 
to ask for help on this list given a small C example. I think the bigger 
problem is when one knows the rules, tries to follow them, but simply 
forgets/makes a mistake at some point. And for that, we have the 
checking tools mentioned. UBSAN also sometimes can spot some of these 
problems.

Best
Tomas

>
> Duncan Murdoch
>
> On 2025-04-11 6:05 a.m., Suharto Anggono Suharto Anggono via R-devel 
> wrote:
>> ? On second thought, I wonder if the caching in my changed 
>> 'StringFromLogical' in my previous message is safe. While 'ans' in 
>> the C function 'coerceToString' is protected, its element is also 
>> protected. If the object corresponding to 'ans' is then no longer 
>> protected, is it possible for the cached object 'TrueCh' or 'FalseCh' 
>> in 'StringFromLogical' to be garbage collected? If it is, I think of 
>> clearing the cache for each first filling. For example, by abusing 
>> 'warn' argument, the following is added to my changed 
>> 'StringFromLogical'.
>>
>> ? if (*warn) TrueCh = FalseCh = NULL;
>>
>> Correspondingly, in 'coerceToString',
>>
>> ? warn = i == 0;
>>
>> is inserted before
>>
>> ? SET_STRING_ELT(ans, i, StringFromLogical(LOGICAL_ELT(v, i), &warn));
>>
>> for LGLSXP case.
>>
>> ---------------------
>> On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler 
>> <maechler at stat.math.ethz.ch> wrote:
>>
>>
>>>>>>> Suharto Anggono Suharto Anggono via R-devel
>>>>>>> ?? ? on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:
>>
>> ?? ? > Chain of calls of C functions in coerce.c for 
>> as.character(<logical>) in R:
>>
>> ?? ? > do_asatomic
>> ?? ? > ascommon
>> ?? ? > coerceVector
>> ?? ? > coerceToString
>> ?? ? > StringFromLogical (for each element)
>>
>> ?? ? > The definition of 'StringFromLogical' in coerce.c :
>>
>> ?? ? > Chain of calls of C functions in coerce.c for 
>> as.character(<logical>) in R:
>> ?? ? >
>> ?? ? > do_asatomic
>> ?? ? > ascommon
>> ?? ? > coerceVector
>> ?? ? > coerceToString
>> ?? ? > StringFromLogical (for each element)
>> ?? ? >
>> ?? ? > The definition of 'StringFromLogical' in coerce.c :
>> ?? ? >
>> ?? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
>> ?? ? > {
>> ?? ? >? ? int w;
>> ?? ? >? ? formatLogical(&x, 1, &w);
>> ?? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
>> ?? ? >? ? else return mkChar(EncodeLogical(x, w));
>> ?? ? > }
>> ?? ? >
>> ?? ? > The definition of 'EncodeLogical' in printutils.c :
>> ?? ? >
>> ?? ? > const char *EncodeLogical(int x, int w)
>> ?? ? > {
>> ?? ? >? ? static char buff[NB];
>> ?? ? >? ? if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, 
>> (NB-1)), CHAR(R_print.na_string));
>> ?? ? >? ? else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
>> ?? ? >? ? else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
>> ?? ? >? ? buff[NB-1] = '\0';
>> ?? ? >? ? return buff;
>> ?? ? > }
>> ?? ? >
>> ?? ? > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
>> ?? ? > > system.time(as.character(L))
>> ?? ? >? ? user? system elapsed
>> ?? ? >? ? 2.69? ? 0.02? ? 2.73
>> ?? ? > > system.time(c("FALSE", "TRUE")[L+1])
>> ?? ? >? ? user? system elapsed
>> ?? ? >? ? 0.15? ? 0.04? ? 0.20
>> ?? ? > > system.time(c("FALSE", "TRUE")[L+1L])
>> ?? ? >? ? user? system elapsed
>> ?? ? >? ? 0.08? ? 0.05? ? 0.13
>> ?? ? > > L <- rep(NA, 10^7)
>> ?? ? > > system.time(as.character(L))
>> ?? ? >? ? user? system elapsed
>> ?? ? >? ? 0.11? ? 0.00? ? 0.11
>> ?? ? > > system.time(c("FALSE", "TRUE")[L+1])
>> ?? ? >? ? user? system elapsed
>> ?? ? >? ? 0.16? ? 0.06? ? 0.22
>> ?? ? > > system.time(c("FALSE", "TRUE")[L+1L])
>> ?? ? >? ? user? system elapsed
>> ?? ? >? ? 0.09? ? 0.03? ? 0.12
>> ?? ? >
>> ?? ? > `as.character` of a logical vector that is all NA is fast enough.
>> ?? ? > It appears that the call to 'formatLogical' inside > the C 
>> function
>> ?? ? > 'StringFromLogical' does not introduce much? ? > slowdown.
>>
>>
>> ?? ? > I found that using string literal inside the C function 
>> 'StringFromLogical', by replacing
>> ?? ? > EncodeLogical(x, w)
>> ?? ? > with
>> ?? ? > x ? "TRUE" : "FALSE"
>> ?? ? > (and the call to 'formatLogical' is not needed anymore), make 
>> it faster.
>>
>> indeed! ... and we also notice that the 'w' argument is neither
>> needed anymore, and that makes sense: At this point when you
>> know you have a an R logical value there are only three
>> possibilities and no reason ever to warn about the conversion.
>>
>> ?? ? > Alternatively,
>> or in addition !
>>
>>
>> ?? ? > "fast path" could be introduced in 'EncodeLogical', 
>> potentially also benefits format() in R.
>> ?? ? > For example, without replacing existing code, the following 
>> fragment could be inserted.
>> ?? ? >
>> ?? ? >? ? if(x == NA_LOGICAL) {if(w == R_print.na_width) return 
>> CHAR(R_print.na_string);}
>> ?? ? >? ? else if(x) {if(w == 4) return "TRUE";}
>> ?? ? >? ? else {if(w == 5) return "FALSE";}
>> ?? ? >
>> ?? ? > However, with either of them, c("FALSE", "TRUE")[L+1L] is 
>> still faster than as.character(L) .
>> ?? ? >
>> ?? ? > Precomputing or caching possible results of the C function 
>> 'StringFromLogical' allows as.character(L) to be as fast as 
>> c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical' could 
>> be changed to
>> ?? ? >
>> ?? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
>> ?? ? > {
>> ?? ? >? ? static SEXP TrueCh, FalseCh;
>> ?? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
>> ?? ? >? ? else if (x) return TrueCh ? TrueCh : (TrueCh = 
>> mkChar("TRUE"));
>> ?? ? >? ? else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));
>>
>> ?? ? > }
>>
>> Indeed, and something along this line (storing the other two constant 
>> strings) was also
>> my thought when seeing the
>> ?? mkChar(x ? "TRUE" : "FALSE)
>> you implicitly proposed above.
>>
>> I'm looking into applying both speedups;
>> thank you very much, Suharto!
>>
>> Martin
>>
>>
>> -- 
>> Martin Maechler
>> ETH Zurich? and? R Core team
>> ?? ????[[alternative HTML version deleted]]
>>
>> ______________________________________________
>> R-devel at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-devel
>
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


From @uh@rto_@nggono @end|ng |rom y@hoo@com  Sat Apr 12 10:27:26 2025
From: @uh@rto_@nggono @end|ng |rom y@hoo@com (Suharto Anggono Suharto Anggono)
Date: Sat, 12 Apr 2025 08:27:26 +0000 (UTC)
Subject: [Rd] table() and as.character() performance for logical values
In-Reply-To: <26615.59798.376511.472793@stat.math.ethz.ch>
References: <2092175466.123741.1744271584635.ref@mail.yahoo.com>
 <2092175466.123741.1744271584635@mail.yahoo.com>
 <26615.59798.376511.472793@stat.math.ethz.ch>
Message-ID: <670861846.967390.1744446446068@mail.yahoo.com>

For NA case (x == NA_LOGICAL), if R_print.na_width > NB-1 , the "fast path" for 'EncodeLogical' that I propose previously behaves differently from the general case that truncates at (NB-1).

To be consistent with the general case,
if(w == R_print.na_width)
can be replaced with
if(w == R_print.na_width && w <= NB-1)
or
if(min(w, (NB-1)) == R_print.na_width)

Or, just remove the "fast path" for NA case. For example, replace

? ?if(x == NA_LOGICAL) {if(w == R_print.na_width) return CHAR(R_print.na_string);}

with

? ?if(x == NA_LOGICAL) ;


By the way, the comment in 'formatLogical' implies that 5 "is the widest it can be, so stop". It is not true if R_print.na_width > 5 .

The output of
print(c(FALSE, NA), na.print = "******")
is not as it should be.




----------------
On Thursday, 10 April 2025 at 10:54:03 pm GMT+7, Martin Maechler <maechler at stat.math.ethz.ch> wrote: 





>>>>> Suharto Anggono Suharto Anggono via R-devel 
>>>>>? ? on Thu, 10 Apr 2025 07:53:04 +0000 (UTC) writes:

? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:

? ? > do_asatomic
? ? > ascommon
? ? > coerceVector
? ? > coerceToString
? ? > StringFromLogical (for each element)

? ? > The definition of 'StringFromLogical' in coerce.c :

? ? > Chain of calls of C functions in coerce.c for as.character(<logical>) in R:
? ? > 
? ? > do_asatomic
? ? > ascommon
? ? > coerceVector
? ? > coerceToString
? ? > StringFromLogical (for each element)
? ? > 
? ? > The definition of 'StringFromLogical' in coerce.c :
? ? > 
? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
? ? > {
? ? >? ? int w;
? ? >? ? formatLogical(&x, 1, &w);
? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
? ? >? ? else return mkChar(EncodeLogical(x, w));
? ? > }
? ? > 
? ? > The definition of 'EncodeLogical' in printutils.c :
? ? > 
? ? > const char *EncodeLogical(int x, int w)
? ? > {
? ? >? ? static char buff[NB];
? ? >? ? if(x == NA_LOGICAL) snprintf(buff, NB, "%*s", min(w, (NB-1)), CHAR(R_print.na_string));
? ? >? ? else if(x) snprintf(buff, NB, "%*s", min(w, (NB-1)), "TRUE");
? ? >? ? else snprintf(buff, NB, "%*s", min(w, (NB-1)), "FALSE");
? ? >? ? buff[NB-1] = '\0';
? ? >? ? return buff;
? ? > }
? ? > 
? ? > > L <- sample(c(TRUE, FALSE), 10^7, replace = TRUE)
? ? > > system.time(as.character(L))
? ? >? ? user? system elapsed
? ? >? ? 2.69? ? 0.02? ? 2.73
? ? > > system.time(c("FALSE", "TRUE")[L+1])
? ? >? ? user? system elapsed
? ? >? ? 0.15? ? 0.04? ? 0.20
? ? > > system.time(c("FALSE", "TRUE")[L+1L])
? ? >? ? user? system elapsed
? ? >? ? 0.08? ? 0.05? ? 0.13
? ? > > L <- rep(NA, 10^7)
? ? > > system.time(as.character(L))
? ? >? ? user? system elapsed
? ? >? ? 0.11? ? 0.00? ? 0.11
? ? > > system.time(c("FALSE", "TRUE")[L+1])
? ? >? ? user? system elapsed
? ? >? ? 0.16? ? 0.06? ? 0.22
? ? > > system.time(c("FALSE", "TRUE")[L+1L])
? ? >? ? user? system elapsed
? ? >? ? 0.09? ? 0.03? ? 0.12
? ? > 
? ? > `as.character` of a logical vector that is all NA is fast enough. 
? ? > It appears that the call to 'formatLogical' inside > the C function
? ? > 'StringFromLogical' does not introduce much? ? > slowdown. 


? ? > I found that using string literal inside the C function 'StringFromLogical', by replacing
? ? > EncodeLogical(x, w)
? ? > with
? ? > x ? "TRUE" : "FALSE"
? ? > (and the call to 'formatLogical' is not needed anymore), make it faster.

indeed! ... and we also notice that the 'w' argument is neither
needed anymore, and that makes sense: At this point when you
know you have a an R logical value there are only three
possibilities and no reason ever to warn about the conversion.

? ? > Alternatively, 
or in addition !


? ? > "fast path" could be introduced in 'EncodeLogical', potentially also benefits format() in R. 
? ? > For example, without replacing existing code, the following fragment could be inserted.
? ? > 
? ? >? ? if(x == NA_LOGICAL) {if(w == R_print.na_width) return CHAR(R_print.na_string);}
? ? >? ? else if(x) {if(w == 4) return "TRUE";}
? ? >? ? else {if(w == 5) return "FALSE";}
? ? > 
? ? > However, with either of them, c("FALSE", "TRUE")[L+1L] is still faster than as.character(L) .
? ? > 
? ? > Precomputing or caching possible results of the C function 'StringFromLogical' allows as.character(L) to be as fast as c("FALSE", "TRUE")[L+1L] in R. For example, 'StringFromLogical' could be changed to
? ? > 
? ? > attribute_hidden SEXP StringFromLogical(int x, int *warn)
? ? > {
? ? >? ? static SEXP TrueCh, FalseCh;
? ? >? ? if (x == NA_LOGICAL) return NA_STRING;
? ? >? ? else if (x) return TrueCh ? TrueCh : (TrueCh = mkChar("TRUE"));
? ? >? ? else return FalseCh ? FalseCh : (FalseCh = mkChar("FALSE"));

? ? > }

Indeed, and something along this line (storing the other two constant strings) was also 
my thought when seeing the
? mkChar(x ? "TRUE" : "FALSE)
you implicitly proposed above.

I'm looking into applying both speedups;
thank you very much, Suharto!

Martin


--
Martin Maechler
ETH Zurich? and? R Core team


From btyner @end|ng |rom gm@||@com  Sun Apr 13 17:07:28 2025
From: btyner @end|ng |rom gm@||@com (Benjamin Tyner)
Date: Sun, 13 Apr 2025 11:07:28 -0400
Subject: [Rd] should the top of doc/NEWS.3 mention doc/NEWS.Rd ?
Message-ID: <2ba6efec-a637-4b1f-9837-63e647f52860@gmail.com>

Greetings,

As of r80088, at the top of doc/NEWS.3 file it says:

> LATER NEWS:
>
> ? ? News for R 4.x.y can be found in HTML format at doc/html/NEWS.html,
> ??? and in text format in file NEWS in the doc directory.
However as far as I can tell, neither NEWS nor NEWS.html exists in the R 
source. Should doc/NEWS.3 be amended to point to doc/NEWS.Rd instead?

Regards

Ben


From murdoch@dunc@n @end|ng |rom gm@||@com  Sun Apr 13 18:32:22 2025
From: murdoch@dunc@n @end|ng |rom gm@||@com (Duncan Murdoch)
Date: Sun, 13 Apr 2025 12:32:22 -0400
Subject: [Rd] should the top of doc/NEWS.3 mention doc/NEWS.Rd ?
In-Reply-To: <2ba6efec-a637-4b1f-9837-63e647f52860@gmail.com>
References: <2ba6efec-a637-4b1f-9837-63e647f52860@gmail.com>
Message-ID: <163407ae-795c-4dba-bd71-25e444969216@gmail.com>

On 2025-04-13 11:07 a.m., Benjamin Tyner wrote:
> Greetings,
> 
> As of r80088, at the top of doc/NEWS.3 file it says:
> 
>> LATER NEWS:
>>
>>  ? ? News for R 4.x.y can be found in HTML format at doc/html/NEWS.html,
>>  ??? and in text format in file NEWS in the doc directory.
> However as far as I can tell, neither NEWS nor NEWS.html exists in the R
> source. Should doc/NEWS.3 be amended to point to doc/NEWS.Rd instead?

I think that message is intended to be read when you are reading the 
page in an installed version of R.  If you run help.start(), you'll see 
those files.

However, depending on options when you installed R, you may or may not 
actually have static copies of them installed.  The help server in R may 
generate them on the fly.

Duncan Murdoch


From btyner @end|ng |rom gm@||@com  Sun Apr 13 18:52:47 2025
From: btyner @end|ng |rom gm@||@com (Benjamin Tyner)
Date: Sun, 13 Apr 2025 12:52:47 -0400
Subject: [Rd] should the top of doc/NEWS.3 mention doc/NEWS.Rd ?
In-Reply-To: <163407ae-795c-4dba-bd71-25e444969216@gmail.com>
References: <2ba6efec-a637-4b1f-9837-63e647f52860@gmail.com>
 <163407ae-795c-4dba-bd71-25e444969216@gmail.com>
Message-ID: <6448c0e7-e1be-41f5-b4fb-7d4da42aaf18@gmail.com>


On 4/13/25 12:32, Duncan Murdoch wrote:
> On 2025-04-13 11:07 a.m., Benjamin Tyner wrote:
>> Greetings,
>>
>> As of r80088, at the top of doc/NEWS.3 file it says:
>>
>>> LATER NEWS:
>>>
>>> ?? ? News for R 4.x.y can be found in HTML format at 
>>> doc/html/NEWS.html,
>>> ???? and in text format in file NEWS in the doc directory.
>> However as far as I can tell, neither NEWS nor NEWS.html exists in the R
>> source. Should doc/NEWS.3 be amended to point to doc/NEWS.Rd instead?
>
> I think that message is intended to be read when you are reading the 
> page in an installed version of R.? If you run help.start(), you'll 
> see those files.
>
> However, depending on options when you installed R, you may or may not 
> actually have static copies of them installed.? The help server in R 
> may generate them on the fly.
>
> Duncan Murdoch
>
Makes sense; thank you Duncan!


From pd@|gd @end|ng |rom gm@||@com  Sun Apr 13 19:34:54 2025
From: pd@|gd @end|ng |rom gm@||@com (peter dalgaard)
Date: Sun, 13 Apr 2025 19:34:54 +0200
Subject: [Rd] should the top of doc/NEWS.3 mention doc/NEWS.Rd ?
In-Reply-To: <163407ae-795c-4dba-bd71-25e444969216@gmail.com>
References: <2ba6efec-a637-4b1f-9837-63e647f52860@gmail.com>
 <163407ae-795c-4dba-bd71-25e444969216@gmail.com>
Message-ID: <9B68583D-B97A-4744-9924-DEF117FA4405@gmail.com>

Also, the files do exist in the build directory after R has been built. 

I suppose that we could copy them into the sources for the distribution, but generically, it is bad luck for tarballs to include both sources and build results because it confuses the Makefile dependencies (& we have plenty of scars from keeping the gram*.y/gram*.c files consistent.)

-pd

> On 13 Apr 2025, at 18.32, Duncan Murdoch <murdoch.duncan at gmail.com> wrote:
> 
> On 2025-04-13 11:07 a.m., Benjamin Tyner wrote:
>> Greetings,
>> As of r80088, at the top of doc/NEWS.3 file it says:
>>> LATER NEWS:
>>> 
>>>   ? News for R 4.x.y can be found in HTML format at doc/html/NEWS.html,
>>>     and in text format in file NEWS in the doc directory.
>> However as far as I can tell, neither NEWS nor NEWS.html exists in the R
>> source. Should doc/NEWS.3 be amended to point to doc/NEWS.Rd instead?
> 
> I think that message is intended to be read when you are reading the page in an installed version of R. If you run help.start(), you'll see those files.
> 
> However, depending on options when you installed R, you may or may not actually have static copies of them installed.  The help server in R may generate them on the fly.
> 
> Duncan Murdoch
> 
> ______________________________________________
> R-devel at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-devel


-- 
Peter Dalgaard, Professor,
Center for Statistics, Copenhagen Business SchoolSolbjerg Plads 3, 2000 Frederiksberg, Denmark
Phone: (+45)38153501
Office: A 4.23
Email: pd.mes at cbs.dk  Priv: PDalgd at gmail.com


