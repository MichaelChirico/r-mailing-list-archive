From tonytonov @end|ng |rom gm@||@com  Wed Oct  9 14:26:08 2019
From: tonytonov @end|ng |rom gm@||@com (Anton Antonov)
Date: Wed, 9 Oct 2019 14:26:08 +0200
Subject: [R-SIG-Finance] R in Finance 2020
Message-ID: <00ab01d57e9c$bb145ed0$313d1c70$@gmail.com>

Dear list,

 

I was wondering if you have any news about the R/Finance 2020. I?ve been searching any mentions of the event, but no luck so far.

 

Best regards,

Anton Antonov, PhD

Lead Quantitative Analyst, dxFeed Solutions DE GmbH

 


	[[alternative HTML version deleted]]


From br|@n @end|ng |rom br@verock@com  Wed Oct  9 16:06:33 2019
From: br|@n @end|ng |rom br@verock@com (Brian G. Peterson)
Date: Wed, 09 Oct 2019 09:06:33 -0500
Subject: [R-SIG-Finance] R in Finance 2020
In-Reply-To: <00ab01d57e9c$bb145ed0$313d1c70$@gmail.com>
References: <00ab01d57e9c$bb145ed0$313d1c70$@gmail.com>
Message-ID: <2493c9369f0a9a659177df457353b28b25cdadd1.camel@braverock.com>

R/Finance 2020 is currently scheduled for June 5-6, 2020

As usual, we expect that it will be held on the UIC campus in Chicago,
IL, USA.

Jeff Ryan is currently working on a new website framework, and we hope
to launch the new website and the Call for Presentations 'soon'.

Regards,

Brian

On Wed, 2019-10-09 at 14:26 +0200, Anton Antonov wrote:
> Dear list,
> 
> I was wondering if you have any news about the R/Finance 2020. I?ve
> been searching any mentions of the event, but no luck so far. 
> 
> Best regards,
> 
> Anton Antonov, PhD
> Lead Quantitative Analyst, dxFeed Solutions DE GmbH


From bkor@|p @end|ng |rom hotm@||@com  Mon Oct 28 21:00:46 2019
From: bkor@|p @end|ng |rom hotm@||@com (Berk Koralp)
Date: Mon, 28 Oct 2019 20:00:46 +0000
Subject: [R-SIG-Finance] rmgarch DCC likelihood
Message-ID: <AM6P191MB05183E02589725EBA81974DBA6660@AM6P191MB0518.EURP191.PROD.OUTLOOK.COM>

Hi,



When Tracing is on, the iteration steps show a different function value than the full log-likelihood function.

So full log-likelihood doesn?t get sent to the optimizer here.



The correlation component -0.5*[log(det(Rt))+(Z*(inv(Rt)*trans(Z)))] gets close to this traced function value but it seems to be always slightly off.



Where`s this difference coming from?



I used the optimal parameters produced by rugarch and rmgarch to replicate the model myself, and obtained the exact same individual likelihoods , and hence the same llh sum.

But removing components and leaving only correlation part doesn?t seem to match the traced function value.



Any help would be greatly appreciated.



Best,



Berk.





Specs are as follows:


rX <- data.frame(rDAT1,rDAT2)

names(rX)[1] <- "rDAT1"

names(rX)[2] <- "rDAT2"

ug_spec = ugarchspec()

ug_spec <- ugarchspec(mean.model=list(armaOrder=c(0,0),include.mean = FALSE))

ugfit1 = ugarchfit(spec = ug_spec, data = rDAT1)

ugfit2 = ugarchfit(spec = ug_spec, data = rDAT2)

uspec.n = multispec(replicate(2, ugarchspec(mean.model = list(armaOrder = c(0,0),include.mean = FALSE))))

multf = multifit(uspec.n, rX)

spec1 = dccspec(uspec = uspec.n, dccOrder = c(1, 1), distribution = 'mvnorm')

fit1 = dccfit(spec1, data = rX, fit.control = list(eval.se = TRUE),solver.control= list(trace=TRUE), fit = multf)







	[[alternative HTML version deleted]]


From @|ex|o@ @end|ng |rom 4d@c@pe@com  Tue Oct 29 05:22:55 2019
From: @|ex|o@ @end|ng |rom 4d@c@pe@com (alexios galanos)
Date: Mon, 28 Oct 2019 21:22:55 -0700
Subject: [R-SIG-Finance] rmgarch DCC likelihood
In-Reply-To: <AM6P191MB05183E02589725EBA81974DBA6660@AM6P191MB0518.EURP191.PROD.OUTLOOK.COM>
References: <AM6P191MB05183E02589725EBA81974DBA6660@AM6P191MB0518.EURP191.PROD.OUTLOOK.COM>
Message-ID: <a2a8b93c-2bd7-877d-4e8f-e0d034c93a38@4dscape.com>

Not sure I've understood you correctly. Here is what a reproducible 
example would look like:
##################
library(rmgarch)
data("dji30ret")
rX <- as.xts(dji30ret[,1:2])
colnames(rX)[1] <- "rDAT1"
colnames(rX)[2] <- "rDAT2"
ug_spec = ugarchspec()
ug_spec <- ugarchspec(mean.model=list(armaOrder=c(0,0),include.mean = 
FALSE))

ugfit1 = ugarchfit(spec = ug_spec, data = rX[,1])
ugfit2 = ugarchfit(spec = ug_spec, data = rX[,2])

uspec.n = multispec(replicate(2, ugarchspec(mean.model = list(armaOrder 
= c(0,0),include.mean = FALSE))))

# using scale=1 as in the internal call of multifit
multf = multifit(uspec.n, rX, fit.control=list(scale=1))
spec1 = dccspec(uspec = uspec.n, dccOrder = c(1, 1), distribution = 
'mvnorm')

rbind(likelihood(multf), cbind(likelihood(ugfit1), likelihood(ugfit2)))

          [,1]     [,2]
[1,] 13802.48 13959.91
[2,] 13802.48 13959.91

fit1 = dccfit(spec1, data = rX, fit.control = list(eval.se = 
TRUE),solver.control= list(trace=TRUE), fit = multf)

fit2 = dccfit(spec1, data = rX, fit.control = list(eval.se = 
TRUE),solver.control= list(trace=TRUE))
##################

Are you saying that these two are different?

 > cbind(likelihood(fit1),likelihood(fit2))
          [,1]     [,2]
[1,] 28153.17 28153.17


As to the "full log-likelihood" function, again I am unclear what it is 
you are stating. The function (log likelihood) to be optimized excludes 
constant values which are only included at the end to compose the full 
log likelihood.


Alexios

On 10/28/19 1:00 PM, Berk Koralp wrote:
> Hi,
> 
> 
> 
> When Tracing is on, the iteration steps show a different function value than the full log-likelihood function.
> 
> So full log-likelihood doesn?t get sent to the optimizer here.
> 
> 
> 
> The correlation component -0.5*[log(det(Rt))+(Z*(inv(Rt)*trans(Z)))] gets close to this traced function value but it seems to be always slightly off.
> 
> 
> 
> Where`s this difference coming from?
> 
> 
> 
> I used the optimal parameters produced by rugarch and rmgarch to replicate the model myself, and obtained the exact same individual likelihoods , and hence the same llh sum.
> 
> But removing components and leaving only correlation part doesn?t seem to match the traced function value.
> 
> 
> 
> Any help would be greatly appreciated.
> 
> 
> 
> Best,
> 
> 
> 
> Berk.
> 
> 
> 
> 
> 
> Specs are as follows:
> 
> 
> rX <- data.frame(rDAT1,rDAT2)
> 
> names(rX)[1] <- "rDAT1"
> 
> names(rX)[2] <- "rDAT2"
> 
> ug_spec = ugarchspec()
> 
> ug_spec <- ugarchspec(mean.model=list(armaOrder=c(0,0),include.mean = FALSE))
> 
> ugfit1 = ugarchfit(spec = ug_spec, data = rDAT1)
> 
> ugfit2 = ugarchfit(spec = ug_spec, data = rDAT2)
> 
> uspec.n = multispec(replicate(2, ugarchspec(mean.model = list(armaOrder = c(0,0),include.mean = FALSE))))
> 
> multf = multifit(uspec.n, rX)
> 
> spec1 = dccspec(uspec = uspec.n, dccOrder = c(1, 1), distribution = 'mvnorm')
> 
> fit1 = dccfit(spec1, data = rX, fit.control = list(eval.se = TRUE),solver.control= list(trace=TRUE), fit = multf)
> 
> 
> 
> 
> 
> 
> 
> 	[[alternative HTML version deleted]]
> 
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.
>


From @@chm|d1 @end|ng |rom @teven@@edu  Fri Nov 22 15:53:32 2019
From: @@chm|d1 @end|ng |rom @teven@@edu (Alec Schmidt)
Date: Fri, 22 Nov 2019 14:53:32 +0000
Subject: [R-SIG-Finance] GARCH for random time grid
Message-ID: <CH2PR10MB39731DEA018548AEFA000B1684490@CH2PR10MB3973.namprd10.prod.outlook.com>

I'd like to calculate GARCH-type volatility on a random grid using transaction prices and greatly appreciate pointers to the relevant hitherto research and software in free domain.
Thanks, Alec

	[[alternative HTML version deleted]]


From er|cjberger @end|ng |rom gm@||@com  Sat Nov 23 19:35:57 2019
From: er|cjberger @end|ng |rom gm@||@com (Eric Berger)
Date: Sat, 23 Nov 2019 20:35:57 +0200
Subject: [R-SIG-Finance] GARCH for random time grid
In-Reply-To: <CH2PR10MB39731DEA018548AEFA000B1684490@CH2PR10MB3973.namprd10.prod.outlook.com>
References: <CH2PR10MB39731DEA018548AEFA000B1684490@CH2PR10MB3973.namprd10.prod.outlook.com>
Message-ID: <CAGgJW75ghOO7i8cU3j-tBZXGZGaC7EfngZ7u4Jy5ySSLUYGYRA@mail.gmail.com>

Hi Alec,
Check out the CRAN task views for
a) Empirical Finance https://cran.r-project.org/web/views/Finance.html
and
b) Time Series: https://cran.r-project.org/web/views/TimeSeries.html

In each of the above if you search for 'garch' (or GARCH) you will
find many pointers to what is available on CRAN, the central
repository for R packages.

HTH,
Eric

On Fri, Nov 22, 2019 at 4:54 PM Alec Schmidt <aschmid1 at stevens.edu> wrote:
>
> I'd like to calculate GARCH-type volatility on a random grid using transaction prices and greatly appreciate pointers to the relevant hitherto research and software in free domain.
> Thanks, Alec
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.


From j@@onh@rt4 @end|ng |rom |c|oud@com  Sun Nov 24 05:19:08 2019
From: j@@onh@rt4 @end|ng |rom |c|oud@com (Jason Hart)
Date: Sat, 23 Nov 2019 23:19:08 -0500
Subject: [R-SIG-Finance] GARCH for random time grid
In-Reply-To: <CAGgJW75ghOO7i8cU3j-tBZXGZGaC7EfngZ7u4Jy5ySSLUYGYRA@mail.gmail.com>
References: <CAGgJW75ghOO7i8cU3j-tBZXGZGaC7EfngZ7u4Jy5ySSLUYGYRA@mail.gmail.com>
Message-ID: <B2C44111-0D73-433B-AA4D-3C0B1843BBD5@icloud.com>

Thanks for sharing Eric.  A lot of neat packages in here that I wasn?t aware of

Sent from my iPhone

> On Nov 23, 2019, at 1:36 PM, Eric Berger <ericjberger at gmail.com> wrote:
> 
> ?Hi Alec,
> Check out the CRAN task views for
> a) Empirical Finance https://cran.r-project.org/web/views/Finance.html
> and
> b) Time Series: https://cran.r-project.org/web/views/TimeSeries.html
> 
> In each of the above if you search for 'garch' (or GARCH) you will
> find many pointers to what is available on CRAN, the central
> repository for R packages.
> 
> HTH,
> Eric
> 
>> On Fri, Nov 22, 2019 at 4:54 PM Alec Schmidt <aschmid1 at stevens.edu> wrote:
>> 
>> I'd like to calculate GARCH-type volatility on a random grid using transaction prices and greatly appreciate pointers to the relevant hitherto research and software in free domain.
>> Thanks, Alec
>> 
>>        [[alternative HTML version deleted]]
>> 
>> _______________________________________________
>> R-SIG-Finance at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> -- Subscriber-posting only. If you want to post, subscribe first.
>> -- Also note that this is not the r-help list where general R questions should go.
> 
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.


From ||y@@k|pn|@ @end|ng |rom gm@||@com  Tue Dec  3 20:55:35 2019
From: ||y@@k|pn|@ @end|ng |rom gm@||@com (Ilya Kipnis)
Date: Tue, 3 Dec 2019 14:55:35 -0500
Subject: [R-SIG-Finance] How to lag Return.portfolio a day?
Message-ID: <CA+oJuEEfc3dGeBUMr6a9B1wv5qp=6LN0UTNnwPuiWMAP1TLfcQ@mail.gmail.com>

So, quick question in case this is already implemented in Return.portfolio,
but this is something that's been bugging me for a while now.

Say you're backtesting a momentum strategy, with your rebalance dates being
monthly endpoints. While in a perfect world, you'd get your closing data at
the close and have time to rebalance the strategy right then and there, in
the real world, you might not have closing data until the next morning--or
you're a large fund that takes a day to move capital into position, or
whatever other real-world constraint.

For instance, here's an obligatory minimum reproducible example:

posRets <- rep(.003, 63)
posRets <- cbind(posRets, 0)
posRets <- xts(posRets, order.by=as.Date(c(1:63)))
wts <- rbind(c(0,1), c(1,0), c(0,1), c(1,0))
tmp <- endpoints(posRets)
tmp[1] <- 1
wts <- xts(wts, order.by=index(posRets)[tmp])
out <- Return.portfolio(R = posRets, weights = wts)

Now, given that the weights are allocated at the end of every month, if we
have a 1-day lag to account for execution, I'd expect the first day of each
new month to be identical to the day before it. That is, if the previous
month had a zero return because it was invested in the second asset, then
the first day of the new month should also have a zero return, and vice
versa.

This is not the case.

[image: image.png]

Is there a lag setting in Return.portfolio to account for this, or should I
write the function myself?

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20191203/8093c9e7/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 11622 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20191203/8093c9e7/attachment.png>

