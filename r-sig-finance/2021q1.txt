From p@||e@ch|tz @end|ng |rom out|ook@com  Wed Feb  3 18:58:09 2021
From: p@||e@ch|tz @end|ng |rom out|ook@com (Johan Palleschitz)
Date: Wed, 3 Feb 2021 17:58:09 +0000
Subject: [R-SIG-Finance] PnL data - PerformanceAnalytics /
Message-ID: <DB8PR01MB61862AF86063278E6D7BD4DFB7B49@DB8PR01MB6186.eurprd01.prod.exchangelabs.com>

Good evening all,

I have PnL data in EUR that i want use for ES, VaR calculationw/reports, as described in the documentation.

I have read the PerformanceAnalytics guideline, searched on SO but i do not find a solution that works for me. 

Any suggestion or indication where i should look would be very appreciated!!

Have a nice evening!!
Regards
Johan


From br|@n @end|ng |rom br@verock@com  Fri Feb  5 02:58:47 2021
From: br|@n @end|ng |rom br@verock@com (Brian G. Peterson)
Date: Thu, 04 Feb 2021 19:58:47 -0600
Subject: [R-SIG-Finance] PnL data - PerformanceAnalytics /
In-Reply-To: <DB8PR01MB61862AF86063278E6D7BD4DFB7B49@DB8PR01MB6186.eurprd01.prod.exchangelabs.com>
References: <DB8PR01MB61862AF86063278E6D7BD4DFB7B49@DB8PR01MB6186.eurprd01.prod.exchangelabs.com>
Message-ID: <c43486bdc001ccc16e4a47001ed9ae6c3a6ff413.camel@braverock.com>

VaR/ES should work with a distribution of cash P&L as well as a
distribution of returns.

Can you present an example that isn't behaving as you expect it to?

Regards,

Brian?

On Wed, 2021-02-03 at 17:58 +0000, Johan Palleschitz wrote:
> Good evening all,
> 
> I have PnL data in EUR that i want use for ES, VaR
> calculationw/reports, as described in the documentation.
> 
> I have read the PerformanceAnalytics guideline, searched on SO but i
> do not find a solution that works for me. 
> 
> Any suggestion or indication where i should look would be very
> appreciated!!
> 
> Have a nice evening!!
> Regards
> Johan
> 
> _______________________________________________
> R-SIG-Finance at r-project.org?mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R
> questions should go.
> 

	[[alternative HTML version deleted]]


From p@||e@ch|tz @end|ng |rom out|ook@com  Sun Feb  7 18:10:30 2021
From: p@||e@ch|tz @end|ng |rom out|ook@com (Johan Palleschitz)
Date: Sun, 7 Feb 2021 17:10:30 +0000
Subject: [R-SIG-Finance] PnL data - PerformanceAnalytics /
In-Reply-To: <c43486bdc001ccc16e4a47001ed9ae6c3a6ff413.camel@braverock.com>
References: <DB8PR01MB61862AF86063278E6D7BD4DFB7B49@DB8PR01MB6186.eurprd01.prod.exchangelabs.com>,
 <c43486bdc001ccc16e4a47001ed9ae6c3a6ff413.camel@braverock.com>
Message-ID: <DB8PR01MB61862B777A069A3B55E06599B7B09@DB8PR01MB6186.eurprd01.prod.exchangelabs.com>

Good afternoon Brian and thank you for getting back to me, much appreciated!

I have attached the sample data below.

data as:
"xts" "zoo"

Weights calculated as
df_w <- df[,1:3]/rowSums(df[,1:3])

> df
Date
FX
 Shares
 Commodities
2020-01-02
           892
         8,609
       17,864
2020-01-03
       9,971
       10,454
         3,478
2020-01-04
       9,446
       19,453
       40,373
2020-01-05
-      7,362
       15,760
       35,030
2020-01-06
-      5,006
       13,780
-        1,786
2020-01-07
-      3,760
            757
-      34,151
2020-01-08
-      3,739
         6,265
-      41,606
2020-01-09
-      5,589
       22,874
-      23,932
2020-01-10
-      8,482
       18,005
       10,922
2020-01-11
-      4,884
         2,465
       25,374
2020-01-12
-      1,140
       16,825
       36,941
2020-01-13
-      4,341
         1,413
       17,187
2020-01-14
-         746
       18,655
         7,193
2020-01-15
-         497
-      20,688
-      30,418
2020-01-16
-      9,872
-        9,579
         6,703
2020-01-17
       6,011
-      11,616
       16,286
2020-01-18
       4,023
-        8,166
       45,782
2020-01-19
       5,446
-      23,821
       26,343
2020-01-20
       1,173
-        3,731
         1,126
2020-01-21
       3,858
-      17,266
       27,975
2020-01-22
       8,586
-        9,468
       38,842
2020-01-23
           467
       11,088
       19,451
2020-01-24
-      9,049
       14,817
         2,098
2020-01-25
-      2,324
       23,952
       35,510
2020-01-26
-      6,534
         2,902
-      20,131
2020-01-27
-      1,641
         7,147
-        6,921
2020-01-28
       3,974
       13,986
-      24,161

I have tested some functions from PerformanceAnalytics

1.     table.Arbitrary(df,
                metrics=c("VaR","mean"),
                metricsNames=c("modVaR","mean"),
                p=.95)

                          FX    Shares Commodities
Average Return     -782.1784  4624.844    8569.309
Standard Deviation 5705.4913 13602.512   24924.682

Ok

2.     table.Arbitrary(df,
                metrics=c("VaR", "ES"),
                metricsNames=c("Modified VaR","Modified Expected Shortfall"))

VaR calculation produces unreliable result (risk over 100%) for column: 1 : 9603.44809651169
VaR calculation produces unreliable result (risk over 100%) for column: 1 : 19496.0283854767
VaR calculation produces unreliable result (risk over 100%) for column: 1 : 34970.4906301062,
etc.
              FX   Shares Commodities
modVaR   -1.0000   -1.000      -1.000
mean   -782.1784 4624.844    8569.309

modVaR does not make sense. (well, the values are there, after "VaR calculation produces unreliable result (risk over 100%) for column: 1 : "
Mean works fine.

3.     table.Distributions, works fine.

4.     table.DownsideRisk, give similar error as table.Arbitrary does above for VaR and ES.

VaR calculation produces unreliable result (risk over 100%) for column: 1 : 8879.0654029
ES calculation produces unreliable result (risk over 100%) for column: 1 : 9460.7561265, .... etc

                                    FX    Shares   Commodities
Historical VaR (95%)            -1.000    -1.000 -1.000000e+00
Historical ES (95%)             -1.000    -1.000 -1.000000e+00
Modified VaR (95%)              -1.000    -1.000 -1.000000e+00
Modified ES (95%)               -1.000    -1.000 -1.000000e+00

5. table.RollingPeriods and table.Stats, works fine.

6. chart.Histogram does not work, same error as above.

7. Expected Shortfall

> # first do normal ES calc
> ES(df, p=.95, method="historical")
ES calculation produces unreliable result (risk over 100%) for column: 1 : 9460.7561265
ES calculation produces unreliable result (risk over 100%) for column: 2 : 22254.650985
ES calculation produces unreliable result (risk over 100%) for column: 3 : 37878.379905
   FX Shares Commodities
ES -1     -1          -1

> # now use modified Cornish Fisher calc to take non-normal distribution into account
> ES(df, p=.95, method="modified")
ES calculation produces unreliable result (risk over 100%) for column: 1 : 10844.7485269339
ES calculation produces unreliable result (risk over 100%) for column: 2 : 22667.3644584819
ES calculation produces unreliable result (risk over 100%) for column: 3 : 40970.5338686356
   FX Shares Commodities
ES -1     -1          -1

When i use weights = df_w (df_w <- df[,1:3]/rowSums(df[,1:3])) i get the following error message.

> ES(df, portfolio_method="component", weights = df_w)
Error in ES(df, portfolio_method = "component", weights = df_w) :
  number of items in weights not equal to number of columns in R

So my queation is as follows:

1. Can i use the following chart.* table.* with my data? - chart.Histogram, chart.Boxplot(df), chart.QQPlot(df), chart.VaRSensitivity(df), chart.BarVaR, ...
2. Do i calculate the weights (df_w) correctly? it does not seem to be the case. SHould i even include it?

I would like to be able to visualise boxplots, Histograms with methods, VaRSensitivity and tables/stats per Assetclass and total.
Without being able to understand how to solve this, there seems to be some tweek i miss at an initial state that might solve the "ES / VaR calculation produces unreliable result (risk over 100%) for column: 1(n) "

Any guidance / hints would be greaT
Wish you all a nice start to the week.

Best
Johan

From: Brian G. Peterson<mailto:brian at braverock.com>
Sent: den 5 februari 2021 02:58
To: Johan Palleschitz<mailto:palleschitz at outlook.com>; r-sig-finance at r-project.org<mailto:r-sig-finance at r-project.org>
Subject: Re: [R-SIG-Finance] PnL data - PerformanceAnalytics /

VaR/ES should work with a distribution of cash P&L as well as a distribution of returns.

Can you present an example that isn't behaving as you expect it to?

Regards,

Brian

On Wed, 2021-02-03 at 17:58 +0000, Johan Palleschitz wrote:
Good evening all,

I have PnL data in EUR that i want use for ES, VaR calculationw/reports, as described in the documentation.

I have read the PerformanceAnalytics guideline, searched on SO but i do not find a solution that works for me.

Any suggestion or indication where i should look would be very appreciated!!

Have a nice evening!!
Regards
Johan

_______________________________________________
R-SIG-Finance at r-project.org<mailto:R-SIG-Finance at r-project.org> mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance<https://emea01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fstat.ethz.ch%2Fmailman%2Flistinfo%2Fr-sig-finance&data=04%7C01%7C%7C0c54da22c98c449a18c408d8c979972a%7C84df9e7fe9f640afb435aaaaaaaaaaaa%7C1%7C0%7C637480871365848685%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=BN3HMvLaReZhzErKv8hXDkQDzWAd1ZhcXmZUPlgQzd0%3D&reserved=0>
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions should go.



	[[alternative HTML version deleted]]


From @r@m@nd@n|@ @end|ng |rom gm@||@com  Tue Feb  9 14:35:55 2021
From: @r@m@nd@n|@ @end|ng |rom gm@||@com (Argyrios Ramandanis)
Date: Tue, 9 Feb 2021 14:35:55 +0100
Subject: [R-SIG-Finance] rugarch fitting Duan's 1995 model
Message-ID: <CAOWOnXK2ecL+60NN5zEL4g5f6hJeAYuEDn2V85XczE0USnNGrQ@mail.gmail.com>

Hello!

I am trying to fit, using rugarch library, the Duan's 1995 model for stock
option pricing.

Duan's model includes the mean , garch in mean, their special GARCH
specification and finally one more factor, which is 0.5* variance. More
specifically it is:

rt = r + ?*sigma - 0.5 * variance + et*sigma

My problem is that I cannot find how I can include the -0.5*variance in the
mean model. ?*sigma I can use the archm function but not this extra item.

Do you know how I can force ugarchspec to add this? Also in general, how
can I add extra endogenous variables other than the standard ones?

One more question, the GARCH model of Duan's paper looks like the
family-GARCH model where ?=?=2, but the family-GARCH is using standardized
residuals where Duan is using the raw residuals. Can this be changed as
well?

	[[alternative HTML version deleted]]


From ezequ|e|@@nt@r @end|ng |rom gm@||@com  Wed Feb 10 13:59:02 2021
From: ezequ|e|@@nt@r @end|ng |rom gm@||@com (Ezequiel Antar)
Date: Wed, 10 Feb 2021 12:59:02 +0000
Subject: [R-SIG-Finance] Issues fitting basic models with rmgarch
Message-ID: <CAGyYUSonUA-y3yEKA5rxSfMLBRH-7K+C5iTzs70Z7tdrA6yvXw@mail.gmail.com>

Hello. Any help with the issues below would be much appreciated!


# There are two main issues with rmgarch::cgarchfit

# 1) I cannot reconcile the correlations and likelihood in some (basic)
cases

# 2) I cannot use a marginal model with no estimated parmeters (constant
vol, normal, and zero mean)



rm(list = ls())

library(rmgarch)

library(mvtnorm)



data(dji30retw)

z.t <- dji30retw[, 1:2]



# 1) Cannot reconcile the correlations and likelihood: an example

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Univariate model: z = mu + sigma * N(0,1)

uspec.each <- ugarchspec(mean.model = list(armaOrder = c(0,0)),

                         variance.model = list(model = "iGARCH", garchOrder
= c(1,1)),

                         distribution.model = "norm",

                         fixed.pars = list(alpha1 = 0, omega = 0))



# Copula model: Gaussian copula, constant correlations

mspec <- cgarchspec(uspec = multispec(replicate(ncol(z.t), uspec.each)),

                    distribution.model = list(copula = "mvnorm",
time.varying = FALSE, transformation = "parametric"))



cgarch <- cgarchfit(spec = mspec, data = z.t)



# These two likelihoods should be the same, but they are not:

likelihood(cgarch) # 3767.693

sum(dmvnorm(z.t, mean = coef(cgarch, type = 'garch'), sigma =
rcov(cgarch)[,,1], log = TRUE)) # 3771.734



# These two correlations should be the same, but they are not:

rcor(cgarch)[1,2] # 0.4099081

cor(z.t)[1,2] # 0.4170385



# 2) Cannot use a marginal model with no estimated parmeters

# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

# Univariate model: z = 0 + sigma * N(0,1)

uspec.each <- ugarchspec(mean.model = list(armaOrder = c(0,0)),

                         variance.model = list(model = "iGARCH", garchOrder
= c(1,1)),

                         distribution.model = "norm",

                         fixed.pars = list(mu = 0, alpha1 = 0, omega = 0))



mspec <- cgarchspec(uspec = multispec(replicate(ncol(z.t), uspec.each)),

                    distribution.model = list(copula = "mvnorm",
time.varying = FALSE, transformation = "parametric"))



# Attempt 1:

# ~~~~~~~~~~

cgarch <- cgarchfit(spec = mspec, data = z.t)

# Error in UseMethod("convergence") :

#  no applicable method for 'convergence' applied to an object of class
"c('uGARCHfilter', 'GARCHfilter', 'rGARCH')"

# Note: the problem is that when no parameters are estimated, ugarchfit
(used by cgarchfit) returns an uGARCHfilter instead of uGARCHfit object



# Attempt 2: fit univariate models first, using fit.control = list(fixed.se =
TRUE), so that ugarchfit returns an uGARCHfit object

# ~~~~~~~~~~

mfit <- multifit(multispec = multispec(replicate(ncol(z.t), uspec.each)),
data = z.t, fit.control = list(fixed.se = TRUE))



cgarch <- cgarchfit(spec = mspec, data = z.t, fit = mfit)

# Error in array(x, c(length(x), 1L), if (!is.null(names(x)))
list(names(x),  :

#                                                                   'data'
must be of a vector type, was 'NULL'


<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
Virus-free.
www.avast.com
<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
<#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>

	[[alternative HTML version deleted]]


From ||y@@k|pn|@ @end|ng |rom gm@||@com  Sun Mar  7 21:22:16 2021
From: ||y@@k|pn|@ @end|ng |rom gm@||@com (Ilya Kipnis)
Date: Sun, 7 Mar 2021 15:22:16 -0500
Subject: [R-SIG-Finance] Question about the Ulcer Index calculation in
 PerformanceAnalytics
Message-ID: <CA+oJuEHeiE=v-GafNTV4K=JMyJatPQLcyeu516HF7AALDGikVQ@mail.gmail.com>

I'm working on porting over an interesting risk metric that I found out
about through a twitter exchange with the usual suspects (Adam Butler of
ReSolve, Wayne Himelsein) called the Serenity Ratio, found here:

https://www.keyquant.com/Download/GetFile?Filename=%5CPublications%5CKeyQuant_WhitePaper_APT_Part1.pdf

Now, I've run into an issue, namely with the calculation of the Ulcer Index:

Now, as I understand it, the Ulcer Index is the root-mean-square (read:
volatility, I.E. standard deviation) of drawdowns. However, when I check
the UlcerIndex function in R, it uses the DrawdownPeak function, which has
a different calculation than PerformanceAnalytics:::Drawdowns .

Furthermore, taking the standard deviation of *either*
PerformanceAnalytics:::Drawdowns *or* DrawdownPeak of returns yields a
different calculation than using the formal UlcerIndex function.

Here is my script. Can someone explain the choices made with the UlcerIndex
implementation in the package?

Sample script:

getSymbols('SPY', from = '1990-01-01')
spyRets <- na.omit(Return.calculate(Ad(SPY)))
compare <- cbind(PerformanceAnalytics:::Drawdowns(spyRets),
                 xts(DrawdownPeak(spyRets), order.by = index(spyRets)))
colnames(compare) <- c("PerfA:::Drawdowns", "DrawdownPeak")
plot(compare, legend.loc = 'bottomleft')
differentUIs <- c(StdDev(PerformanceAnalytics:::Drawdowns(spyRets)),
                  StdDev(DrawdownPeak(spyRets)),
                  UlcerIndex(spyRets))
names(differentUIs) <- c("StdDevDrawdowns", "StdDevDDPeak", "UlcerInex")

Outputs:

[image: image.png]
[image: image.png]

In the interest of replication (I.E. Python has none of these functions in
any library I know of), and for the correct calculation of other functions
dependent on the Ulcer Index (UPI, Serenity Ratio), can someone help me
resolve/understand the discrepancies here?

Thanks so much.

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/c483ac51/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 135986 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/c483ac51/attachment.png>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 4696 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/c483ac51/attachment-0001.png>

From er|cjberger @end|ng |rom gm@||@com  Mon Mar  8 02:26:56 2021
From: er|cjberger @end|ng |rom gm@||@com (Eric Berger)
Date: Sun, 7 Mar 2021 20:26:56 -0500
Subject: [R-SIG-Finance] Question about the Ulcer Index calculation in
 PerformanceAnalytics
In-Reply-To: <CA+oJuEHeiE=v-GafNTV4K=JMyJatPQLcyeu516HF7AALDGikVQ@mail.gmail.com>
References: <CA+oJuEHeiE=v-GafNTV4K=JMyJatPQLcyeu516HF7AALDGikVQ@mail.gmail.com>
Message-ID: <CAGgJW761_tKnOwH3Jp=UqfH+KkVzd+NuqCkoTOYCr0iH3eMbuQ@mail.gmail.com>

Hi Ilya,
You  write that UI is a std dev of something, but that is not how it is
defined.
To be a standard deviation, there would have to be a subtraction of a mean
somewhere, and that is not present. (Technically, UI is the square root of
a semivariance.)

I hope that helps,
Eric


On Sun, Mar 7, 2021 at 3:22 PM Ilya Kipnis <ilya.kipnis at gmail.com> wrote:

> I'm working on porting over an interesting risk metric that I found out
> about through a twitter exchange with the usual suspects (Adam Butler of
> ReSolve, Wayne Himelsein) called the Serenity Ratio, found here:
>
>
> https://www.keyquant.com/Download/GetFile?Filename=%5CPublications%5CKeyQuant_WhitePaper_APT_Part1.pdf
>
> Now, I've run into an issue, namely with the calculation of the Ulcer
> Index:
>
> Now, as I understand it, the Ulcer Index is the root-mean-square (read:
> volatility, I.E. standard deviation) of drawdowns. However, when I check
> the UlcerIndex function in R, it uses the DrawdownPeak function, which has
> a different calculation than PerformanceAnalytics:::Drawdowns .
>
> Furthermore, taking the standard deviation of *either*
> PerformanceAnalytics:::Drawdowns *or* DrawdownPeak of returns yields a
> different calculation than using the formal UlcerIndex function.
>
> Here is my script. Can someone explain the choices made with the
> UlcerIndex implementation in the package?
>
> Sample script:
>
> getSymbols('SPY', from = '1990-01-01')
> spyRets <- na.omit(Return.calculate(Ad(SPY)))
> compare <- cbind(PerformanceAnalytics:::Drawdowns(spyRets),
>                  xts(DrawdownPeak(spyRets), order.by = index(spyRets)))
> colnames(compare) <- c("PerfA:::Drawdowns", "DrawdownPeak")
> plot(compare, legend.loc = 'bottomleft')
> differentUIs <- c(StdDev(PerformanceAnalytics:::Drawdowns(spyRets)),
>                   StdDev(DrawdownPeak(spyRets)),
>                   UlcerIndex(spyRets))
> names(differentUIs) <- c("StdDevDrawdowns", "StdDevDDPeak", "UlcerInex")
>
> Outputs:
>
> [image: image.png]
> [image: image.png]
>
> In the interest of replication (I.E. Python has none of these functions in
> any library I know of), and for the correct calculation of other functions
> dependent on the Ulcer Index (UPI, Serenity Ratio), can someone help me
> resolve/understand the discrepancies here?
>
> Thanks so much.
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/6f180611/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 135986 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/6f180611/attachment.png>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 4696 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/6f180611/attachment-0001.png>

From ||y@@k|pn|@ @end|ng |rom gm@||@com  Mon Mar  8 05:22:11 2021
From: ||y@@k|pn|@ @end|ng |rom gm@||@com (Ilya Kipnis)
Date: Sun, 7 Mar 2021 23:22:11 -0500
Subject: [R-SIG-Finance] Question about the Ulcer Index calculation in
 PerformanceAnalytics
In-Reply-To: <CAGgJW761_tKnOwH3Jp=UqfH+KkVzd+NuqCkoTOYCr0iH3eMbuQ@mail.gmail.com>
References: <CA+oJuEHeiE=v-GafNTV4K=JMyJatPQLcyeu516HF7AALDGikVQ@mail.gmail.com>
 <CAGgJW761_tKnOwH3Jp=UqfH+KkVzd+NuqCkoTOYCr0iH3eMbuQ@mail.gmail.com>
Message-ID: <CA+oJuEGdpzjCkXhu8kW3va59mqpNQiUxnK2TZGyDdQEGvhMDqA@mail.gmail.com>

Eric,

Thanks for the clarification on that part. The one *other* part that has me
scratching my head, though, is the use of the DrawdownPeak function, which
doesn't have quite the exact same calculations as the usual drawdown curve
I'm accustomed to. Is there a reason for using this less common drawdown
trajectory calculation, as opposed to the original drawdown curve?

-Ilya

On Sun, Mar 7, 2021 at 8:27 PM Eric Berger <ericjberger at gmail.com> wrote:

> Hi Ilya,
> You  write that UI is a std dev of something, but that is not how it is
> defined.
> To be a standard deviation, there would have to be a subtraction of a mean
> somewhere, and that is not present. (Technically, UI is the square root of
> a semivariance.)
>
> I hope that helps,
> Eric
>
>
> On Sun, Mar 7, 2021 at 3:22 PM Ilya Kipnis <ilya.kipnis at gmail.com> wrote:
>
>> I'm working on porting over an interesting risk metric that I found out
>> about through a twitter exchange with the usual suspects (Adam Butler of
>> ReSolve, Wayne Himelsein) called the Serenity Ratio, found here:
>>
>>
>> https://www.keyquant.com/Download/GetFile?Filename=%5CPublications%5CKeyQuant_WhitePaper_APT_Part1.pdf
>>
>> Now, I've run into an issue, namely with the calculation of the Ulcer
>> Index:
>>
>> Now, as I understand it, the Ulcer Index is the root-mean-square (read:
>> volatility, I.E. standard deviation) of drawdowns. However, when I check
>> the UlcerIndex function in R, it uses the DrawdownPeak function, which has
>> a different calculation than PerformanceAnalytics:::Drawdowns .
>>
>> Furthermore, taking the standard deviation of *either*
>> PerformanceAnalytics:::Drawdowns *or* DrawdownPeak of returns yields a
>> different calculation than using the formal UlcerIndex function.
>>
>> Here is my script. Can someone explain the choices made with the
>> UlcerIndex implementation in the package?
>>
>> Sample script:
>>
>> getSymbols('SPY', from = '1990-01-01')
>> spyRets <- na.omit(Return.calculate(Ad(SPY)))
>> compare <- cbind(PerformanceAnalytics:::Drawdowns(spyRets),
>>                  xts(DrawdownPeak(spyRets), order.by = index(spyRets)))
>> colnames(compare) <- c("PerfA:::Drawdowns", "DrawdownPeak")
>> plot(compare, legend.loc = 'bottomleft')
>> differentUIs <- c(StdDev(PerformanceAnalytics:::Drawdowns(spyRets)),
>>                   StdDev(DrawdownPeak(spyRets)),
>>                   UlcerIndex(spyRets))
>> names(differentUIs) <- c("StdDevDrawdowns", "StdDevDDPeak", "UlcerInex")
>>
>> Outputs:
>>
>> [image: image.png]
>> [image: image.png]
>>
>> In the interest of replication (I.E. Python has none of these functions
>> in any library I know of), and for the correct calculation of other
>> functions dependent on the Ulcer Index (UPI, Serenity Ratio), can someone
>> help me resolve/understand the discrepancies here?
>>
>> Thanks so much.
>> _______________________________________________
>> R-SIG-Finance at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> -- Subscriber-posting only. If you want to post, subscribe first.
>> -- Also note that this is not the r-help list where general R questions
>> should go.
>>
>

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/d450de70/attachment.html>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 135986 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/d450de70/attachment.png>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: image.png
Type: image/png
Size: 4696 bytes
Desc: not available
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20210307/d450de70/attachment-0001.png>

From |@r|d@mou@@@ou| @end|ng |rom gm@||@com  Fri Mar 12 09:41:29 2021
From: |@r|d@mou@@@ou| @end|ng |rom gm@||@com (Farid Moussaoui)
Date: Fri, 12 Mar 2021 09:41:29 +0100
Subject: [R-SIG-Finance] Question about the Ulcer Index calculation in
 PerformanceAnalytics
Message-ID: <05578365-6357-d3a6-7066-c9e778eff71b@gmail.com>

Hi Ilya,

There is a reference in the code about how is implemented the Ulcer Index.

It is here also: http://www.tangotools.com/ui/ui.htm

Farid.


From emm@nue|@@enyo @end|ng |rom gm@||@com  Fri Mar 19 04:32:15 2021
From: emm@nue|@@enyo @end|ng |rom gm@||@com (Fianu, Emmanuel Senyo)
Date: Fri, 19 Mar 2021 04:32:15 +0100
Subject: [R-SIG-Finance] Data
Message-ID: <CAHpDiwRwhX1ywxHv_RHhs_kh7LXUuR1sGSxVx+HX0bzH4jqLOA@mail.gmail.com>

Dear All,

Please, I am working on raw financial data and would  like to have the data
cleaned. I am working on it a bit further and will be very grateful for any
idea or support. Below are my codes and results.
I would like to have the numbers  after the semi-columns separate.


Strike<-unlist(c(my.data$Strike))
#
#
Strike <- sapply(Strike[], trimws) # l??scht ??berfl??ssige Leerzeichen
Strike <- Strike[-1] # l??scht die erste Zeile

 CAP ATM Fwd: -0.49%                SWT 0.50% fwd: 0.05%
              "CAP ATM Fwd: -0.49%"              "SWT 0.50% fwd: 0.05%"
        CAP ATM Fwd: -0.46%                SWT 0.50% fwd: 0.08%
              "CAP ATM Fwd: -0.46%"              "SWT 0.50% fwd: 0.08%"
        CAP ATM Fwd: -0.40%                SWT 0.50% fwd: 0.11%
              "CAP ATM Fwd: -0.40%"              "SWT 0.50% fwd: 0.11%"
        CAP ATM Fwd: -0.32%                SWT 0.50% fwd: 0.14%
              "CAP ATM Fwd: -0.32%"              "SWT 0.50% fwd: 0.14%"
        CAP ATM Fwd: -0.23%                SWT 0.50% fwd: 0.17%
              "CAP ATM Fwd: -0.23%"              "SWT 0.50% fwd: 0.17%"
        CAP ATM Fwd: -0.14%                SWT 0.50% fwd: 0.20%
              "CAP ATM Fwd: -0.14%"              "SWT 0.50% fwd: 0.20%"
        CAP ATM Fwd: -0.05%                SWT 0.50% fwd: 0.23%
              "CAP ATM Fwd: -0.05%"              "SWT 0.50% fwd: 0.23%"
         CAP ATM Fwd: 0.07%                SWT 0.50% fwd: 0.25%
               "CAP ATM Fwd: 0.07%"              "SWT 0.50% fwd: 0.25%"

Many thanks
Emmanuel

The information transmitted is intended only for the per...{{dropped:11}}


From e@ @end|ng |rom enr|co@chum@nn@net  Fri Mar 19 09:59:19 2021
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Fri, 19 Mar 2021 09:59:19 +0100
Subject: [R-SIG-Finance] Data
In-Reply-To: <CAHpDiwRwhX1ywxHv_RHhs_kh7LXUuR1sGSxVx+HX0bzH4jqLOA@mail.gmail.com>
 (Emmanuel Senyo Fianu's message of "Fri, 19 Mar 2021 04:32:15 +0100")
References: <CAHpDiwRwhX1ywxHv_RHhs_kh7LXUuR1sGSxVx+HX0bzH4jqLOA@mail.gmail.com>
Message-ID: <874kh7a594.fsf@enricoschumann.net>

On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:

> Dear All,
>
> Please, I am working on raw financial data and would  like to have the data
> cleaned. I am working on it a bit further and will be very grateful for any
> idea or support. Below are my codes and results.
> I would like to have the numbers  after the semi-columns separate.
>
>
> Strike<-unlist(c(my.data$Strike))
> #
> #
> Strike <- sapply(Strike[], trimws) # l??scht ??berfl??ssige Leerzeichen
> Strike <- Strike[-1] # l??scht die erste Zeile
>
>  CAP ATM Fwd: -0.49%                SWT 0.50% fwd: 0.05%
>               "CAP ATM Fwd: -0.49%"              "SWT 0.50% fwd: 0.05%"
>         CAP ATM Fwd: -0.46%                SWT 0.50% fwd: 0.08%
>               "CAP ATM Fwd: -0.46%"              "SWT 0.50% fwd: 0.08%"
>         CAP ATM Fwd: -0.40%                SWT 0.50% fwd: 0.11%
>               "CAP ATM Fwd: -0.40%"              "SWT 0.50% fwd: 0.11%"
>         CAP ATM Fwd: -0.32%                SWT 0.50% fwd: 0.14%
>               "CAP ATM Fwd: -0.32%"              "SWT 0.50% fwd: 0.14%"
>         CAP ATM Fwd: -0.23%                SWT 0.50% fwd: 0.17%
>               "CAP ATM Fwd: -0.23%"              "SWT 0.50% fwd: 0.17%"
>         CAP ATM Fwd: -0.14%                SWT 0.50% fwd: 0.20%
>               "CAP ATM Fwd: -0.14%"              "SWT 0.50% fwd: 0.20%"
>         CAP ATM Fwd: -0.05%                SWT 0.50% fwd: 0.23%
>               "CAP ATM Fwd: -0.05%"              "SWT 0.50% fwd: 0.23%"
>          CAP ATM Fwd: 0.07%                SWT 0.50% fwd: 0.25%
>                "CAP ATM Fwd: 0.07%"              "SWT 0.50% fwd: 0.25%"
>
> Many thanks
> Emmanuel
>

Please provide a reproducible example, so that people can help you.

(It's not what you have written, but did you mean "the
 numbers after the colons"? Then perhaps look at
 ?strsplit :

   strsplit("CAP ATM Fwd: -0.49%", split = ":", fixed = TRUE)
   ## [[1]]
   ## [1] "CAP ATM Fwd" " -0.49%"    

   sapply(strsplit("CAP ATM Fwd: -0.49%", ":", fixed = TRUE), `[[`, 2L)
   ## [1] " -0.49%"

)


-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From e@ @end|ng |rom enr|co@chum@nn@net  Fri Mar 19 21:07:45 2021
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Fri, 19 Mar 2021 21:07:45 +0100
Subject: [R-SIG-Finance] Data
In-Reply-To: <CAHpDiwT2Gc7dh-E1wmie-Ax+gGABCx0xHK-DEFBj-9e3tkXQsg@mail.gmail.com>
 (Emmanuel Senyo Fianu's message of "Fri, 19 Mar 2021 12:30:49 +0100")
References: <CAHpDiwRwhX1ywxHv_RHhs_kh7LXUuR1sGSxVx+HX0bzH4jqLOA@mail.gmail.com>
 <874kh7a594.fsf@enricoschumann.net>
 <CAHpDiwT2Gc7dh-E1wmie-Ax+gGABCx0xHK-DEFBj-9e3tkXQsg@mail.gmail.com>
Message-ID: <87zgyy7vqm.fsf@enricoschumann.net>

On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:

> Hello Enrico,
>
> thanks for the feedback: this is what I have:
> As you can see we have to things here:
>
>   "CAP ATM Fwd"   and  SWT 0.50% fwd
>
> strsplit(as.character(df),':', '')# separate the column entry into
> multiples specified but not organized into tables.
> [[1]]
>  [1] "c(\"CAP ATM Fwd"            " -0.49%\", \"SWT 0.50% fwd" " 0.05%\",
> \"CAP ATM Fwd"    " -0.46%\", \"SWT 0.50% fwd"
>  [5] " 0.08%\", \"CAP ATM Fwd"    " -0.40%\", \"SWT 0.50% fwd" " 0.11%\",
> \"CAP ATM Fwd"    " -0.32%\", \"SWT 0.50% fwd"
>  [9] " 0.14%\", \"CAP ATM Fwd"    " -0.23%\", \"SWT 0.50% fwd" " 0.17%\",
> \"CAP ATM Fwd"    " -0.14%\", \"SWT 0.50% fwd"
> [13] " 0.20%\", \"CAP ATM Fwd"    " -0.05%\", \"SWT 0.50% fwd" " 0.23%\",
> \"CAP ATM Fwd"    " 0.07%\", \"SWT 0.50% fwd"
> [17] " 0.25%\", \"CAP ATM Fwd"    " 0.15%\", \"SWT 0.50% fwd"  " 0.27%\",
> \"CAP ATM Fwd"    " 0.22%\", \"SWT 0.50% fwd"
>
> Many thanks
> Emmanuel
>

(I put R-SIG-Finance into Cc. again.) 


As I said, please provide a reproducible example: use
?dput to provide example data, and also describe what
you want to achieve.  Perhaps this helps:

  txt <- c("CAP ATM Fwd: -0.49%", "CAP ATM Fwd: -0.49%")
  spl <- strsplit(txt, ":", fixed = TRUE)
  ## [[1]]
  ## [1] "CAP ATM Fwd" " -0.49%"    
  ## 
  ## [[2]]
  ## [1] "CAP ATM Fwd" " -0.49%"    

  sapply(spl, `[[`, 1)  ## column 1
  ## [1] "CAP ATM Fwd" "CAP ATM Fwd"

  sapply(spl, `[[`, 2)  ## column 2
  ## [1] " -0.49%" " -0.49%"

Now you can remove the '%' and call 'as.numeric' and so on....

[...]

> On Fri, Mar 19, 2021 at 9:59 AM Enrico Schumann <es at enricoschumann.net>
> wrote:
>
>> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
>>
>> > Dear All,
>> >
>> > Please, I am working on raw financial data and would  like to have the
>> data
>> > cleaned. I am working on it a bit further and will be very grateful for
>> any
>> > idea or support. Below are my codes and results.
>> > I would like to have the numbers  after the semi-columns separate.
>> >
>> >
>> > Strike<-unlist(c(my.data$Strike))
>> > #
>> > #
>> > Strike <- sapply(Strike[], trimws) # l??scht ??berfl??ssige Leerzeichen
>> > Strike <- Strike[-1] # l??scht die erste Zeile
>> >
>> >  CAP ATM Fwd: -0.49%                SWT 0.50% fwd: 0.05%
>> >               "CAP ATM Fwd: -0.49%"              "SWT 0.50% fwd: 0.05%"
>> >         CAP ATM Fwd: -0.46%                SWT 0.50% fwd: 0.08%
>> >               "CAP ATM Fwd: -0.46%"              "SWT 0.50% fwd: 0.08%"
>> >         CAP ATM Fwd: -0.40%                SWT 0.50% fwd: 0.11%
>> >               "CAP ATM Fwd: -0.40%"              "SWT 0.50% fwd: 0.11%"
>> >         CAP ATM Fwd: -0.32%                SWT 0.50% fwd: 0.14%
>> >               "CAP ATM Fwd: -0.32%"              "SWT 0.50% fwd: 0.14%"
>> >         CAP ATM Fwd: -0.23%                SWT 0.50% fwd: 0.17%
>> >               "CAP ATM Fwd: -0.23%"              "SWT 0.50% fwd: 0.17%"
>> >         CAP ATM Fwd: -0.14%                SWT 0.50% fwd: 0.20%
>> >               "CAP ATM Fwd: -0.14%"              "SWT 0.50% fwd: 0.20%"
>> >         CAP ATM Fwd: -0.05%                SWT 0.50% fwd: 0.23%
>> >               "CAP ATM Fwd: -0.05%"              "SWT 0.50% fwd: 0.23%"
>> >          CAP ATM Fwd: 0.07%                SWT 0.50% fwd: 0.25%
>> >                "CAP ATM Fwd: 0.07%"              "SWT 0.50% fwd: 0.25%"
>> >
>> > Many thanks
>> > Emmanuel
>> >
>>
>> Please provide a reproducible example, so that people can help you.
>>
>> (It's not what you have written, but did you mean "the
>>  numbers after the colons"? Then perhaps look at
>>  ?strsplit :
>>
>>    strsplit("CAP ATM Fwd: -0.49%", split = ":", fixed = TRUE)
>>    ## [[1]]
>>    ## [1] "CAP ATM Fwd" " -0.49%"
>>
>>    sapply(strsplit("CAP ATM Fwd: -0.49%", ":", fixed = TRUE), `[[`, 2L)
>>    ## [1] " -0.49%"
>>
>> )

-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From emm@nue|@@enyo @end|ng |rom gm@||@com  Sat Mar 20 06:09:02 2021
From: emm@nue|@@enyo @end|ng |rom gm@||@com (Fianu, Emmanuel Senyo)
Date: Sat, 20 Mar 2021 06:09:02 +0100
Subject: [R-SIG-Finance] Data
In-Reply-To: <87zgyy7vqm.fsf@enricoschumann.net>
References: <CAHpDiwRwhX1ywxHv_RHhs_kh7LXUuR1sGSxVx+HX0bzH4jqLOA@mail.gmail.com>
 <874kh7a594.fsf@enricoschumann.net>
 <CAHpDiwT2Gc7dh-E1wmie-Ax+gGABCx0xHK-DEFBj-9e3tkXQsg@mail.gmail.com>
 <87zgyy7vqm.fsf@enricoschumann.net>
Message-ID: <CAHpDiwQG1z4+p4di9HKKAZx0A=xH63=FWNVsjj7a0cOtf9m5Tw@mail.gmail.com>

Hello Enrico,

here is a reproducible result:
As you could see, I have separated CAP ATM Fwd and SWT 0.5% fwd
Now, I move on to have two separate tables). I would be grateful for any
support.
Currently, I want to remove all:  "c(\"" and if necessary have decimals
instead of % symbols.
#my.data$Strike
#1  CAP ATM Fwd: -0.49%
#2 SWT 0.50% fwd: 0.05%
#  3  CAP ATM Fwd: -0.46%
#4 SWT 0.50% fwd: 0.08%
#  5  CAP ATM Fwd: -0.40%
#6 SWT 0.50% fwd: 0.11%


  txt0<-strsplit(as.character(df),'CAP ATM Fwd:', "")

#[[1]]
#[1] "c(\""                                     " -0.49%\", \"SWT 0.50%
fwd: 0.05%\", \""
#[3] " -0.46%\", \"SWT 0.50% fwd: 0.08%\", \""  " -0.40%\", \"SWT 0.50%
fwd: 0.11%\", \""
#[5] " -0.32%\", \"SWT 0.50% fwd: 0.14%\", \""  " -0.23%\", \"SWT 0.50%
fwd: 0.17%\", \""
#[7] " -0.14%\", \"SWT 0.50% fwd: 0.20%\", \""  " -0.05%\", \"SWT 0.50%
fwd: 0.23%\", \""
#[9] " 0.07%\", \"SWT 0.50% fwd: 0.25%\", \""   " 0.15%\", \"SWT 0.50% fwd:
0.27%\", \""
#[11] " 0.22%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.29%\", \"SWT 0.50%
fwd: 0.28%\", \n\""
#[13] " 0.32%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.34%\", \"SWT 0.50%
fwd: 0.28%\", \""
#[15] " 0.35%\", \"SWT 0.50% fwd: 0.26%\", \""   " 0.33%\", \"SWT 0.50%
fwd: 0.25%\", \""
#[17] " 0.28%\", \"SWT 0.50% fwd: 0.22%\", \""   " 0.26%\", \"SWT 0.50%
fwd: 0.20%\", \""
#[19] " 0.21%\", \"SWT 0.50% fwd: 0.18%\", \""   " 0.13%\", \""

#[21] " 0.11%\", \""                             " 0.08%\")"

txt1<-strsplit(as.character(df),'SWT 0.50% fwd:',"x")
#[[1]]
#[1] "c(\"CAP ATM Fwd: -0.49%\", \""

#[2] " 0.05%\", \"CAP ATM Fwd: -0.46%\", \""

#[3] " 0.08%\", \"CAP ATM Fwd: -0.40%\", \""

#[4] " 0.11%\", \"CAP ATM Fwd: -0.32%\", \""

#[5] " 0.14%\", \"CAP ATM Fwd: -0.23%\", \""

#[6] " 0.17%\", \"CAP ATM Fwd: -0.14%\", \""

#[7] " 0.20%\", \"CAP ATM Fwd: -0.05%\", \""

#[8] " 0.23%\", \"CAP ATM Fwd: 0.07%\", \""

#[9] " 0.25%\", \"CAP ATM Fwd: 0.15%\", \""

#[10] " 0.27%\", \"CAP ATM Fwd: 0.22%\", \""

#[11] " 0.28%\", \"CAP ATM Fwd: 0.29%\", \""

#[12] " 0.28%\", \n\"CAP ATM Fwd: 0.32%\", \""

#[13] " 0.28%\", \"CAP ATM Fwd: 0.34%\", \""

#[14] " 0.28%\", \"CAP ATM Fwd: 0.35%\", \""

#[15] " 0.26%\", \"CAP ATM Fwd: 0.33%\", \""

#[16] " 0.25%\", \"CAP ATM Fwd: 0.28%\", \""

#[17] " 0.22%\", \"CAP ATM Fwd: 0.26%\", \""

#[18] " 0.20%\", \"CAP ATM Fwd: 0.21%\", \""

#[19] " 0.18%\", \"CAP ATM Fwd: 0.13%\", \"CAP ATM Fwd: 0.11%\", \"CAP ATM
Fwd: 0.08%\")"
#df <- as.data.frame(my.data$Strike)
 #head(df)
#my.data$Strike
#1  CAP ATM Fwd: -0.49%
#2 SWT 0.50% fwd: 0.05%
#  3  CAP ATM Fwd: -0.46%
#4 SWT 0.50% fwd: 0.08%
#  5  CAP ATM Fwd: -0.40%
#6 SWT 0.50% fwd: 0.11%

  txt0<-strsplit(as.character(df),'CAP ATM Fwd:', "")

#[[1]]
#[1] "c(\""                                     " -0.49%\", \"SWT 0.50%
fwd: 0.05%\", \""
#[3] " -0.46%\", \"SWT 0.50% fwd: 0.08%\", \""  " -0.40%\", \"SWT 0.50%
fwd: 0.11%\", \""
#[5] " -0.32%\", \"SWT 0.50% fwd: 0.14%\", \""  " -0.23%\", \"SWT 0.50%
fwd: 0.17%\", \""
#[7] " -0.14%\", \"SWT 0.50% fwd: 0.20%\", \""  " -0.05%\", \"SWT 0.50%
fwd: 0.23%\", \""
#[9] " 0.07%\", \"SWT 0.50% fwd: 0.25%\", \""   " 0.15%\", \"SWT 0.50% fwd:
0.27%\", \""
#[11] " 0.22%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.29%\", \"SWT 0.50%
fwd: 0.28%\", \n\""
#[13] " 0.32%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.34%\", \"SWT 0.50%
fwd: 0.28%\", \""
#[15] " 0.35%\", \"SWT 0.50% fwd: 0.26%\", \""   " 0.33%\", \"SWT 0.50%
fwd: 0.25%\", \""
#[17] " 0.28%\", \"SWT 0.50% fwd: 0.22%\", \""   " 0.26%\", \"SWT 0.50%
fwd: 0.20%\", \""
#[19] " 0.21%\", \"SWT 0.50% fwd: 0.18%\", \""   " 0.13%\", \""

#[21] " 0.11%\", \""                             " 0.08%\")"

txt1<-strsplit(as.character(df),'SWT 0.50% fwd:',"x")
#[[1]]
#[1] "c(\"CAP ATM Fwd: -0.49%\", \""

#[2] " 0.05%\", \"CAP ATM Fwd: -0.46%\", \""

#[3] " 0.08%\", \"CAP ATM Fwd: -0.40%\", \""

#[4] " 0.11%\", \"CAP ATM Fwd: -0.32%\", \""

#[5] " 0.14%\", \"CAP ATM Fwd: -0.23%\", \""

#[6] " 0.17%\", \"CAP ATM Fwd: -0.14%\", \""

#[7] " 0.20%\", \"CAP ATM Fwd: -0.05%\", \""

#[8] " 0.23%\", \"CAP ATM Fwd: 0.07%\", \""

#[9] " 0.25%\", \"CAP ATM Fwd: 0.15%\", \""

#[10] " 0.27%\", \"CAP ATM Fwd: 0.22%\", \""

#[11] " 0.28%\", \"CAP ATM Fwd: 0.29%\", \""

#[12] " 0.28%\", \n\"CAP ATM Fwd: 0.32%\", \""

#[13] " 0.28%\", \"CAP ATM Fwd: 0.34%\", \""

#[14] " 0.28%\", \"CAP ATM Fwd: 0.35%\", \""

#[15] " 0.26%\", \"CAP ATM Fwd: 0.33%\", \""

#[16] " 0.25%\", \"CAP ATM Fwd: 0.28%\", \""

#[17] " 0.22%\", \"CAP ATM Fwd: 0.26%\", \""

#[18] " 0.20%\", \"CAP ATM Fwd: 0.21%\", \""

#[19] " 0.18%\", \"CAP ATM Fwd: 0.13%\", \"CAP ATM Fwd: 0.11%\", \"CAP ATM
Fwd: 0.08%\")"

Many thanks,
Emm



The information transmitted is intended only for the person or entity
to which it is addressed and may contain confidential and/or
privileged material. Any review, retransmission, dissemination or
other use of, or taking of any action in reliance upon, this
information by persons or entities other than the intended recipient
is prohibited. If you received this in error, please contact the
sender and delete the material from any computer.







<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
Virus-free.
www.avast.com
<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
<#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>

On Fri, Mar 19, 2021 at 9:07 PM Enrico Schumann <es at enricoschumann.net>
wrote:

> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
>
> > Hello Enrico,
> >
> > thanks for the feedback: this is what I have:
> > As you can see we have to things here:
> >
> >   "CAP ATM Fwd"   and  SWT 0.50% fwd
> >
> > strsplit(as.character(df),':', '')# separate the column entry into
> > multiples specified but not organized into tables.
> > [[1]]
> >  [1] "c(\"CAP ATM Fwd"            " -0.49%\", \"SWT 0.50% fwd" " 0.05%\",
> > \"CAP ATM Fwd"    " -0.46%\", \"SWT 0.50% fwd"
> >  [5] " 0.08%\", \"CAP ATM Fwd"    " -0.40%\", \"SWT 0.50% fwd" " 0.11%\",
> > \"CAP ATM Fwd"    " -0.32%\", \"SWT 0.50% fwd"
> >  [9] " 0.14%\", \"CAP ATM Fwd"    " -0.23%\", \"SWT 0.50% fwd" " 0.17%\",
> > \"CAP ATM Fwd"    " -0.14%\", \"SWT 0.50% fwd"
> > [13] " 0.20%\", \"CAP ATM Fwd"    " -0.05%\", \"SWT 0.50% fwd" " 0.23%\",
> > \"CAP ATM Fwd"    " 0.07%\", \"SWT 0.50% fwd"
> > [17] " 0.25%\", \"CAP ATM Fwd"    " 0.15%\", \"SWT 0.50% fwd"  " 0.27%\",
> > \"CAP ATM Fwd"    " 0.22%\", \"SWT 0.50% fwd"
> >
> > Many thanks
> > Emmanuel
> >
>
> (I put R-SIG-Finance into Cc. again.)
>
>
> As I said, please provide a reproducible example: use
> ?dput to provide example data, and also describe what
> you want to achieve.  Perhaps this helps:
>
>   txt <- c("CAP ATM Fwd: -0.49%", "CAP ATM Fwd: -0.49%")
>   spl <- strsplit(txt, ":", fixed = TRUE)
>   ## [[1]]
>   ## [1] "CAP ATM Fwd" " -0.49%"
>   ##
>   ## [[2]]
>   ## [1] "CAP ATM Fwd" " -0.49%"
>
>   sapply(spl, `[[`, 1)  ## column 1
>   ## [1] "CAP ATM Fwd" "CAP ATM Fwd"
>
>   sapply(spl, `[[`, 2)  ## column 2
>   ## [1] " -0.49%" " -0.49%"
>
> Now you can remove the '%' and call 'as.numeric' and so on....
>
> [...]
>
> > On Fri, Mar 19, 2021 at 9:59 AM Enrico Schumann <es at enricoschumann.net>
> > wrote:
> >
> >> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
> >>
> >> > Dear All,
> >> >
> >> > Please, I am working on raw financial data and would  like to have the
> >> data
> >> > cleaned. I am working on it a bit further and will be very grateful
> for
> >> any
> >> > idea or support. Below are my codes and results.
> >> > I would like to have the numbers  after the semi-columns separate.
> >> >
> >> >
> >> > Strike<-unlist(c(my.data$Strike))
> >> > #
> >> > #
> >> > Strike <- sapply(Strike[], trimws) # l??scht ??berfl??ssige
> Leerzeichen
> >> > Strike <- Strike[-1] # l??scht die erste Zeile
> >> >
> >> >  CAP ATM Fwd: -0.49%                SWT 0.50% fwd: 0.05%
> >> >               "CAP ATM Fwd: -0.49%"              "SWT 0.50% fwd:
> 0.05%"
> >> >         CAP ATM Fwd: -0.46%                SWT 0.50% fwd: 0.08%
> >> >               "CAP ATM Fwd: -0.46%"              "SWT 0.50% fwd:
> 0.08%"
> >> >         CAP ATM Fwd: -0.40%                SWT 0.50% fwd: 0.11%
> >> >               "CAP ATM Fwd: -0.40%"              "SWT 0.50% fwd:
> 0.11%"
> >> >         CAP ATM Fwd: -0.32%                SWT 0.50% fwd: 0.14%
> >> >               "CAP ATM Fwd: -0.32%"              "SWT 0.50% fwd:
> 0.14%"
> >> >         CAP ATM Fwd: -0.23%                SWT 0.50% fwd: 0.17%
> >> >               "CAP ATM Fwd: -0.23%"              "SWT 0.50% fwd:
> 0.17%"
> >> >         CAP ATM Fwd: -0.14%                SWT 0.50% fwd: 0.20%
> >> >               "CAP ATM Fwd: -0.14%"              "SWT 0.50% fwd:
> 0.20%"
> >> >         CAP ATM Fwd: -0.05%                SWT 0.50% fwd: 0.23%
> >> >               "CAP ATM Fwd: -0.05%"              "SWT 0.50% fwd:
> 0.23%"
> >> >          CAP ATM Fwd: 0.07%                SWT 0.50% fwd: 0.25%
> >> >                "CAP ATM Fwd: 0.07%"              "SWT 0.50% fwd:
> 0.25%"
> >> >
> >> > Many thanks
> >> > Emmanuel
> >> >
> >>
> >> Please provide a reproducible example, so that people can help you.
> >>
> >> (It's not what you have written, but did you mean "the
> >>  numbers after the colons"? Then perhaps look at
> >>  ?strsplit :
> >>
> >>    strsplit("CAP ATM Fwd: -0.49%", split = ":", fixed = TRUE)
> >>    ## [[1]]
> >>    ## [1] "CAP ATM Fwd" " -0.49%"
> >>
> >>    sapply(strsplit("CAP ATM Fwd: -0.49%", ":", fixed = TRUE), `[[`, 2L)
> >>    ## [1] " -0.49%"
> >>
> >> )
>
> --
> Enrico Schumann
> Lucerne, Switzerland
> http://enricoschumann.net
>

	[[alternative HTML version deleted]]


From e@ @end|ng |rom enr|co@chum@nn@net  Sat Mar 20 09:18:26 2021
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Sat, 20 Mar 2021 09:18:26 +0100
Subject: [R-SIG-Finance] Data
In-Reply-To: <CAHpDiwQG1z4+p4di9HKKAZx0A=xH63=FWNVsjj7a0cOtf9m5Tw@mail.gmail.com>
 (Emmanuel Senyo Fianu's message of "Sat, 20 Mar 2021 06:09:02 +0100")
References: <CAHpDiwRwhX1ywxHv_RHhs_kh7LXUuR1sGSxVx+HX0bzH4jqLOA@mail.gmail.com>
 <874kh7a594.fsf@enricoschumann.net>
 <CAHpDiwT2Gc7dh-E1wmie-Ax+gGABCx0xHK-DEFBj-9e3tkXQsg@mail.gmail.com>
 <87zgyy7vqm.fsf@enricoschumann.net>
 <CAHpDiwQG1z4+p4di9HKKAZx0A=xH63=FWNVsjj7a0cOtf9m5Tw@mail.gmail.com>
Message-ID: <87r1ka6xwt.fsf@enricoschumann.net>

On Sat, 20 Mar 2021, Fianu, Emmanuel Senyo writes:

> Hello Enrico,
>
> here is a reproducible result:
> As you could see, I have separated CAP ATM Fwd and SWT 0.5% fwd
> Now, I move on to have two separate tables). I would be grateful for any
> support.
> Currently, I want to remove all:  "c(\"" and if necessary have decimals
> instead of % symbols.
> #my.data$Strike
> #1  CAP ATM Fwd: -0.49%
> #2 SWT 0.50% fwd: 0.05%
> #  3  CAP ATM Fwd: -0.46%
> #4 SWT 0.50% fwd: 0.08%
> #  5  CAP ATM Fwd: -0.40%
> #6 SWT 0.50% fwd: 0.11%
>
>
>   txt0<-strsplit(as.character(df),'CAP ATM Fwd:', "")
> #[[1]]
> #[1] "c(\""                                     " -0.49%\", \"SWT 0.50%
> fwd: 0.05%\", \""
> #[3] " -0.46%\", \"SWT 0.50% fwd: 0.08%\", \""  " -0.40%\", \"SWT 0.50%
> fwd: 0.11%\", \""
> #[5] " -0.32%\", \"SWT 0.50% fwd: 0.14%\", \""  " -0.23%\", \"SWT 0.50%
> fwd: 0.17%\", \""
> #[7] " -0.14%\", \"SWT 0.50% fwd: 0.20%\", \""  " -0.05%\", \"SWT 0.50%
> fwd: 0.23%\", \""
> #[9] " 0.07%\", \"SWT 0.50% fwd: 0.25%\", \""   " 0.15%\", \"SWT 0.50% fwd:
> 0.27%\", \""
> #[11] " 0.22%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.29%\", \"SWT 0.50%
> fwd: 0.28%\", \n\""
> #[13] " 0.32%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.34%\", \"SWT 0.50%
> fwd: 0.28%\", \""
> #[15] " 0.35%\", \"SWT 0.50% fwd: 0.26%\", \""   " 0.33%\", \"SWT 0.50%
> fwd: 0.25%\", \""
> #[17] " 0.28%\", \"SWT 0.50% fwd: 0.22%\", \""   " 0.26%\", \"SWT 0.50%
> fwd: 0.20%\", \""
> #[19] " 0.21%\", \"SWT 0.50% fwd: 0.18%\", \""   " 0.13%\", \""
>
> #[21] " 0.11%\", \""                             " 0.08%\")"
>
> txt1<-strsplit(as.character(df),'SWT 0.50% fwd:',"x")
> #[[1]]
> #[1] "c(\"CAP ATM Fwd: -0.49%\", \""
>
> #[2] " 0.05%\", \"CAP ATM Fwd: -0.46%\", \""
>
> #[3] " 0.08%\", \"CAP ATM Fwd: -0.40%\", \""
>
> #[4] " 0.11%\", \"CAP ATM Fwd: -0.32%\", \""
>
> #[5] " 0.14%\", \"CAP ATM Fwd: -0.23%\", \""
>
> #[6] " 0.17%\", \"CAP ATM Fwd: -0.14%\", \""
>
> #[7] " 0.20%\", \"CAP ATM Fwd: -0.05%\", \""
>
> #[8] " 0.23%\", \"CAP ATM Fwd: 0.07%\", \""
>
> #[9] " 0.25%\", \"CAP ATM Fwd: 0.15%\", \""
>
> #[10] " 0.27%\", \"CAP ATM Fwd: 0.22%\", \""
>
> #[11] " 0.28%\", \"CAP ATM Fwd: 0.29%\", \""
>
> #[12] " 0.28%\", \n\"CAP ATM Fwd: 0.32%\", \""
>
> #[13] " 0.28%\", \"CAP ATM Fwd: 0.34%\", \""
>
> #[14] " 0.28%\", \"CAP ATM Fwd: 0.35%\", \""
>
> #[15] " 0.26%\", \"CAP ATM Fwd: 0.33%\", \""
>
> #[16] " 0.25%\", \"CAP ATM Fwd: 0.28%\", \""
>
> #[17] " 0.22%\", \"CAP ATM Fwd: 0.26%\", \""
>
> #[18] " 0.20%\", \"CAP ATM Fwd: 0.21%\", \""
>
> #[19] " 0.18%\", \"CAP ATM Fwd: 0.13%\", \"CAP ATM Fwd: 0.11%\", \"CAP ATM
> Fwd: 0.08%\")"
> #df <- as.data.frame(my.data$Strike)
>  #head(df)
> #my.data$Strike
> #1  CAP ATM Fwd: -0.49%
> #2 SWT 0.50% fwd: 0.05%
> #  3  CAP ATM Fwd: -0.46%
> #4 SWT 0.50% fwd: 0.08%
> #  5  CAP ATM Fwd: -0.40%
> #6 SWT 0.50% fwd: 0.11%
>
>   txt0<-strsplit(as.character(df),'CAP ATM Fwd:', "")
>
> #[[1]]
> #[1] "c(\""                                     " -0.49%\", \"SWT 0.50%
> fwd: 0.05%\", \""
> #[3] " -0.46%\", \"SWT 0.50% fwd: 0.08%\", \""  " -0.40%\", \"SWT 0.50%
> fwd: 0.11%\", \""
> #[5] " -0.32%\", \"SWT 0.50% fwd: 0.14%\", \""  " -0.23%\", \"SWT 0.50%
> fwd: 0.17%\", \""
> #[7] " -0.14%\", \"SWT 0.50% fwd: 0.20%\", \""  " -0.05%\", \"SWT 0.50%
> fwd: 0.23%\", \""
> #[9] " 0.07%\", \"SWT 0.50% fwd: 0.25%\", \""   " 0.15%\", \"SWT 0.50% fwd:
> 0.27%\", \""
> #[11] " 0.22%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.29%\", \"SWT 0.50%
> fwd: 0.28%\", \n\""
> #[13] " 0.32%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.34%\", \"SWT 0.50%
> fwd: 0.28%\", \""
> #[15] " 0.35%\", \"SWT 0.50% fwd: 0.26%\", \""   " 0.33%\", \"SWT 0.50%
> fwd: 0.25%\", \""
> #[17] " 0.28%\", \"SWT 0.50% fwd: 0.22%\", \""   " 0.26%\", \"SWT 0.50%
> fwd: 0.20%\", \""
> #[19] " 0.21%\", \"SWT 0.50% fwd: 0.18%\", \""   " 0.13%\", \""
>
> #[21] " 0.11%\", \""                             " 0.08%\")"
>
> txt1<-strsplit(as.character(df),'SWT 0.50% fwd:',"x")
> #[[1]]
> #[1] "c(\"CAP ATM Fwd: -0.49%\", \""
>
> #[2] " 0.05%\", \"CAP ATM Fwd: -0.46%\", \""
>
> #[3] " 0.08%\", \"CAP ATM Fwd: -0.40%\", \""
>
> #[4] " 0.11%\", \"CAP ATM Fwd: -0.32%\", \""
>
> #[5] " 0.14%\", \"CAP ATM Fwd: -0.23%\", \""
>
> #[6] " 0.17%\", \"CAP ATM Fwd: -0.14%\", \""
>
> #[7] " 0.20%\", \"CAP ATM Fwd: -0.05%\", \""
>
> #[8] " 0.23%\", \"CAP ATM Fwd: 0.07%\", \""
>
> #[9] " 0.25%\", \"CAP ATM Fwd: 0.15%\", \""
>
> #[10] " 0.27%\", \"CAP ATM Fwd: 0.22%\", \""
>
> #[11] " 0.28%\", \"CAP ATM Fwd: 0.29%\", \""
>
> #[12] " 0.28%\", \n\"CAP ATM Fwd: 0.32%\", \""
>
> #[13] " 0.28%\", \"CAP ATM Fwd: 0.34%\", \""
>
> #[14] " 0.28%\", \"CAP ATM Fwd: 0.35%\", \""
>
> #[15] " 0.26%\", \"CAP ATM Fwd: 0.33%\", \""
>
> #[16] " 0.25%\", \"CAP ATM Fwd: 0.28%\", \""
>
> #[17] " 0.22%\", \"CAP ATM Fwd: 0.26%\", \""
>
> #[18] " 0.20%\", \"CAP ATM Fwd: 0.21%\", \""
>
> #[19] " 0.18%\", \"CAP ATM Fwd: 0.13%\", \"CAP ATM Fwd: 0.11%\", \"CAP ATM
> Fwd: 0.08%\")"
>
> Many thanks,
> Emm
>

Hi Emm

try this:

    my.data <- list()
    my.data$Strike <- c("CAP ATM Fwd: -0.49%",
                        "SWT 0.50% fwd: 0.05%",
                        "CAP ATM Fwd: -0.46%",
                        "SWT 0.50% fwd: 0.08%",
                        "CAP ATM Fwd: -0.40%",
                        "SWT 0.50% fwd: 0.11%")
    res <- strsplit(my.data$Strike, ":")
    ## [[1]]
    ## [1] "CAP ATM Fwd" " -0.49%"    
    ## 
    ## [[2]]
    ## [1] "SWT 0.50% fwd" " 0.05%"       
    ## 
    ## [[3]]
    ## [1] "CAP ATM Fwd" " -0.46%"    
    ## 
    ## [[4]]
    ## [1] "SWT 0.50% fwd" " 0.08%"       
    ## 
    ## [[5]]
    ## [1] "CAP ATM Fwd" " -0.40%"    
    ## 
    ## [[6]]
    ## [1] "SWT 0.50% fwd" " 0.11%"       

    col1 <- sapply(res, `[[`, 1L)
    col2 <- sapply(res, `[[`, 2L)
    col2 <- as.numeric(sub("%", "", col2, fixed = TRUE))/100
    res <- data.frame(col1, col2)
    ##            col1    col2
    ## 1   CAP ATM Fwd -0.0049
    ## 2 SWT 0.50% fwd  0.0005
    ## 3   CAP ATM Fwd -0.0046
    ## 4 SWT 0.50% fwd  0.0008
    ## 5   CAP ATM Fwd -0.0040
    ## 6 SWT 0.50% fwd  0.0011

If CAP and SWT rows alternate,  you can easily extract
every second row:

    i <- seq(from = 1, to = nrow(res), by = 2)
    res[i, ]
    ##           col1   col2
    ## 1 CAP ATM Fwd -0.0049
    ## 3 CAP ATM Fwd -0.0046
    ## 5 CAP ATM Fwd -0.0040
    res[i + 1, ]
    ##            col1   col2
    ## 2 SWT 0.50% fwd 0.0005
    ## 4 SWT 0.50% fwd 0.0008
    ## 6 SWT 0.50% fwd 0.0011


kind regards
    Enrico

> On Fri, Mar 19, 2021 at 9:07 PM Enrico Schumann <es at enricoschumann.net>
> wrote:
>
>> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
>>
>> > Hello Enrico,
>> >
>> > thanks for the feedback: this is what I have:
>> > As you can see we have to things here:
>> >
>> >   "CAP ATM Fwd"   and  SWT 0.50% fwd
>> >
>> > strsplit(as.character(df),':', '')# separate the column entry into
>> > multiples specified but not organized into tables.
>> > [[1]]
>> >  [1] "c(\"CAP ATM Fwd"            " -0.49%\", \"SWT 0.50% fwd" " 0.05%\",
>> > \"CAP ATM Fwd"    " -0.46%\", \"SWT 0.50% fwd"
>> >  [5] " 0.08%\", \"CAP ATM Fwd"    " -0.40%\", \"SWT 0.50% fwd" " 0.11%\",
>> > \"CAP ATM Fwd"    " -0.32%\", \"SWT 0.50% fwd"
>> >  [9] " 0.14%\", \"CAP ATM Fwd"    " -0.23%\", \"SWT 0.50% fwd" " 0.17%\",
>> > \"CAP ATM Fwd"    " -0.14%\", \"SWT 0.50% fwd"
>> > [13] " 0.20%\", \"CAP ATM Fwd"    " -0.05%\", \"SWT 0.50% fwd" " 0.23%\",
>> > \"CAP ATM Fwd"    " 0.07%\", \"SWT 0.50% fwd"
>> > [17] " 0.25%\", \"CAP ATM Fwd"    " 0.15%\", \"SWT 0.50% fwd"  " 0.27%\",
>> > \"CAP ATM Fwd"    " 0.22%\", \"SWT 0.50% fwd"
>> >
>> > Many thanks
>> > Emmanuel
>> >
>>
>> (I put R-SIG-Finance into Cc. again.)
>>
>>
>> As I said, please provide a reproducible example: use
>> ?dput to provide example data, and also describe what
>> you want to achieve.  Perhaps this helps:
>>
>>   txt <- c("CAP ATM Fwd: -0.49%", "CAP ATM Fwd: -0.49%")
>>   spl <- strsplit(txt, ":", fixed = TRUE)
>>   ## [[1]]
>>   ## [1] "CAP ATM Fwd" " -0.49%"
>>   ##
>>   ## [[2]]
>>   ## [1] "CAP ATM Fwd" " -0.49%"
>>
>>   sapply(spl, `[[`, 1)  ## column 1
>>   ## [1] "CAP ATM Fwd" "CAP ATM Fwd"
>>
>>   sapply(spl, `[[`, 2)  ## column 2
>>   ## [1] " -0.49%" " -0.49%"
>>
>> Now you can remove the '%' and call 'as.numeric' and so on....
>>
>> [...]
>>
>> > On Fri, Mar 19, 2021 at 9:59 AM Enrico Schumann <es at enricoschumann.net>
>> > wrote:
>> >
>> >> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
>> >>
>> >> > Dear All,
>> >> >
>> >> > Please, I am working on raw financial data and would  like to have the
>> >> data
>> >> > cleaned. I am working on it a bit further and will be very grateful
>> for
>> >> any
>> >> > idea or support. Below are my codes and results.
>> >> > I would like to have the numbers  after the semi-columns separate.
>> >> >
>> >> >
>> >> > Strike<-unlist(c(my.data$Strike))
>> >> > #
>> >> > #
>> >> > Strike <- sapply(Strike[], trimws) # l??scht ??berfl??ssige
>> Leerzeichen
>> >> > Strike <- Strike[-1] # l??scht die erste Zeile
>> >> >
>> >> >  CAP ATM Fwd: -0.49%                SWT 0.50% fwd: 0.05%
>> >> >               "CAP ATM Fwd: -0.49%"              "SWT 0.50% fwd:
>> 0.05%"
>> >> >         CAP ATM Fwd: -0.46%                SWT 0.50% fwd: 0.08%
>> >> >               "CAP ATM Fwd: -0.46%"              "SWT 0.50% fwd:
>> 0.08%"
>> >> >         CAP ATM Fwd: -0.40%                SWT 0.50% fwd: 0.11%
>> >> >               "CAP ATM Fwd: -0.40%"              "SWT 0.50% fwd:
>> 0.11%"
>> >> >         CAP ATM Fwd: -0.32%                SWT 0.50% fwd: 0.14%
>> >> >               "CAP ATM Fwd: -0.32%"              "SWT 0.50% fwd:
>> 0.14%"
>> >> >         CAP ATM Fwd: -0.23%                SWT 0.50% fwd: 0.17%
>> >> >               "CAP ATM Fwd: -0.23%"              "SWT 0.50% fwd:
>> 0.17%"
>> >> >         CAP ATM Fwd: -0.14%                SWT 0.50% fwd: 0.20%
>> >> >               "CAP ATM Fwd: -0.14%"              "SWT 0.50% fwd:
>> 0.20%"
>> >> >         CAP ATM Fwd: -0.05%                SWT 0.50% fwd: 0.23%
>> >> >               "CAP ATM Fwd: -0.05%"              "SWT 0.50% fwd:
>> 0.23%"
>> >> >          CAP ATM Fwd: 0.07%                SWT 0.50% fwd: 0.25%
>> >> >                "CAP ATM Fwd: 0.07%"              "SWT 0.50% fwd:
>> 0.25%"
>> >> >
>> >> > Many thanks
>> >> > Emmanuel
>> >> >
>> >>
>> >> Please provide a reproducible example, so that people can help you.
>> >>
>> >> (It's not what you have written, but did you mean "the
>> >>  numbers after the colons"? Then perhaps look at
>> >>  ?strsplit :
>> >>
>> >>    strsplit("CAP ATM Fwd: -0.49%", split = ":", fixed = TRUE)
>> >>    ## [[1]]
>> >>    ## [1] "CAP ATM Fwd" " -0.49%"
>> >>
>> >>    sapply(strsplit("CAP ATM Fwd: -0.49%", ":", fixed = TRUE), `[[`, 2L)
>> >>    ## [1] " -0.49%"
>> >>
>> >> )

-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From emm@nue|@@enyo @end|ng |rom gm@||@com  Sat Mar 20 15:13:37 2021
From: emm@nue|@@enyo @end|ng |rom gm@||@com (Fianu, Emmanuel Senyo)
Date: Sat, 20 Mar 2021 15:13:37 +0100
Subject: [R-SIG-Finance] Data
In-Reply-To: <87r1ka6xwt.fsf@enricoschumann.net>
References: <CAHpDiwRwhX1ywxHv_RHhs_kh7LXUuR1sGSxVx+HX0bzH4jqLOA@mail.gmail.com>
 <874kh7a594.fsf@enricoschumann.net>
 <CAHpDiwT2Gc7dh-E1wmie-Ax+gGABCx0xHK-DEFBj-9e3tkXQsg@mail.gmail.com>
 <87zgyy7vqm.fsf@enricoschumann.net>
 <CAHpDiwQG1z4+p4di9HKKAZx0A=xH63=FWNVsjj7a0cOtf9m5Tw@mail.gmail.com>
 <87r1ka6xwt.fsf@enricoschumann.net>
Message-ID: <CAHpDiwRLUkOarDhEdVLbt76CtXstB_YhnBo0x2Q6uPczQmXAQw@mail.gmail.com>

Hi Enrico,

thanks for the feedback.
I am having something different here:
I would be grateful for your assistance.

res <- strsplit(as.character(my.data$Strike), ":")
#[[1]]
#[1] "character(0)"

#[[2]]
#[1] "c(\"CAP ATM Fwd\", \" -0.49%\")"

#[[3]]
#[1] "c(\"SWT 0.50% fwd\", \" 0.05%\")"

#[[4]]
#[1] "c(\"CAP ATM Fwd\", \" -0.46%\")"

#[[5]]
#[1] "c(\"SWT 0.50% fwd\", \" 0.08%\")"




col1 <- sapply(res, `[[`, 1L)

#> col1
#[1] "character(0)"                     "c(\"CAP ATM Fwd\", \" -0.49%\")"
 "c(\"SWT 0.50% fwd\", \" 0.05%\")"
#[4] "c(\"CAP ATM Fwd\", \" -0.46%\")"  "c(\"SWT 0.50% fwd\", \" 0.08%\")"
"c(\"CAP ATM Fwd\", \" -0.40%\")"
#[7] "c(\"SWT 0.50% fwd\", \" 0.11%\")" "c(\"CAP ATM Fwd\", \" -0.32%\")"
 "c(\"SWT 0.50% fwd\", \" 0.14%\")"
#[10] "c(\"CAP ATM Fwd\", \" -0.23%\")"  "c(\"SWT 0.50% fwd\", \" 0.17%\")"
"c(\"CAP ATM Fwd\", \" -0.14%\")"


col2 <- sapply(res, `[[`, 2L)


#Error in FUN(X[[i]], ...) : subscript out of bounds

col2 <- as.numeric(sub("%", "", col2, fixed = TRUE))/100
res <- data.frame(col1, col2)


#col1 col2
#1                  character(0)   NA
#2   c("CAP ATM Fwd", " -0.49%")   NA
#3  c("SWT 0.50% fwd", " 0.05%")   NA
#4   c("CAP ATM Fwd", " -0.46%")   NA
#5  c("SWT 0.50% fwd", " 0.08%")   NA
#6   c("CAP ATM Fwd", " -0.40%")   NA
#7  c("SWT 0.50% fwd", " 0.11%")   NA
#8   c("CAP ATM Fwd", " -0.32%")   NA

i <- seq(from = 1, to = nrow(res), by = 2)
res[i, ]
#col1 col2
#1                  character(0)   NA
#3  c("SWT 0.50% fwd", " 0.05%")   NA
#5  c("SWT 0.50% fwd", " 0.08%")   NA
#7  c("SWT 0.50% fwd", " 0.11%")   NA
#9  c("SWT 0.50% fwd", " 0.14%")   NA
#11 c("SWT 0.50% fwd", " 0.17%")   N
res[i + 1, ]

#2  c("CAP ATM Fwd", " -0.49%")   NA
#4  c("CAP ATM Fwd", " -0.46%")   NA
#6  c("CAP ATM Fwd", " -0.40%")   NA
#8  c("CAP ATM Fwd", " -0.32%")   NA
#10 c("CAP ATM Fwd", " -0.23%")   NA

Many thanks,
Emmanuel


The information transmitted is intended only for the person or entity
to which it is addressed and may contain confidential and/or
privileged material. Any review, retransmission, dissemination or
other use of, or taking of any action in reliance upon, this
information by persons or entities other than the intended recipient
is prohibited. If you received this in error, please contact the
sender and delete the material from any computer.







<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
Virus-free.
www.avast.com
<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
<#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>

On Sat, Mar 20, 2021 at 9:18 AM Enrico Schumann <es at enricoschumann.net>
wrote:

> On Sat, 20 Mar 2021, Fianu, Emmanuel Senyo writes:
>
> > Hello Enrico,
> >
> > here is a reproducible result:
> > As you could see, I have separated CAP ATM Fwd and SWT 0.5% fwd
> > Now, I move on to have two separate tables). I would be grateful for any
> > support.
> > Currently, I want to remove all:  "c(\"" and if necessary have decimals
> > instead of % symbols.
> > #my.data$Strike
> > #1  CAP ATM Fwd: -0.49%
> > #2 SWT 0.50% fwd: 0.05%
> > #  3  CAP ATM Fwd: -0.46%
> > #4 SWT 0.50% fwd: 0.08%
> > #  5  CAP ATM Fwd: -0.40%
> > #6 SWT 0.50% fwd: 0.11%
> >
> >
> >   txt0<-strsplit(as.character(df),'CAP ATM Fwd:', "")
> > #[[1]]
> > #[1] "c(\""                                     " -0.49%\", \"SWT 0.50%
> > fwd: 0.05%\", \""
> > #[3] " -0.46%\", \"SWT 0.50% fwd: 0.08%\", \""  " -0.40%\", \"SWT 0.50%
> > fwd: 0.11%\", \""
> > #[5] " -0.32%\", \"SWT 0.50% fwd: 0.14%\", \""  " -0.23%\", \"SWT 0.50%
> > fwd: 0.17%\", \""
> > #[7] " -0.14%\", \"SWT 0.50% fwd: 0.20%\", \""  " -0.05%\", \"SWT 0.50%
> > fwd: 0.23%\", \""
> > #[9] " 0.07%\", \"SWT 0.50% fwd: 0.25%\", \""   " 0.15%\", \"SWT 0.50%
> fwd:
> > 0.27%\", \""
> > #[11] " 0.22%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.29%\", \"SWT 0.50%
> > fwd: 0.28%\", \n\""
> > #[13] " 0.32%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.34%\", \"SWT 0.50%
> > fwd: 0.28%\", \""
> > #[15] " 0.35%\", \"SWT 0.50% fwd: 0.26%\", \""   " 0.33%\", \"SWT 0.50%
> > fwd: 0.25%\", \""
> > #[17] " 0.28%\", \"SWT 0.50% fwd: 0.22%\", \""   " 0.26%\", \"SWT 0.50%
> > fwd: 0.20%\", \""
> > #[19] " 0.21%\", \"SWT 0.50% fwd: 0.18%\", \""   " 0.13%\", \""
> >
> > #[21] " 0.11%\", \""                             " 0.08%\")"
> >
> > txt1<-strsplit(as.character(df),'SWT 0.50% fwd:',"x")
> > #[[1]]
> > #[1] "c(\"CAP ATM Fwd: -0.49%\", \""
> >
> > #[2] " 0.05%\", \"CAP ATM Fwd: -0.46%\", \""
> >
> > #[3] " 0.08%\", \"CAP ATM Fwd: -0.40%\", \""
> >
> > #[4] " 0.11%\", \"CAP ATM Fwd: -0.32%\", \""
> >
> > #[5] " 0.14%\", \"CAP ATM Fwd: -0.23%\", \""
> >
> > #[6] " 0.17%\", \"CAP ATM Fwd: -0.14%\", \""
> >
> > #[7] " 0.20%\", \"CAP ATM Fwd: -0.05%\", \""
> >
> > #[8] " 0.23%\", \"CAP ATM Fwd: 0.07%\", \""
> >
> > #[9] " 0.25%\", \"CAP ATM Fwd: 0.15%\", \""
> >
> > #[10] " 0.27%\", \"CAP ATM Fwd: 0.22%\", \""
> >
> > #[11] " 0.28%\", \"CAP ATM Fwd: 0.29%\", \""
> >
> > #[12] " 0.28%\", \n\"CAP ATM Fwd: 0.32%\", \""
> >
> > #[13] " 0.28%\", \"CAP ATM Fwd: 0.34%\", \""
> >
> > #[14] " 0.28%\", \"CAP ATM Fwd: 0.35%\", \""
> >
> > #[15] " 0.26%\", \"CAP ATM Fwd: 0.33%\", \""
> >
> > #[16] " 0.25%\", \"CAP ATM Fwd: 0.28%\", \""
> >
> > #[17] " 0.22%\", \"CAP ATM Fwd: 0.26%\", \""
> >
> > #[18] " 0.20%\", \"CAP ATM Fwd: 0.21%\", \""
> >
> > #[19] " 0.18%\", \"CAP ATM Fwd: 0.13%\", \"CAP ATM Fwd: 0.11%\", \"CAP
> ATM
> > Fwd: 0.08%\")"
> > #df <- as.data.frame(my.data$Strike)
> >  #head(df)
> > #my.data$Strike
> > #1  CAP ATM Fwd: -0.49%
> > #2 SWT 0.50% fwd: 0.05%
> > #  3  CAP ATM Fwd: -0.46%
> > #4 SWT 0.50% fwd: 0.08%
> > #  5  CAP ATM Fwd: -0.40%
> > #6 SWT 0.50% fwd: 0.11%
> >
> >   txt0<-strsplit(as.character(df),'CAP ATM Fwd:', "")
> >
> > #[[1]]
> > #[1] "c(\""                                     " -0.49%\", \"SWT 0.50%
> > fwd: 0.05%\", \""
> > #[3] " -0.46%\", \"SWT 0.50% fwd: 0.08%\", \""  " -0.40%\", \"SWT 0.50%
> > fwd: 0.11%\", \""
> > #[5] " -0.32%\", \"SWT 0.50% fwd: 0.14%\", \""  " -0.23%\", \"SWT 0.50%
> > fwd: 0.17%\", \""
> > #[7] " -0.14%\", \"SWT 0.50% fwd: 0.20%\", \""  " -0.05%\", \"SWT 0.50%
> > fwd: 0.23%\", \""
> > #[9] " 0.07%\", \"SWT 0.50% fwd: 0.25%\", \""   " 0.15%\", \"SWT 0.50%
> fwd:
> > 0.27%\", \""
> > #[11] " 0.22%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.29%\", \"SWT 0.50%
> > fwd: 0.28%\", \n\""
> > #[13] " 0.32%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.34%\", \"SWT 0.50%
> > fwd: 0.28%\", \""
> > #[15] " 0.35%\", \"SWT 0.50% fwd: 0.26%\", \""   " 0.33%\", \"SWT 0.50%
> > fwd: 0.25%\", \""
> > #[17] " 0.28%\", \"SWT 0.50% fwd: 0.22%\", \""   " 0.26%\", \"SWT 0.50%
> > fwd: 0.20%\", \""
> > #[19] " 0.21%\", \"SWT 0.50% fwd: 0.18%\", \""   " 0.13%\", \""
> >
> > #[21] " 0.11%\", \""                             " 0.08%\")"
> >
> > txt1<-strsplit(as.character(df),'SWT 0.50% fwd:',"x")
> > #[[1]]
> > #[1] "c(\"CAP ATM Fwd: -0.49%\", \""
> >
> > #[2] " 0.05%\", \"CAP ATM Fwd: -0.46%\", \""
> >
> > #[3] " 0.08%\", \"CAP ATM Fwd: -0.40%\", \""
> >
> > #[4] " 0.11%\", \"CAP ATM Fwd: -0.32%\", \""
> >
> > #[5] " 0.14%\", \"CAP ATM Fwd: -0.23%\", \""
> >
> > #[6] " 0.17%\", \"CAP ATM Fwd: -0.14%\", \""
> >
> > #[7] " 0.20%\", \"CAP ATM Fwd: -0.05%\", \""
> >
> > #[8] " 0.23%\", \"CAP ATM Fwd: 0.07%\", \""
> >
> > #[9] " 0.25%\", \"CAP ATM Fwd: 0.15%\", \""
> >
> > #[10] " 0.27%\", \"CAP ATM Fwd: 0.22%\", \""
> >
> > #[11] " 0.28%\", \"CAP ATM Fwd: 0.29%\", \""
> >
> > #[12] " 0.28%\", \n\"CAP ATM Fwd: 0.32%\", \""
> >
> > #[13] " 0.28%\", \"CAP ATM Fwd: 0.34%\", \""
> >
> > #[14] " 0.28%\", \"CAP ATM Fwd: 0.35%\", \""
> >
> > #[15] " 0.26%\", \"CAP ATM Fwd: 0.33%\", \""
> >
> > #[16] " 0.25%\", \"CAP ATM Fwd: 0.28%\", \""
> >
> > #[17] " 0.22%\", \"CAP ATM Fwd: 0.26%\", \""
> >
> > #[18] " 0.20%\", \"CAP ATM Fwd: 0.21%\", \""
> >
> > #[19] " 0.18%\", \"CAP ATM Fwd: 0.13%\", \"CAP ATM Fwd: 0.11%\", \"CAP
> ATM
> > Fwd: 0.08%\")"
> >
> > Many thanks,
> > Emm
> >
>
> Hi Emm
>
> try this:
>
>     my.data <- list()
>     my.data$Strike <- c("CAP ATM Fwd: -0.49%",
>                         "SWT 0.50% fwd: 0.05%",
>                         "CAP ATM Fwd: -0.46%",
>                         "SWT 0.50% fwd: 0.08%",
>                         "CAP ATM Fwd: -0.40%",
>                         "SWT 0.50% fwd: 0.11%")
>     res <- strsplit(my.data$Strike, ":")
>     ## [[1]]
>     ## [1] "CAP ATM Fwd" " -0.49%"
>     ##
>     ## [[2]]
>     ## [1] "SWT 0.50% fwd" " 0.05%"
>     ##
>     ## [[3]]
>     ## [1] "CAP ATM Fwd" " -0.46%"
>     ##
>     ## [[4]]
>     ## [1] "SWT 0.50% fwd" " 0.08%"
>     ##
>     ## [[5]]
>     ## [1] "CAP ATM Fwd" " -0.40%"
>     ##
>     ## [[6]]
>     ## [1] "SWT 0.50% fwd" " 0.11%"
>
>     col1 <- sapply(res, `[[`, 1L)
>     col2 <- sapply(res, `[[`, 2L)
>     col2 <- as.numeric(sub("%", "", col2, fixed = TRUE))/100
>     res <- data.frame(col1, col2)
>     ##            col1    col2
>     ## 1   CAP ATM Fwd -0.0049
>     ## 2 SWT 0.50% fwd  0.0005
>     ## 3   CAP ATM Fwd -0.0046
>     ## 4 SWT 0.50% fwd  0.0008
>     ## 5   CAP ATM Fwd -0.0040
>     ## 6 SWT 0.50% fwd  0.0011
>
> If CAP and SWT rows alternate,  you can easily extract
> every second row:
>
>     i <- seq(from = 1, to = nrow(res), by = 2)
>     res[i, ]
>     ##           col1   col2
>     ## 1 CAP ATM Fwd -0.0049
>     ## 3 CAP ATM Fwd -0.0046
>     ## 5 CAP ATM Fwd -0.0040
>     res[i + 1, ]
>     ##            col1   col2
>     ## 2 SWT 0.50% fwd 0.0005
>     ## 4 SWT 0.50% fwd 0.0008
>     ## 6 SWT 0.50% fwd 0.0011
>
>
> kind regards
>     Enrico
>
> > On Fri, Mar 19, 2021 at 9:07 PM Enrico Schumann <es at enricoschumann.net>
> > wrote:
> >
> >> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
> >>
> >> > Hello Enrico,
> >> >
> >> > thanks for the feedback: this is what I have:
> >> > As you can see we have to things here:
> >> >
> >> >   "CAP ATM Fwd"   and  SWT 0.50% fwd
> >> >
> >> > strsplit(as.character(df),':', '')# separate the column entry into
> >> > multiples specified but not organized into tables.
> >> > [[1]]
> >> >  [1] "c(\"CAP ATM Fwd"            " -0.49%\", \"SWT 0.50% fwd" "
> 0.05%\",
> >> > \"CAP ATM Fwd"    " -0.46%\", \"SWT 0.50% fwd"
> >> >  [5] " 0.08%\", \"CAP ATM Fwd"    " -0.40%\", \"SWT 0.50% fwd" "
> 0.11%\",
> >> > \"CAP ATM Fwd"    " -0.32%\", \"SWT 0.50% fwd"
> >> >  [9] " 0.14%\", \"CAP ATM Fwd"    " -0.23%\", \"SWT 0.50% fwd" "
> 0.17%\",
> >> > \"CAP ATM Fwd"    " -0.14%\", \"SWT 0.50% fwd"
> >> > [13] " 0.20%\", \"CAP ATM Fwd"    " -0.05%\", \"SWT 0.50% fwd" "
> 0.23%\",
> >> > \"CAP ATM Fwd"    " 0.07%\", \"SWT 0.50% fwd"
> >> > [17] " 0.25%\", \"CAP ATM Fwd"    " 0.15%\", \"SWT 0.50% fwd"  "
> 0.27%\",
> >> > \"CAP ATM Fwd"    " 0.22%\", \"SWT 0.50% fwd"
> >> >
> >> > Many thanks
> >> > Emmanuel
> >> >
> >>
> >> (I put R-SIG-Finance into Cc. again.)
> >>
> >>
> >> As I said, please provide a reproducible example: use
> >> ?dput to provide example data, and also describe what
> >> you want to achieve.  Perhaps this helps:
> >>
> >>   txt <- c("CAP ATM Fwd: -0.49%", "CAP ATM Fwd: -0.49%")
> >>   spl <- strsplit(txt, ":", fixed = TRUE)
> >>   ## [[1]]
> >>   ## [1] "CAP ATM Fwd" " -0.49%"
> >>   ##
> >>   ## [[2]]
> >>   ## [1] "CAP ATM Fwd" " -0.49%"
> >>
> >>   sapply(spl, `[[`, 1)  ## column 1
> >>   ## [1] "CAP ATM Fwd" "CAP ATM Fwd"
> >>
> >>   sapply(spl, `[[`, 2)  ## column 2
> >>   ## [1] " -0.49%" " -0.49%"
> >>
> >> Now you can remove the '%' and call 'as.numeric' and so on....
> >>
> >> [...]
> >>
> >> > On Fri, Mar 19, 2021 at 9:59 AM Enrico Schumann <
> es at enricoschumann.net>
> >> > wrote:
> >> >
> >> >> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
> >> >>
> >> >> > Dear All,
> >> >> >
> >> >> > Please, I am working on raw financial data and would  like to have
> the
> >> >> data
> >> >> > cleaned. I am working on it a bit further and will be very grateful
> >> for
> >> >> any
> >> >> > idea or support. Below are my codes and results.
> >> >> > I would like to have the numbers  after the semi-columns separate.
> >> >> >
> >> >> >
> >> >> > Strike<-unlist(c(my.data$Strike))
> >> >> > #
> >> >> > #
> >> >> > Strike <- sapply(Strike[], trimws) # l??scht ??berfl??ssige
> >> Leerzeichen
> >> >> > Strike <- Strike[-1] # l??scht die erste Zeile
> >> >> >
> >> >> >  CAP ATM Fwd: -0.49%                SWT 0.50% fwd: 0.05%
> >> >> >               "CAP ATM Fwd: -0.49%"              "SWT 0.50% fwd:
> >> 0.05%"
> >> >> >         CAP ATM Fwd: -0.46%                SWT 0.50% fwd: 0.08%
> >> >> >               "CAP ATM Fwd: -0.46%"              "SWT 0.50% fwd:
> >> 0.08%"
> >> >> >         CAP ATM Fwd: -0.40%                SWT 0.50% fwd: 0.11%
> >> >> >               "CAP ATM Fwd: -0.40%"              "SWT 0.50% fwd:
> >> 0.11%"
> >> >> >         CAP ATM Fwd: -0.32%                SWT 0.50% fwd: 0.14%
> >> >> >               "CAP ATM Fwd: -0.32%"              "SWT 0.50% fwd:
> >> 0.14%"
> >> >> >         CAP ATM Fwd: -0.23%                SWT 0.50% fwd: 0.17%
> >> >> >               "CAP ATM Fwd: -0.23%"              "SWT 0.50% fwd:
> >> 0.17%"
> >> >> >         CAP ATM Fwd: -0.14%                SWT 0.50% fwd: 0.20%
> >> >> >               "CAP ATM Fwd: -0.14%"              "SWT 0.50% fwd:
> >> 0.20%"
> >> >> >         CAP ATM Fwd: -0.05%                SWT 0.50% fwd: 0.23%
> >> >> >               "CAP ATM Fwd: -0.05%"              "SWT 0.50% fwd:
> >> 0.23%"
> >> >> >          CAP ATM Fwd: 0.07%                SWT 0.50% fwd: 0.25%
> >> >> >                "CAP ATM Fwd: 0.07%"              "SWT 0.50% fwd:
> >> 0.25%"
> >> >> >
> >> >> > Many thanks
> >> >> > Emmanuel
> >> >> >
> >> >>
> >> >> Please provide a reproducible example, so that people can help you.
> >> >>
> >> >> (It's not what you have written, but did you mean "the
> >> >>  numbers after the colons"? Then perhaps look at
> >> >>  ?strsplit :
> >> >>
> >> >>    strsplit("CAP ATM Fwd: -0.49%", split = ":", fixed = TRUE)
> >> >>    ## [[1]]
> >> >>    ## [1] "CAP ATM Fwd" " -0.49%"
> >> >>
> >> >>    sapply(strsplit("CAP ATM Fwd: -0.49%", ":", fixed = TRUE), `[[`,
> 2L)
> >> >>    ## [1] " -0.49%"
> >> >>
> >> >> )
>
> --
> Enrico Schumann
> Lucerne, Switzerland
> http://enricoschumann.net
>

<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
Virus-free.
www.avast.com
<https://www.avast.com/sig-email?utm_medium=email&utm_source=link&utm_campaign=sig-email&utm_content=webmail>
<#DAB4FAD8-2DD7-40BB-A1B8-4E2AA1F9FDF2>

	[[alternative HTML version deleted]]


From e@ @end|ng |rom enr|co@chum@nn@net  Sun Mar 21 22:14:13 2021
From: e@ @end|ng |rom enr|co@chum@nn@net (Enrico Schumann)
Date: Sun, 21 Mar 2021 22:14:13 +0100
Subject: [R-SIG-Finance] Data
In-Reply-To: <CAHpDiwRLUkOarDhEdVLbt76CtXstB_YhnBo0x2Q6uPczQmXAQw@mail.gmail.com>
 (Emmanuel Senyo Fianu's message of "Sat, 20 Mar 2021 15:13:37 +0100")
References: <CAHpDiwRwhX1ywxHv_RHhs_kh7LXUuR1sGSxVx+HX0bzH4jqLOA@mail.gmail.com>
 <874kh7a594.fsf@enricoschumann.net>
 <CAHpDiwT2Gc7dh-E1wmie-Ax+gGABCx0xHK-DEFBj-9e3tkXQsg@mail.gmail.com>
 <87zgyy7vqm.fsf@enricoschumann.net>
 <CAHpDiwQG1z4+p4di9HKKAZx0A=xH63=FWNVsjj7a0cOtf9m5Tw@mail.gmail.com>
 <87r1ka6xwt.fsf@enricoschumann.net>
 <CAHpDiwRLUkOarDhEdVLbt76CtXstB_YhnBo0x2Q6uPczQmXAQw@mail.gmail.com>
Message-ID: <875z1kciqi.fsf@enricoschumann.net>

On Sat, 20 Mar 2021, Fianu, Emmanuel Senyo writes:

> Hi Enrico,
>
> thanks for the feedback.
> I am having something different here:
> I would be grateful for your assistance.
>
> res <- strsplit(as.character(my.data$Strike), ":")
> #[[1]]
> #[1] "character(0)"
>
> #[[2]]
> #[1] "c(\"CAP ATM Fwd\", \" -0.49%\")"
>
> #[[3]]
> #[1] "c(\"SWT 0.50% fwd\", \" 0.05%\")"
>
> #[[4]]
> #[1] "c(\"CAP ATM Fwd\", \" -0.46%\")"
>
> #[[5]]
> #[1] "c(\"SWT 0.50% fwd\", \" 0.08%\")"
>

Please show what 'my.data$Strike' is, by using ?str and
?dput.  (It looks as if it's a data frame; but 'strsplit'
expects a character vector.)

    Enrico
    
>
>
> col1 <- sapply(res, `[[`, 1L)
>
> #> col1
> #[1] "character(0)"                     "c(\"CAP ATM Fwd\", \" -0.49%\")"
>  "c(\"SWT 0.50% fwd\", \" 0.05%\")"
> #[4] "c(\"CAP ATM Fwd\", \" -0.46%\")"  "c(\"SWT 0.50% fwd\", \" 0.08%\")"
> "c(\"CAP ATM Fwd\", \" -0.40%\")"
> #[7] "c(\"SWT 0.50% fwd\", \" 0.11%\")" "c(\"CAP ATM Fwd\", \" -0.32%\")"
>  "c(\"SWT 0.50% fwd\", \" 0.14%\")"
> #[10] "c(\"CAP ATM Fwd\", \" -0.23%\")"  "c(\"SWT 0.50% fwd\", \" 0.17%\")"
> "c(\"CAP ATM Fwd\", \" -0.14%\")"
>
>
> col2 <- sapply(res, `[[`, 2L)
>
>
> #Error in FUN(X[[i]], ...) : subscript out of bounds
>
> col2 <- as.numeric(sub("%", "", col2, fixed = TRUE))/100
> res <- data.frame(col1, col2)
>
>
> #col1 col2
> #1                  character(0)   NA
> #2   c("CAP ATM Fwd", " -0.49%")   NA
> #3  c("SWT 0.50% fwd", " 0.05%")   NA
> #4   c("CAP ATM Fwd", " -0.46%")   NA
> #5  c("SWT 0.50% fwd", " 0.08%")   NA
> #6   c("CAP ATM Fwd", " -0.40%")   NA
> #7  c("SWT 0.50% fwd", " 0.11%")   NA
> #8   c("CAP ATM Fwd", " -0.32%")   NA
>
> i <- seq(from = 1, to = nrow(res), by = 2)
> res[i, ]
> #col1 col2
> #1                  character(0)   NA
> #3  c("SWT 0.50% fwd", " 0.05%")   NA
> #5  c("SWT 0.50% fwd", " 0.08%")   NA
> #7  c("SWT 0.50% fwd", " 0.11%")   NA
> #9  c("SWT 0.50% fwd", " 0.14%")   NA
> #11 c("SWT 0.50% fwd", " 0.17%")   N
> res[i + 1, ]
>
> #2  c("CAP ATM Fwd", " -0.49%")   NA
> #4  c("CAP ATM Fwd", " -0.46%")   NA
> #6  c("CAP ATM Fwd", " -0.40%")   NA
> #8  c("CAP ATM Fwd", " -0.32%")   NA
> #10 c("CAP ATM Fwd", " -0.23%")   NA
>
> Many thanks,
> Emmanuel

[...]

> On Sat, Mar 20, 2021 at 9:18 AM Enrico Schumann <es at enricoschumann.net>
> wrote:
>
>> On Sat, 20 Mar 2021, Fianu, Emmanuel Senyo writes:
>>
>> > Hello Enrico,
>> >
>> > here is a reproducible result:
>> > As you could see, I have separated CAP ATM Fwd and SWT 0.5% fwd
>> > Now, I move on to have two separate tables). I would be grateful for any
>> > support.
>> > Currently, I want to remove all:  "c(\"" and if necessary have decimals
>> > instead of % symbols.
>> > #my.data$Strike
>> > #1  CAP ATM Fwd: -0.49%
>> > #2 SWT 0.50% fwd: 0.05%
>> > #  3  CAP ATM Fwd: -0.46%
>> > #4 SWT 0.50% fwd: 0.08%
>> > #  5  CAP ATM Fwd: -0.40%
>> > #6 SWT 0.50% fwd: 0.11%
>> >
>> >
>> >   txt0<-strsplit(as.character(df),'CAP ATM Fwd:', "")
>> > #[[1]]
>> > #[1] "c(\""                                     " -0.49%\", \"SWT 0.50%
>> > fwd: 0.05%\", \""
>> > #[3] " -0.46%\", \"SWT 0.50% fwd: 0.08%\", \""  " -0.40%\", \"SWT 0.50%
>> > fwd: 0.11%\", \""
>> > #[5] " -0.32%\", \"SWT 0.50% fwd: 0.14%\", \""  " -0.23%\", \"SWT 0.50%
>> > fwd: 0.17%\", \""
>> > #[7] " -0.14%\", \"SWT 0.50% fwd: 0.20%\", \""  " -0.05%\", \"SWT 0.50%
>> > fwd: 0.23%\", \""
>> > #[9] " 0.07%\", \"SWT 0.50% fwd: 0.25%\", \""   " 0.15%\", \"SWT 0.50%
>> fwd:
>> > 0.27%\", \""
>> > #[11] " 0.22%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.29%\", \"SWT 0.50%
>> > fwd: 0.28%\", \n\""
>> > #[13] " 0.32%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.34%\", \"SWT 0.50%
>> > fwd: 0.28%\", \""
>> > #[15] " 0.35%\", \"SWT 0.50% fwd: 0.26%\", \""   " 0.33%\", \"SWT 0.50%
>> > fwd: 0.25%\", \""
>> > #[17] " 0.28%\", \"SWT 0.50% fwd: 0.22%\", \""   " 0.26%\", \"SWT 0.50%
>> > fwd: 0.20%\", \""
>> > #[19] " 0.21%\", \"SWT 0.50% fwd: 0.18%\", \""   " 0.13%\", \""
>> >
>> > #[21] " 0.11%\", \""                             " 0.08%\")"
>> >
>> > txt1<-strsplit(as.character(df),'SWT 0.50% fwd:',"x")
>> > #[[1]]
>> > #[1] "c(\"CAP ATM Fwd: -0.49%\", \""
>> >
>> > #[2] " 0.05%\", \"CAP ATM Fwd: -0.46%\", \""
>> >
>> > #[3] " 0.08%\", \"CAP ATM Fwd: -0.40%\", \""
>> >
>> > #[4] " 0.11%\", \"CAP ATM Fwd: -0.32%\", \""
>> >
>> > #[5] " 0.14%\", \"CAP ATM Fwd: -0.23%\", \""
>> >
>> > #[6] " 0.17%\", \"CAP ATM Fwd: -0.14%\", \""
>> >
>> > #[7] " 0.20%\", \"CAP ATM Fwd: -0.05%\", \""
>> >
>> > #[8] " 0.23%\", \"CAP ATM Fwd: 0.07%\", \""
>> >
>> > #[9] " 0.25%\", \"CAP ATM Fwd: 0.15%\", \""
>> >
>> > #[10] " 0.27%\", \"CAP ATM Fwd: 0.22%\", \""
>> >
>> > #[11] " 0.28%\", \"CAP ATM Fwd: 0.29%\", \""
>> >
>> > #[12] " 0.28%\", \n\"CAP ATM Fwd: 0.32%\", \""
>> >
>> > #[13] " 0.28%\", \"CAP ATM Fwd: 0.34%\", \""
>> >
>> > #[14] " 0.28%\", \"CAP ATM Fwd: 0.35%\", \""
>> >
>> > #[15] " 0.26%\", \"CAP ATM Fwd: 0.33%\", \""
>> >
>> > #[16] " 0.25%\", \"CAP ATM Fwd: 0.28%\", \""
>> >
>> > #[17] " 0.22%\", \"CAP ATM Fwd: 0.26%\", \""
>> >
>> > #[18] " 0.20%\", \"CAP ATM Fwd: 0.21%\", \""
>> >
>> > #[19] " 0.18%\", \"CAP ATM Fwd: 0.13%\", \"CAP ATM Fwd: 0.11%\", \"CAP
>> ATM
>> > Fwd: 0.08%\")"
>> > #df <- as.data.frame(my.data$Strike)
>> >  #head(df)
>> > #my.data$Strike
>> > #1  CAP ATM Fwd: -0.49%
>> > #2 SWT 0.50% fwd: 0.05%
>> > #  3  CAP ATM Fwd: -0.46%
>> > #4 SWT 0.50% fwd: 0.08%
>> > #  5  CAP ATM Fwd: -0.40%
>> > #6 SWT 0.50% fwd: 0.11%
>> >
>> >   txt0<-strsplit(as.character(df),'CAP ATM Fwd:', "")
>> >
>> > #[[1]]
>> > #[1] "c(\""                                     " -0.49%\", \"SWT 0.50%
>> > fwd: 0.05%\", \""
>> > #[3] " -0.46%\", \"SWT 0.50% fwd: 0.08%\", \""  " -0.40%\", \"SWT 0.50%
>> > fwd: 0.11%\", \""
>> > #[5] " -0.32%\", \"SWT 0.50% fwd: 0.14%\", \""  " -0.23%\", \"SWT 0.50%
>> > fwd: 0.17%\", \""
>> > #[7] " -0.14%\", \"SWT 0.50% fwd: 0.20%\", \""  " -0.05%\", \"SWT 0.50%
>> > fwd: 0.23%\", \""
>> > #[9] " 0.07%\", \"SWT 0.50% fwd: 0.25%\", \""   " 0.15%\", \"SWT 0.50%
>> fwd:
>> > 0.27%\", \""
>> > #[11] " 0.22%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.29%\", \"SWT 0.50%
>> > fwd: 0.28%\", \n\""
>> > #[13] " 0.32%\", \"SWT 0.50% fwd: 0.28%\", \""   " 0.34%\", \"SWT 0.50%
>> > fwd: 0.28%\", \""
>> > #[15] " 0.35%\", \"SWT 0.50% fwd: 0.26%\", \""   " 0.33%\", \"SWT 0.50%
>> > fwd: 0.25%\", \""
>> > #[17] " 0.28%\", \"SWT 0.50% fwd: 0.22%\", \""   " 0.26%\", \"SWT 0.50%
>> > fwd: 0.20%\", \""
>> > #[19] " 0.21%\", \"SWT 0.50% fwd: 0.18%\", \""   " 0.13%\", \""
>> >
>> > #[21] " 0.11%\", \""                             " 0.08%\")"
>> >
>> > txt1<-strsplit(as.character(df),'SWT 0.50% fwd:',"x")
>> > #[[1]]
>> > #[1] "c(\"CAP ATM Fwd: -0.49%\", \""
>> >
>> > #[2] " 0.05%\", \"CAP ATM Fwd: -0.46%\", \""
>> >
>> > #[3] " 0.08%\", \"CAP ATM Fwd: -0.40%\", \""
>> >
>> > #[4] " 0.11%\", \"CAP ATM Fwd: -0.32%\", \""
>> >
>> > #[5] " 0.14%\", \"CAP ATM Fwd: -0.23%\", \""
>> >
>> > #[6] " 0.17%\", \"CAP ATM Fwd: -0.14%\", \""
>> >
>> > #[7] " 0.20%\", \"CAP ATM Fwd: -0.05%\", \""
>> >
>> > #[8] " 0.23%\", \"CAP ATM Fwd: 0.07%\", \""
>> >
>> > #[9] " 0.25%\", \"CAP ATM Fwd: 0.15%\", \""
>> >
>> > #[10] " 0.27%\", \"CAP ATM Fwd: 0.22%\", \""
>> >
>> > #[11] " 0.28%\", \"CAP ATM Fwd: 0.29%\", \""
>> >
>> > #[12] " 0.28%\", \n\"CAP ATM Fwd: 0.32%\", \""
>> >
>> > #[13] " 0.28%\", \"CAP ATM Fwd: 0.34%\", \""
>> >
>> > #[14] " 0.28%\", \"CAP ATM Fwd: 0.35%\", \""
>> >
>> > #[15] " 0.26%\", \"CAP ATM Fwd: 0.33%\", \""
>> >
>> > #[16] " 0.25%\", \"CAP ATM Fwd: 0.28%\", \""
>> >
>> > #[17] " 0.22%\", \"CAP ATM Fwd: 0.26%\", \""
>> >
>> > #[18] " 0.20%\", \"CAP ATM Fwd: 0.21%\", \""
>> >
>> > #[19] " 0.18%\", \"CAP ATM Fwd: 0.13%\", \"CAP ATM Fwd: 0.11%\", \"CAP
>> ATM
>> > Fwd: 0.08%\")"
>> >
>> > Many thanks,
>> > Emm
>> >
>>
>> Hi Emm
>>
>> try this:
>>
>>     my.data <- list()
>>     my.data$Strike <- c("CAP ATM Fwd: -0.49%",
>>                         "SWT 0.50% fwd: 0.05%",
>>                         "CAP ATM Fwd: -0.46%",
>>                         "SWT 0.50% fwd: 0.08%",
>>                         "CAP ATM Fwd: -0.40%",
>>                         "SWT 0.50% fwd: 0.11%")
>>     res <- strsplit(my.data$Strike, ":")
>>     ## [[1]]
>>     ## [1] "CAP ATM Fwd" " -0.49%"
>>     ##
>>     ## [[2]]
>>     ## [1] "SWT 0.50% fwd" " 0.05%"
>>     ##
>>     ## [[3]]
>>     ## [1] "CAP ATM Fwd" " -0.46%"
>>     ##
>>     ## [[4]]
>>     ## [1] "SWT 0.50% fwd" " 0.08%"
>>     ##
>>     ## [[5]]
>>     ## [1] "CAP ATM Fwd" " -0.40%"
>>     ##
>>     ## [[6]]
>>     ## [1] "SWT 0.50% fwd" " 0.11%"
>>
>>     col1 <- sapply(res, `[[`, 1L)
>>     col2 <- sapply(res, `[[`, 2L)
>>     col2 <- as.numeric(sub("%", "", col2, fixed = TRUE))/100
>>     res <- data.frame(col1, col2)
>>     ##            col1    col2
>>     ## 1   CAP ATM Fwd -0.0049
>>     ## 2 SWT 0.50% fwd  0.0005
>>     ## 3   CAP ATM Fwd -0.0046
>>     ## 4 SWT 0.50% fwd  0.0008
>>     ## 5   CAP ATM Fwd -0.0040
>>     ## 6 SWT 0.50% fwd  0.0011
>>
>> If CAP and SWT rows alternate,  you can easily extract
>> every second row:
>>
>>     i <- seq(from = 1, to = nrow(res), by = 2)
>>     res[i, ]
>>     ##           col1   col2
>>     ## 1 CAP ATM Fwd -0.0049
>>     ## 3 CAP ATM Fwd -0.0046
>>     ## 5 CAP ATM Fwd -0.0040
>>     res[i + 1, ]
>>     ##            col1   col2
>>     ## 2 SWT 0.50% fwd 0.0005
>>     ## 4 SWT 0.50% fwd 0.0008
>>     ## 6 SWT 0.50% fwd 0.0011
>>
>>
>> kind regards
>>     Enrico
>>
>> > On Fri, Mar 19, 2021 at 9:07 PM Enrico Schumann <es at enricoschumann.net>
>> > wrote:
>> >
>> >> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
>> >>
>> >> > Hello Enrico,
>> >> >
>> >> > thanks for the feedback: this is what I have:
>> >> > As you can see we have to things here:
>> >> >
>> >> >   "CAP ATM Fwd"   and  SWT 0.50% fwd
>> >> >
>> >> > strsplit(as.character(df),':', '')# separate the column entry into
>> >> > multiples specified but not organized into tables.
>> >> > [[1]]
>> >> >  [1] "c(\"CAP ATM Fwd"            " -0.49%\", \"SWT 0.50% fwd" "
>> 0.05%\",
>> >> > \"CAP ATM Fwd"    " -0.46%\", \"SWT 0.50% fwd"
>> >> >  [5] " 0.08%\", \"CAP ATM Fwd"    " -0.40%\", \"SWT 0.50% fwd" "
>> 0.11%\",
>> >> > \"CAP ATM Fwd"    " -0.32%\", \"SWT 0.50% fwd"
>> >> >  [9] " 0.14%\", \"CAP ATM Fwd"    " -0.23%\", \"SWT 0.50% fwd" "
>> 0.17%\",
>> >> > \"CAP ATM Fwd"    " -0.14%\", \"SWT 0.50% fwd"
>> >> > [13] " 0.20%\", \"CAP ATM Fwd"    " -0.05%\", \"SWT 0.50% fwd" "
>> 0.23%\",
>> >> > \"CAP ATM Fwd"    " 0.07%\", \"SWT 0.50% fwd"
>> >> > [17] " 0.25%\", \"CAP ATM Fwd"    " 0.15%\", \"SWT 0.50% fwd"  "
>> 0.27%\",
>> >> > \"CAP ATM Fwd"    " 0.22%\", \"SWT 0.50% fwd"
>> >> >
>> >> > Many thanks
>> >> > Emmanuel
>> >> >
>> >>
>> >> (I put R-SIG-Finance into Cc. again.)
>> >>
>> >>
>> >> As I said, please provide a reproducible example: use
>> >> ?dput to provide example data, and also describe what
>> >> you want to achieve.  Perhaps this helps:
>> >>
>> >>   txt <- c("CAP ATM Fwd: -0.49%", "CAP ATM Fwd: -0.49%")
>> >>   spl <- strsplit(txt, ":", fixed = TRUE)
>> >>   ## [[1]]
>> >>   ## [1] "CAP ATM Fwd" " -0.49%"
>> >>   ##
>> >>   ## [[2]]
>> >>   ## [1] "CAP ATM Fwd" " -0.49%"
>> >>
>> >>   sapply(spl, `[[`, 1)  ## column 1
>> >>   ## [1] "CAP ATM Fwd" "CAP ATM Fwd"
>> >>
>> >>   sapply(spl, `[[`, 2)  ## column 2
>> >>   ## [1] " -0.49%" " -0.49%"
>> >>
>> >> Now you can remove the '%' and call 'as.numeric' and so on....
>> >>
>> >> [...]
>> >>
>> >> > On Fri, Mar 19, 2021 at 9:59 AM Enrico Schumann <
>> es at enricoschumann.net>
>> >> > wrote:
>> >> >
>> >> >> On Fri, 19 Mar 2021, Fianu, Emmanuel Senyo writes:
>> >> >>
>> >> >> > Dear All,
>> >> >> >
>> >> >> > Please, I am working on raw financial data and would  like to have
>> the
>> >> >> data
>> >> >> > cleaned. I am working on it a bit further and will be very grateful
>> >> for
>> >> >> any
>> >> >> > idea or support. Below are my codes and results.
>> >> >> > I would like to have the numbers  after the semi-columns separate.
>> >> >> >
>> >> >> >
>> >> >> > Strike<-unlist(c(my.data$Strike))
>> >> >> > #
>> >> >> > #
>> >> >> > Strike <- sapply(Strike[], trimws) # l??scht ??berfl??ssige
>> >> Leerzeichen
>> >> >> > Strike <- Strike[-1] # l??scht die erste Zeile
>> >> >> >
>> >> >> >  CAP ATM Fwd: -0.49%                SWT 0.50% fwd: 0.05%
>> >> >> >               "CAP ATM Fwd: -0.49%"              "SWT 0.50% fwd:
>> >> 0.05%"
>> >> >> >         CAP ATM Fwd: -0.46%                SWT 0.50% fwd: 0.08%
>> >> >> >               "CAP ATM Fwd: -0.46%"              "SWT 0.50% fwd:
>> >> 0.08%"
>> >> >> >         CAP ATM Fwd: -0.40%                SWT 0.50% fwd: 0.11%
>> >> >> >               "CAP ATM Fwd: -0.40%"              "SWT 0.50% fwd:
>> >> 0.11%"
>> >> >> >         CAP ATM Fwd: -0.32%                SWT 0.50% fwd: 0.14%
>> >> >> >               "CAP ATM Fwd: -0.32%"              "SWT 0.50% fwd:
>> >> 0.14%"
>> >> >> >         CAP ATM Fwd: -0.23%                SWT 0.50% fwd: 0.17%
>> >> >> >               "CAP ATM Fwd: -0.23%"              "SWT 0.50% fwd:
>> >> 0.17%"
>> >> >> >         CAP ATM Fwd: -0.14%                SWT 0.50% fwd: 0.20%
>> >> >> >               "CAP ATM Fwd: -0.14%"              "SWT 0.50% fwd:
>> >> 0.20%"
>> >> >> >         CAP ATM Fwd: -0.05%                SWT 0.50% fwd: 0.23%
>> >> >> >               "CAP ATM Fwd: -0.05%"              "SWT 0.50% fwd:
>> >> 0.23%"
>> >> >> >          CAP ATM Fwd: 0.07%                SWT 0.50% fwd: 0.25%
>> >> >> >                "CAP ATM Fwd: 0.07%"              "SWT 0.50% fwd:
>> >> 0.25%"
>> >> >> >
>> >> >> > Many thanks
>> >> >> > Emmanuel
>> >> >> >
>> >> >>
>> >> >> Please provide a reproducible example, so that people can help you.
>> >> >>
>> >> >> (It's not what you have written, but did you mean "the
>> >> >>  numbers after the colons"? Then perhaps look at
>> >> >>  ?strsplit :
>> >> >>
>> >> >>    strsplit("CAP ATM Fwd: -0.49%", split = ":", fixed = TRUE)
>> >> >>    ## [[1]]
>> >> >>    ## [1] "CAP ATM Fwd" " -0.49%"
>> >> >>
>> >> >>    sapply(strsplit("CAP ATM Fwd: -0.49%", ":", fixed = TRUE), `[[`,
>> 2L)
>> >> >>    ## [1] " -0.49%"
>> >> >>
>> >> >> )

[...]


-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From @gent@ @end|ng |rom medd@t@|nc@com  Tue Mar 30 02:46:35 2021
From: @gent@ @end|ng |rom medd@t@|nc@com (H)
Date: Mon, 29 Mar 2021 20:46:35 -0400
Subject: [R-SIG-Finance] Retrieving corporate event information for listed
 companies
Message-ID: <3c9d31e7-cf9e-4914-596a-60944f973cb0@meddatainc.com>

I would appreciate thoughts on a question pertaining to corporate event information:

What would be the "best" source for automating retrieval of eg dividends, ex-dividend dates, earning dates going forward etc.?

Would it be finance.yahoo.com? Can it "easily" be retrieved from Edgar parsing XML files?

I am well aware the terms "best" and "easily" are in the eye of the beholder, thus different opinions are welcome.


