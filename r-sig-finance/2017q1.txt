From josh.m.ulrich at gmail.com  Wed Jan  4 15:11:23 2017
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Wed, 4 Jan 2017 08:11:23 -0600
Subject: [R-SIG-Finance] R/Finance 2017: Call for Papers
Message-ID: <CAPPM_gSjwZ4CGH2+1fK_Tm0ir9-4fuE5kq7+ixc_-jTqcMxv5g@mail.gmail.com>

Call for Papers:

R/Finance 2017: Applied Finance with R
May 19 and 20, 2017
University of Illinois at Chicago

The ninth annual R/Finance conference for applied finance using R will
be held on May 19 and 20, 2017 in Chicago, IL, USA at the University
of Illinois at Chicago.  The conference will cover topics including
portfolio management, time series analysis, advanced risk tools,
high-performance computing, market microstructure, and econometrics.
All will be discussed within the context of using R as a primary tool
for financial risk management, portfolio construction, and trading.

Over the past eight years, R/Finance has included attendees from
around the world.  It has featured presentations from prominent
academics and practitioners, and we anticipate another exciting
line-up for 2017.

We invite you to submit complete papers in pdf format for
consideration.  We will also consider one-page abstracts (in txt or
pdf format) although more complete papers are preferred.  We welcome
submissions for both full talks and abbreviated "lightning talks."
Both academic and practitioner proposals related to R are encouraged.

All slides will be made publicly available at conference time.
Presenters are strongly encouraged to provide working R code to
accompany the slides.  Data sets should also be made public for the
purposes of reproducibility (though we realize this may be limited due
to contracts with data vendors).  Preference may be given to
presenters who have released R packages.

Financial assistance for travel and accommodation may be available to
presenters, however requests must be made at the time of submission.
Assistance will be granted at the discretion of the conference
committee.

Please submit proposals online at http://go.uic.edu/rfinsubmit.

Submissions will be reviewed and accepted on a rolling basis with a
final deadline of February 28, 2017.  Submitters will be notified via
email by March 31, 2017 of acceptance, presentation length, and
financial assistance (if requested).

Additional details will be announced via the conference website

http://www.RinFinance.com/

as they become available.  Information on previous years' presenters
and their presentations are also at the conference website.  We will
make a separate announcement when registration opens.

For the program committee:
Gib Bassett, Peter Carl, Dirk Eddelbuettel, Brian Peterson, Dale
Rosenthal, Jeffrey Ryan, Joshua Ulrich


-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2016 | www.rinfinance.com


From frank at pampush.net  Thu Jan  5 18:03:00 2017
From: frank at pampush.net (francis pampush)
Date: Thu, 5 Jan 2017 17:03:00 +0000
Subject: [R-SIG-Finance] Reply message
Message-ID: <DM3PR15MB106521A3AAB0D26F0735E7ACB9600@DM3PR15MB1065.namprd15.prod.outlook.com>

This is a reply to Mr. Shah's message at:
https://stat.ethz.ch/pipermail/r-sig-finance/2016q4/014160.html

Mr. Shah, you are calling the outputs "standard deviations" when they really are not.
You will need to get under the hood to see how the "standard deviations" are computed in both examples.  I think you will find that the two functions in your examples are actually measuring different things.  Happily, standard deviations feed into both metrics and so the SDs (as well as standard errors) can be recovered and compared as you are trying to do.
Start with your second example (using forecast::auto.arima(x)).  This function produces prediction intervals, not confidence intervals.  However, you (improperly) computed your standard deviations as though those PIs were confidence intervals.  So, you will want to use a different method to recover the standard deviation (or standard error, if that is what you are really after).  I think converting the PI to the related CI will do what you want and allow a direct comparison with your first example results.
If that still does not work, you will want to check to make sure that you are comparing a standard error in example 2 to the standard error that was computed in example 1, and not comparing a standard deviation to a standard error.
Best wishes.



	[[alternative HTML version deleted]]


From agquantr at gmail.com  Thu Jan  5 18:19:14 2017
From: agquantr at gmail.com (Am Gut)
Date: Thu, 5 Jan 2017 12:19:14 -0500
Subject: [R-SIG-Finance] Change Expected Return in fPortfolio
Message-ID: <CACpG4GCQVva=+xj+bzZQzATbK=KSoPbLjzgUzAeO+UVBnHHWmQ@mail.gmail.com>

Hi everyone,

I am wondering if anyone can provide any guidance on how to change the
expected return when optimizing a portfolio using the fPortfolio package in
R. I do not have any code because I have been using the existing
methodology which uses the historical mean return. I am looking to pass an
expected return vector to use in the optimization or atleast change some of
the numbers in the statistics slot.

After reading in my data, I am running this:

ASFSpec = portfolioSpec()
print(ASFSpec)
constraints = "LongOnly"
#Minimum Risk Efficient Portfolio
minriskSpec = portfolioSpec()
targetReturn = getTargetReturn


#existing Portfolio

#Mean-Variance Tangency Portfolio
tgSpec = portfolioSpec()
setRiskFreeRate(tgSpec) = 0
tgPortfolio = tangencyPortfolio(data=ASFts,spec=tgSpec,constraints =
"LongOnly")
print(tgPortfolio)

This outputs:

Title:
 MV Tangency Portfolio
 Estimator:         covEstimator
 Solver:            solveRquadprog
 Optimize:          minRisk
 Constraints:       LongOnly

Portfolio Weights:
    HY    CDX    GBD
0.3835 0.0371 0.5794

Covariance Risk Budgets:
    HY    CDX    GBD
0.0899 0.0024 0.9077

Target Returns and Risks:
  mean    Cov   CVaR    VaR
0.0541 0.3981 0.8580 0.6087


Now I want to change the statistics slot for the initial return of CDX to
say 0.02. I write:

tgPortfolio at data@statistics$mean[2] = 0.02
tgPortfolio = tangencyPortfolio(data=ASFts,spec=tgSpec,constraints =
"LongOnly")
print(tgPortfolio)

Still get the same ouput. I understand why it is not working, but have no
idea on a workaround. Can someone advise me on how to feed in my own mean
returns?

Thanks,

AG

	[[alternative HTML version deleted]]


From frank at pampush.net  Thu Jan  5 20:58:56 2017
From: frank at pampush.net (francis pampush)
Date: Thu, 5 Jan 2017 19:58:56 +0000
Subject: [R-SIG-Finance] Problem with forecast se in the forecast package
Message-ID: <DM3PR15MB1065B49DE724BF0275650D12B9600@DM3PR15MB1065.namprd15.prod.outlook.com>

Mr. Shah, you may need to get under the hood to see how the "standard deviations" are actually computed in both of your examples -  - probably starting with the computation of the "pointest.sd" for your forecast example f2.
According to the help menu for the function forecast() from your second example, the outputs "lower" and "upper" refer to prediction intervals (with the default confidence levels of 80 & 95%).  These are not confidence intervals.  You used those PIs to compute standard deviations as though the PIs were confidence intervals.  If you convert the PIs to the related CIs, you will then be able to make the comparison you are trying to make.
If that does not work, you will next want to check to make sure that you actually are making a standard error-to-standard error (i.e., sd/sqrt(N) for the se of sampling distribution of means).  You don't want to compare a standard deviation to a standard error!
Best wishes.
Frank Pampush


	[[alternative HTML version deleted]]


From diegoperoni at vodafone.it  Tue Jan 10 15:20:33 2017
From: diegoperoni at vodafone.it (Diego Peroni)
Date: Tue, 10 Jan 2017 15:20:33 +0100
Subject: [R-SIG-Finance] add_TA --> Heatmap
In-Reply-To: <CACpG4GCQVva=+xj+bzZQzATbK=KSoPbLjzgUzAeO+UVBnHHWmQ@mail.gmail.com>
References: <CACpG4GCQVva=+xj+bzZQzATbK=KSoPbLjzgUzAeO+UVBnHHWmQ@mail.gmail.com>
Message-ID: <1a6fa209-5fb5-62e4-278d-c7a056ea91aa@vodafone.it>

Hello everybody,

I'm using experimental chart_Series method to plot OHLC bars and I need 
to add an heatmap below (using add_TA I suppose).

Is there any code sample or documentation or "best practice" to 
implement this temporal heatmap?

Thanks
Diego


From johannes.lips at gmail.com  Thu Jan 12 09:16:12 2017
From: johannes.lips at gmail.com (Johannes Lips)
Date: Thu, 12 Jan 2017 09:16:12 +0100
Subject: [R-SIG-Finance] Portfolio management in R for private use
Message-ID: <281d024d-00c8-431e-6279-a885f438733c@gmail.com>

Hi all,

I've just wanted to share some code I've written to keep track of my 
small portfolio in R, since I couldn't find anything suitable on the 
internet.
https://github.com/hannes101/myRportfolio/
I would be glad if someone could offer me some nice documents on good 
ways to keep track on the performance of the whole portfolio and 
possible summaries one could easily obtain. I couldn't really find a lot 
of documentation on all these packages and most of it was rather 
academic and not really suited for a portfolio, mainly following a 
Buy&Hold strategy.
If you have any suggestions or additional comments, please let me know.

All the best,

Johannes


From brian at braverock.com  Thu Jan 12 11:32:06 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Thu, 12 Jan 2017 04:32:06 -0600
Subject: [R-SIG-Finance] Portfolio management in R for private use
In-Reply-To: <281d024d-00c8-431e-6279-a885f438733c@gmail.com>
References: <281d024d-00c8-431e-6279-a885f438733c@gmail.com>
Message-ID: <dda330d9-f559-d3da-53bc-c1df4804357a@braverock.com>

On 01/12/2017 02:16 AM, Johannes Lips wrote:
> Hi all,
>
> I've just wanted to share some code I've written to keep track of my
> small portfolio in R, since I couldn't find anything suitable on the
> internet.
> https://github.com/hannes101/myRportfolio/
> I would be glad if someone could offer me some nice documents on good
> ways to keep track on the performance of the whole portfolio and
> possible summaries one could easily obtain. I couldn't really find a lot
> of documentation on all these packages and most of it was rather
> academic and not really suited for a portfolio, mainly following a
> Buy&Hold strategy.
> If you have any suggestions or additional comments, please let me know.

Johannes,

Thanks for sharing your code.  It is always useful to see how other 
people are using the packages.

I'm a little unclear on what your question is.

I'm also not clear what you are referring to when you discuss 'not 
really suited for a portfolio', since among other things we use blotter 
for reconciliation of accounts doing many thousands of trades per day, 
which is not quite 'buy and hold' nor 'academic'.  Perhaps you could 
provide links to what you've referenced so far?

Anyway, I'll guess at what you might be asking, and see if that 
clarifies things.

You're using addTxns() to load your trades into blotter, which is as 
expected for trade accounting on actual trades.

After you've called updatePortf() and updateAcct(), you have all the 
'tracking' and 'performance' data for your portfolio.

I don't see calls to tradeStats(), perTradeStats(), dailyStats(), or 
dailyEqPL(), which might give you more of the 'tracking' information 
you're looking for.

I also don't see a call to PortfReturns(), which would extract %-returns 
from your blotter portfolio, and make all the standard portfolio 
analysis of packages such as PerformanceAnalytics or PortfolioAnalytics, 
which generally expect %-returns, available.

So, maybe this answers your question, and maybe it doesn't.  If I 
haven't answered your question, could you please be more specific about 
what you want to do?

Regards,

Brian

-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From johannes.lips at gmail.com  Thu Jan 12 13:55:10 2017
From: johannes.lips at gmail.com (Johannes Lips)
Date: Thu, 12 Jan 2017 13:55:10 +0100
Subject: [R-SIG-Finance] Portfolio management in R for private use
In-Reply-To: <dda330d9-f559-d3da-53bc-c1df4804357a@braverock.com>
References: <281d024d-00c8-431e-6279-a885f438733c@gmail.com>
	<dda330d9-f559-d3da-53bc-c1df4804357a@braverock.com>
Message-ID: <d0e77e67-4c71-5d62-77a8-26c69f8eecb4@gmail.com>

On 12.01.2017 11:32, Brian G. Peterson wrote:
> On 01/12/2017 02:16 AM, Johannes Lips wrote:
>> Hi all,
>>
>> I've just wanted to share some code I've written to keep track of my
>> small portfolio in R, since I couldn't find anything suitable on the
>> internet.
>> https://github.com/hannes101/myRportfolio/
>> I would be glad if someone could offer me some nice documents on good
>> ways to keep track on the performance of the whole portfolio and
>> possible summaries one could easily obtain. I couldn't really find a lot
>> of documentation on all these packages and most of it was rather
>> academic and not really suited for a portfolio, mainly following a
>> Buy&Hold strategy.
>> If you have any suggestions or additional comments, please let me know.
>
> Johannes,
>
> Thanks for sharing your code.  It is always useful to see how other 
> people are using the packages.
>
> I'm a little unclear on what your question is.
>
> I'm also not clear what you are referring to when you discuss 'not 
> really suited for a portfolio', since among other things we use 
> blotter for reconciliation of accounts doing many thousands of trades 
> per day, which is not quite 'buy and hold' nor 'academic'. Perhaps you 
> could provide links to what you've referenced so far?
>
> Anyway, I'll guess at what you might be asking, and see if that 
> clarifies things.
>
> You're using addTxns() to load your trades into blotter, which is as 
> expected for trade accounting on actual trades.
>
> After you've called updatePortf() and updateAcct(), you have all the 
> 'tracking' and 'performance' data for your portfolio.
>
> I don't see calls to tradeStats(), perTradeStats(), dailyStats(), or 
> dailyEqPL(), which might give you more of the 'tracking' information 
> you're looking for.
>
> I also don't see a call to PortfReturns(), which would extract 
> %-returns from your blotter portfolio, and make all the standard 
> portfolio analysis of packages such as PerformanceAnalytics or 
> PortfolioAnalytics, which generally expect %-returns, available.
>
Thanks for your response Brian!
I didn't want to imply that blotter is not up to the task or anything 
like that. I just meant that most tutorials and examples, I could find 
are on a more advanced level, which is not really necessary for the task 
of managing and keeping track of a small ETF portfolio in R. So I 
basically tried to boil it down to the most basic commands, but at the 
same time offering the possibility using the powerful tools provided.
I was specifically looking for something like these commands, so that 
you can get a quick overview on the portfolio. I will try to experiment 
around with the commands you've mentioned.
Basically I just tried to write a basic tutorial, so that one could more 
easily use R to keep track of a small portfolio and I was asking on 
feedback on how to improve that.

Regards,
Johannes

> So, maybe this answers your question, and maybe it doesn't.  If I 
> haven't answered your question, could you please be more specific 
> about what you want to do?
>
> Regards,
>
> Brian
>


From i.costigan at me.com  Sat Jan 14 00:57:48 2017
From: i.costigan at me.com (Imanuel Costigan)
Date: Sat, 14 Jan 2017 10:57:48 +1100
Subject: [R-SIG-Finance] NEW: fmdates packages
Message-ID: <0D2A8374-CC78-4D69-AD57-2A7607584398@me.com>

Hi everyone, 

I?ve published the fmdates package on CRAN [1]. It implements calendars used to define locale specific business days, date adjusters and shifters, schedule generators and year fraction calculations defined by these standards. These are pretty simple, yet fundamental aspects of modelling financial market contracts like swaps. The vignette documents some use cases [2]. 

This is different to some other packages that are available in that:

1. It focuses on one thing: handling dates in FM idiosyncratic ways
2. It is pure R (this also means its not going to be optimised for speed!)
3. It is lightweight with minimal upstream package dependencies
4. It is reasonably well documented

How can you help? You are welcome to implement new Calendars and associated `is_good()` methods and submit PRs [3]. Please review the contribution guidelines [4]. And of course, feel free to notify me of any bugs.



Kind regards
Imanuel 

[1]: https://cran.r-project.org/package=fmdates
[2]: https://cran.r-project.org/web/packages/fmdates/vignettes/dates.html
[3]: https://github.com/imanuelcostigan/fmdates
[4]: https://github.com/imanuelcostigan/fmdates/blob/master/CONTRIBUTING.md

From edward.wilson at hotmail.co.uk  Sun Jan 15 06:06:31 2017
From: edward.wilson at hotmail.co.uk (Edward Wilson)
Date: Sun, 15 Jan 2017 05:06:31 +0000
Subject: [R-SIG-Finance] Quantstrat: Creating a custom function to track
	closed orders
Message-ID: <CY4PR0101MB29496A03CB17D15D05AA317EBD7A0@CY4PR0101MB2949.prod.exchangelabs.com>

Hi all,


I have a strategy which involves multiple entry/exit levels that can be enabled/disabled dynamically depending upon the fills of the other entry/exit levels in the strategy (along with some other variables).


The way I would like to achieve this is to have a state machine to control the states of each entry/exit Level which can then be checked within my custom rule signal function. At the moment, I'm planning to call the state machine from within the applyRules function if ruleOrderProc returns some closed orders, and pass in the order label as the identifier.


My question is: Is this the best approach, or maybe there is is a better way to achieve this result built into quantstrat already?


Many thanks

Ed Wilson


	[[alternative HTML version deleted]]


From brian at braverock.com  Sun Jan 15 12:30:43 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Sun, 15 Jan 2017 05:30:43 -0600
Subject: [R-SIG-Finance] Quantstrat: Creating a custom function to track
 closed orders
In-Reply-To: <CY4PR0101MB29496A03CB17D15D05AA317EBD7A0@CY4PR0101MB2949.prod.exchangelabs.com>
References: <CY4PR0101MB29496A03CB17D15D05AA317EBD7A0@CY4PR0101MB2949.prod.exchangelabs.com>
Message-ID: <cae685a2-31e1-b004-0860-b9bfe184975b@braverock.com>

On 01/14/2017 11:06 PM, Edward Wilson wrote:
> I have a strategy which involves multiple entry/exit levels that can
> be enabled/disabled dynamically depending upon the fills of the other
> entry/exit levels in the strategy (along with some other variables).
>
> The way I would like to achieve this is to have a state machine to
> control the states of each entry/exit Level which can then be checked
> within my custom rule signal function. At the moment, I'm planning to
> call the state machine from within the applyRules function if
> ruleOrderProc returns some closed orders, and pass in the order label
> as the identifier.
>
> My question is: Is this the best approach, or maybe there is is a
> better way to achieve this result built into quantstrat already?

Yes, I think you may be over complicating things.

applyRules already implements a state machine.  Unlike indicators or 
signals, which are typically applied in a vectorized fashion, the rules 
are evaluated in a path (state) dependent way. Each rule has access to 
the entire current state at a point in time for that instrument (or for 
all instruments if it is a rebalancing rule).

So, in this context, there are a few ways you could do what you want.

The simplest way would be to write an order sizing function which checks 
closed orders and their labels before deciding on order sizing for the 
current rule. You'll know the label of the rule currently under 
evaluation, and have access to all order history up to this point.

A more complicated way would be to create a custom version of 
ruleSignal.  I originally thought ruleSignal would just be an example, 
and that we would need to write custom versions for each strategy.  In 
practice, we've mostly just ended up using ruleSignal as-is, but that 
doesn't preclude you from using a custom version.  like the order sizing 
option discussed above, your custom ruleSignal would have access to the 
current state: position, closed orders, open orders, etc., and can make 
decisions about whether to do anything with the current signal.  This 
option is more complicated than working inside the order sizing 
function, as there are more variables to juggle, and you'd need to 
manage entering orders directly, among other things.

I would recommend against modifying ruleOrderProc.  You'd rather not 
enter orders that you don't want to get filled.

A final way I'll discuss which may or may not apply in your case is to 
pre-process the signals.  The goal here would be to preemptively reduce 
the number of signals passed on to the rules for processing in a path 
and state dependent fashion. Typically the way we would implement such a 
filter would be as another signal function.  Each signal function has 
access to the output of any signal functions called previously, so it is 
easy to put a signal filter on the list of signal functions at the end. 
This filter function can either add more signal columns filtered from 
the original signals, or even just modify the original signal columns 
(this may be slightly faster, but makes things harder to track).

In summary, I'd likely recommend implementing your state checks in an 
order sizing function.  I think it would require touching the least code 
and isolate your state-dependent logic for your strategy at the point 
you are deciding whether to place an order, and for how much quantity.

Regards,

Brian

-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From edward.wilson at hotmail.co.uk  Thu Jan 19 09:59:56 2017
From: edward.wilson at hotmail.co.uk (Edward Wilson)
Date: Thu, 19 Jan 2017 08:59:56 +0000
Subject: [R-SIG-Finance] Quantstrat: Creating a custom function to track
 closed orders
In-Reply-To: <cae685a2-31e1-b004-0860-b9bfe184975b@braverock.com>
References: <CY4PR0101MB29496A03CB17D15D05AA317EBD7A0@CY4PR0101MB2949.prod.exchangelabs.com>,
	<cae685a2-31e1-b004-0860-b9bfe184975b@braverock.com>
Message-ID: <CY4PR0101MB2949BA293954DEB18204B06BBD7E0@CY4PR0101MB2949.prod.exchangelabs.com>

Thanks for the detailed response Brian!


I believe the custom ruleSignal is going to be the solution.


Ed


________________________________
From: R-SIG-Finance <r-sig-finance-bounces at r-project.org> on behalf of Brian G. Peterson <brian at braverock.com>
Sent: Sunday, 15 January 2017 10:30 PM
To: r-sig-finance at r-project.org
Subject: Re: [R-SIG-Finance] Quantstrat: Creating a custom function to track closed orders

On 01/14/2017 11:06 PM, Edward Wilson wrote:
> I have a strategy which involves multiple entry/exit levels that can
> be enabled/disabled dynamically depending upon the fills of the other
> entry/exit levels in the strategy (along with some other variables).
>
> The way I would like to achieve this is to have a state machine to
> control the states of each entry/exit Level which can then be checked
> within my custom rule signal function. At the moment, I'm planning to
> call the state machine from within the applyRules function if
> ruleOrderProc returns some closed orders, and pass in the order label
> as the identifier.
>
> My question is: Is this the best approach, or maybe there is is a
> better way to achieve this result built into quantstrat already?

Yes, I think you may be over complicating things.

applyRules already implements a state machine.  Unlike indicators or
signals, which are typically applied in a vectorized fashion, the rules
are evaluated in a path (state) dependent way. Each rule has access to
the entire current state at a point in time for that instrument (or for
all instruments if it is a rebalancing rule).

So, in this context, there are a few ways you could do what you want.

The simplest way would be to write an order sizing function which checks
closed orders and their labels before deciding on order sizing for the
current rule. You'll know the label of the rule currently under
evaluation, and have access to all order history up to this point.

A more complicated way would be to create a custom version of
ruleSignal.  I originally thought ruleSignal would just be an example,
and that we would need to write custom versions for each strategy.  In
practice, we've mostly just ended up using ruleSignal as-is, but that
doesn't preclude you from using a custom version.  like the order sizing
option discussed above, your custom ruleSignal would have access to the
current state: position, closed orders, open orders, etc., and can make
decisions about whether to do anything with the current signal.  This
option is more complicated than working inside the order sizing
function, as there are more variables to juggle, and you'd need to
manage entering orders directly, among other things.

I would recommend against modifying ruleOrderProc.  You'd rather not
enter orders that you don't want to get filled.

A final way I'll discuss which may or may not apply in your case is to
pre-process the signals.  The goal here would be to preemptively reduce
the number of signals passed on to the rules for processing in a path
and state dependent fashion. Typically the way we would implement such a
filter would be as another signal function.  Each signal function has
access to the output of any signal functions called previously, so it is
easy to put a signal filter on the list of signal functions at the end.
This filter function can either add more signal columns filtered from
the original signals, or even just modify the original signal columns
(this may be slightly faster, but makes things harder to track).

In summary, I'd likely recommend implementing your state checks in an
order sizing function.  I think it would require touching the least code
and isolate your state-dependent logic for your strategy at the point
you are deciding whether to place an order, and for how much quantity.

Regards,

Brian

--
Brian G. Peterson
http://braverock.com/brian/
Brian G. Peterson<http://braverock.com/brian/>
braverock.com
BRIAN G. PETERSON 773-459-4973. brian at braverock.com. download resume as PDF SUMMARY. Senior quantitative trader, financial analyst, technical architect, and project ...



Ph: 773-459-4973
IM: bgpbraverock

_______________________________________________
R-SIG-Finance at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
R-SIG-Finance Info Page - Seminar for Statistics | ETH Zurich<https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
stat.ethz.ch
To see the collection of prior postings to the list, visit the R-SIG-Finance Archives. Using R-SIG-Finance: To post a message to all the list members ...



-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions should go.

	[[alternative HTML version deleted]]


From diegoperoni at vodafone.it  Fri Jan 27 19:04:46 2017
From: diegoperoni at vodafone.it (Diego Peroni)
Date: Fri, 27 Jan 2017 19:04:46 +0100
Subject: [R-SIG-Finance] apply
Message-ID: <a0fce9dc-f36e-e7ec-909a-a5be541ba1bd@vodafone.it>

Hi everybody,

I'm running last quantstrat build from a couple of days on a CentOS 
server (128GB ram, 6 core XEON):

Version: *0.9.1739*| Last change: *2016-04-17 20:25:28+02*| Rev.: *1748

**Using:

**library(doMC)
registerDoMC(cores=detectCores())
results = apply.paramset(my.strategy, paramset.label = "OPT",
                           portfolio=my.strategy, account=my.strategy, 
nsamples=0, calc='slave', audit=NULL, verbose=FALSE)
*
*This new release crashes in few minutes with just 500 combinations 
because memory allocation ***increases *of each single process very very 
fast.

**It never happened to me with this simple strategy before quantstrat 
upgrade.*
*
Someone can help me?*
*
Thanks*
*Diego
*

	[[alternative HTML version deleted]]


From josh.m.ulrich at gmail.com  Fri Jan 27 19:13:07 2017
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Fri, 27 Jan 2017 12:13:07 -0600
Subject: [R-SIG-Finance] apply
In-Reply-To: <a0fce9dc-f36e-e7ec-909a-a5be541ba1bd@vodafone.it>
References: <a0fce9dc-f36e-e7ec-909a-a5be541ba1bd@vodafone.it>
Message-ID: <CAPPM_gRoAzPSu59btOytgTbBh34_ojhN6+a2jtnsvO6Jet4oxA@mail.gmail.com>

On Fri, Jan 27, 2017 at 12:04 PM, Diego Peroni <diegoperoni at vodafone.it> wrote:
> Hi everybody,
>
> I'm running last quantstrat build from a couple of days on a CentOS
> server (128GB ram, 6 core XEON):
>
> Version: *0.9.1739*| Last change: *2016-04-17 20:25:28+02*| Rev.: *1748
>
That is not the last quantstrat build.  You're using the last commit
from R-Forge, but quantstrat moved from R-Forge to GitHub in May 2016.
https://github.com/braverock/quantstrat

> **Using:
>
> **library(doMC)
> registerDoMC(cores=detectCores())
> results = apply.paramset(my.strategy, paramset.label = "OPT",
>                            portfolio=my.strategy, account=my.strategy,
> nsamples=0, calc='slave', audit=NULL, verbose=FALSE)
> *
> *This new release crashes in few minutes with just 500 combinations
> because memory allocation ***increases *of each single process very very
> fast.
>
> **It never happened to me with this simple strategy before quantstrat
> upgrade.*
> *
> Someone can help me?*
> *
It's going to be very difficult for people to help you with so little
information about the strategy.

It would also be helpful to know the versions of R and all relevant
packages both *before* and after this issue occurred.  You think the
issue is with quantstrat because you're trying to run a strategy, but
quantstrat depends on a lot of other packages and an issue in one of
them could be causing this issue.

> Thanks*
> *Diego
> *
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2017 | www.rinfinance.com


From diegoperoni at vodafone.it  Sat Jan 28 12:14:46 2017
From: diegoperoni at vodafone.it (Diego Peroni)
Date: Sat, 28 Jan 2017 12:14:46 +0100
Subject: [R-SIG-Finance] apply
In-Reply-To: <CAPPM_gRoAzPSu59btOytgTbBh34_ojhN6+a2jtnsvO6Jet4oxA@mail.gmail.com>
References: <a0fce9dc-f36e-e7ec-909a-a5be541ba1bd@vodafone.it>
	<CAPPM_gRoAzPSu59btOytgTbBh34_ojhN6+a2jtnsvO6Jet4oxA@mail.gmail.com>
Message-ID: <4d86e946-0e42-9f03-d092-95c6182f1128@vodafone.it>

Hi Joshua,

thanks for your answer!

I'm going to download and test last version from GitHub first and I'll 
check if my problem persists...

Diego


On 27/01/2017 19:13, Joshua Ulrich wrote:
> On Fri, Jan 27, 2017 at 12:04 PM, Diego Peroni <diegoperoni at vodafone.it> wrote:
>> Hi everybody,
>>
>> I'm running last quantstrat build from a couple of days on a CentOS
>> server (128GB ram, 6 core XEON):
>>
>> Version: *0.9.1739*| Last change: *2016-04-17 20:25:28+02*| Rev.: *1748
>>
> That is not the last quantstrat build.  You're using the last commit
> from R-Forge, but quantstrat moved from R-Forge to GitHub in May 2016.
> https://github.com/braverock/quantstrat
>
>> **Using:
>>
>> **library(doMC)
>> registerDoMC(cores=detectCores())
>> results = apply.paramset(my.strategy, paramset.label = "OPT",
>>                             portfolio=my.strategy, account=my.strategy,
>> nsamples=0, calc='slave', audit=NULL, verbose=FALSE)
>> *
>> *This new release crashes in few minutes with just 500 combinations
>> because memory allocation ***increases *of each single process very very
>> fast.
>>
>> **It never happened to me with this simple strategy before quantstrat
>> upgrade.*
>> *
>> Someone can help me?*
>> *
> It's going to be very difficult for people to help you with so little
> information about the strategy.
>
> It would also be helpful to know the versions of R and all relevant
> packages both *before* and after this issue occurred.  You think the
> issue is with quantstrat because you're trying to run a strategy, but
> quantstrat depends on a lot of other packages and an issue in one of
> them could be causing this issue.
>
>> Thanks*
>> *Diego
>> *
>>
>>          [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-SIG-Finance at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> -- Subscriber-posting only. If you want to post, subscribe first.
>> -- Also note that this is not the r-help list where general R questions should go.
>
>


From diegoperoni at vodafone.it  Sat Jan 28 14:40:16 2017
From: diegoperoni at vodafone.it (Diego Peroni)
Date: Sat, 28 Jan 2017 14:40:16 +0100
Subject: [R-SIG-Finance] apply
In-Reply-To: <4d86e946-0e42-9f03-d092-95c6182f1128@vodafone.it>
References: <a0fce9dc-f36e-e7ec-909a-a5be541ba1bd@vodafone.it>
	<CAPPM_gRoAzPSu59btOytgTbBh34_ojhN6+a2jtnsvO6Jet4oxA@mail.gmail.com>
	<4d86e946-0e42-9f03-d092-95c6182f1128@vodafone.it>
Message-ID: <23787f44-a7c9-c64d-1274-fc0c5c3fcdec@vodafone.it>

Hi Joshua,

I've found the same problem (fast memory increse until swap and crash) 
using last quantstrat release from GitHub (0.10.0).

I'm running a very simple demo strategy (in attach to this email) based 
on ES 2006 x minute data (163MB).
The strategy do just few trades per case to run to the end of 
combinations quickly.
It seems to me that at each new case the memory increases because old 
data are not dropped from memory.
I didn't had this problem using quantstrat 0.9.1709

My configuration is the following:

- CentOS server (128GB ram, 6 core XEON)
- RStudio Server Version 0.99.484
- R version 3.2.2 (2015-08-14)
- TTR 0.23.1
- quantmod 0.4.7
- blotter 0.9.1741
- PerformanceAnalytics 1.4.3662

I'm sending to you (in private) a link to download the data 
(ES_2006.RData) that the strategy uses:

Thanks in advance for your time and let me know if I've missed important 
information for you.

Regards

Diego




On 28/01/2017 12:14, Diego Peroni wrote:
> Hi Joshua,
>
> thanks for your answer!
>
> I'm going to download and test last version from GitHub first and I'll 
> check if my problem persists...
>
> Diego
>
>
> On 27/01/2017 19:13, Joshua Ulrich wrote:
>> On Fri, Jan 27, 2017 at 12:04 PM, Diego Peroni 
>> <diegoperoni at vodafone.it> wrote:
>>> Hi everybody,
>>>
>>> I'm running last quantstrat build from a couple of days on a CentOS
>>> server (128GB ram, 6 core XEON):
>>>
>>> Version: *0.9.1739*| Last change: *2016-04-17 20:25:28+02*| Rev.: *1748
>>>
>> That is not the last quantstrat build.  You're using the last commit
>> from R-Forge, but quantstrat moved from R-Forge to GitHub in May 2016.
>> https://github.com/braverock/quantstrat
>>
>>> **Using:
>>>
>>> **library(doMC)
>>> registerDoMC(cores=detectCores())
>>> results = apply.paramset(my.strategy, paramset.label = "OPT",
>>>                             portfolio=my.strategy, account=my.strategy,
>>> nsamples=0, calc='slave', audit=NULL, verbose=FALSE)
>>> *
>>> *This new release crashes in few minutes with just 500 combinations
>>> because memory allocation ***increases *of each single process very 
>>> very
>>> fast.
>>>
>>> **It never happened to me with this simple strategy before quantstrat
>>> upgrade.*
>>> *
>>> Someone can help me?*
>>> *
>> It's going to be very difficult for people to help you with so little
>> information about the strategy.
>>
>> It would also be helpful to know the versions of R and all relevant
>> packages both *before* and after this issue occurred.  You think the
>> issue is with quantstrat because you're trying to run a strategy, but
>> quantstrat depends on a lot of other packages and an issue in one of
>> them could be causing this issue.
>>
>>> Thanks*
>>> *Diego
>>> *
>>>
>>>          [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-SIG-Finance at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>> -- Subscriber-posting only. If you want to post, subscribe first.
>>> -- Also note that this is not the r-help list where general R 
>>> questions should go.
>>
>>
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R 
> questions should go.

-------------- next part --------------
rm(list=ls())

library(quantstrat)

Sys.setenv(TZ="UTC")
Sys.setlocale('LC_TIME', 'C')
options("scipen"=100, "digits"=10)

osMaxPosLongShort = function(data, timestamp, orderqty, ordertype, orderside, portfolio, symbol, ruletype, ...) {
  maxpos = osMaxPos(data, timestamp, orderqty, ordertype, orderside, portfolio, symbol, ruletype, ...)
  curpos = getPosQty(portfolio, symbol, timestamp)
  if (orderside == 'long' & curpos<0)
    maxpos = 0
  if (orderside == 'short' & curpos>0)
    maxpos = 0
  return (maxpos)
}

initEq = 10000
symbol = 'ES'
currency('USD')

initDate = startDate = '2006-01-01'
endDate = '2006-12-31'

load('ES_2016.RData') # loading minute data

stock(symbol, currency='USD', multiplier=50, tick_size=0.25)

qs.strategy = 'teststrategy'
rm.strat(qs.strategy)
initPortf(qs.strategy, symbol, initDate = initDate)
initAcct(qs.strategy, portfolios = qs.strategy, initDate = initDate, initEq = initEq)
initOrders(portfolio = qs.strategy, initDate = initDate)
strategy(qs.strategy, store = TRUE)

addPosLimit(portfolio = qs.strategy, symbol = symbol, timestamp = initDate, maxpos = 1, minpos = -1)

add.indicator(qs.strategy, name='RSI',
              arguments = list(price=quote(Cl(mktdata)), n=12), label='rsi')

add.signal(qs.strategy, name = "sigThreshold",
           arguments = list(column="EMA.rsi", threshold=0.01, relationship="lt", cross=TRUE), label="upTrend")

add.rule(qs.strategy, name='ruleSignal',
         arguments = list(sigcol="upTrend", sigval=TRUE,
                          replace=TRUE,
                          prefer='open',
                          orderside='long',
                          ordertype='market',
                          orderqty=1,
                          osFUN='osMaxPosLongShort',
                          orderset='ocolong'),
         timespan='T09:30/T16:00',
         type='enter',
         label='LE')
add.rule(qs.strategy, name='ruleSignal',
         arguments=list(sigcol='upTrend', sigval=TRUE,
                        prefer='open',
                        replace=FALSE,
                        orderside='long',
                        ordertype='stoptrailing',
                        threshold=0.005,
                        tmult=TRUE,
                        orderqty='all',
                        orderset='ocolong'
         ),
         type='chain', parent='LE',
         label='StopTrailingLong',
         enabled=TRUE)


add.distribution(qs.strategy,
                 paramset.label = 'MACDOPT',
                 component.type = 'signal',
                 component.label = 'upTrend',
                 variable = list(threshold = seq(1, 2, by=.003)),
                 label = 'threshold.upTrend')


library(doMC)
registerDoMC(cores=detectCores())
results = apply.paramset(qs.strategy, paramset.label = "MACDOPT", portfolio=qs.strategy, account=qs.strategy, nsamples=0, calc='slave', audit=NULL, verbose=TRUE)
r = t(data.frame(do.call(rbind, results$tradeStats)))

From hkahra at gmail.com  Sun Feb  5 17:19:25 2017
From: hkahra at gmail.com (Hannu Kahra)
Date: Sun, 5 Feb 2017 18:19:25 +0200
Subject: [R-SIG-Finance] Estimating a one-factor model using the DLM package
Message-ID: <CALuJ=+quV-W2SronAH_zH9bjNhRxTVPmKLF0vcRRbfXf7oHO1Q@mail.gmail.com>

Hi,

I am trying to estimate a one-factor model of the spread y(t) between two
interest rates

y(t) = a + b*s(t) + u(t)
s(t) = c*s(t-1) + v(t)

using the DLM package in R. Is it possible to estimate the parameters a, b,
c, and var(u(t)). Var(v(t)) = 1.

I have EViews code for that and I want to replicate it using R.

Hannu

	[[alternative HTML version deleted]]


From zadig_1 at excite.com  Tue Feb  7 14:53:00 2017
From: zadig_1 at excite.com (ce)
Date: Tue, 07 Feb 2017 08:53:00 -0500
Subject: [R-SIG-Finance] Estimating a one-factor model using the DLM
	package
Message-ID: <20170207085300.6557@web007.roc2.bluetie.com>


Not sure what you want to do but dlmMLE function would estimate some parameters to start, and dlmFilter and dlmForecast would predict expected values. DLM would need some study . 
Documents in https://cran.r-project.org/package=dlm are a good start , also the book "Dynamic Linear Models with R",  ISBN 978-0-387-77237-0 e-ISBN 978-0-387-77238-7

-----Original Message-----
From: "Hannu Kahra" [hkahra at gmail.com]
Date: 02/05/2017 11:19 AM
To: r-sig-finance at r-project.org
Subject: [R-SIG-Finance] Estimating a one-factor model using the DLM package

Hi,

I am trying to estimate a one-factor model of the spread y(t) between two
interest rates

y(t) = a + b*s(t) + u(t)
s(t) = c*s(t-1) + v(t)

using the DLM package in R. Is it possible to estimate the parameters a, b,
c, and var(u(t)). Var(v(t)) = 1.

I have EViews code for that and I want to replicate it using R.

Hannu

	[[alternative HTML version deleted]]

_______________________________________________
R-SIG-Finance at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions should go.


From hkahra at gmail.com  Tue Feb  7 17:56:56 2017
From: hkahra at gmail.com (Hannu Kahra)
Date: Tue, 7 Feb 2017 18:56:56 +0200
Subject: [R-SIG-Finance] Estimating a one-factor model using the DLM
	package
In-Reply-To: <20170207085300.6557@web007.roc2.bluetie.com>
References: <20170207085300.6557@web007.roc2.bluetie.com>
Message-ID: <CALuJ=+rXHW_U0DggvQbuh7c0OEww+3_5JtnN-PxEnc-VJiwMWQ@mail.gmail.com>

I specify the problem more clearly. My model is

y(t) = a + b*s(t) + u(t)
s(t) = c*s(t-1) + v(t)

that is a stochastic linear trend model in the DLM package obtained by
setting dlmModPoly(order = 2). The parameters b and c are fixed to 1 by
construction. In my problem I can allow b = 1, but I would like to estimate
c in the state equation. In other applications, I want to estimate
parameter b in the signal equation, as well.

I have had a look at the MARSS package and it seems that b and c can be
free parameters in estimation.

Hannu

On Tue, Feb 7, 2017 at 3:53 PM, ce <zadig_1 at excite.com> wrote:

>
> Not sure what you want to do but dlmMLE function would estimate some
> parameters to start, and dlmFilter and dlmForecast would predict expected
> values. DLM would need some study .
> Documents in https://cran.r-project.org/package=dlm are a good start ,
> also the book "Dynamic Linear Models with R",  ISBN 978-0-387-77237-0
> e-ISBN 978-0-387-77238-7
>
> -----Original Message-----
> From: "Hannu Kahra" [hkahra at gmail.com]
> Date: 02/05/2017 11:19 AM
> To: r-sig-finance at r-project.org
> Subject: [R-SIG-Finance] Estimating a one-factor model using the DLM
> package
>
> Hi,
>
> I am trying to estimate a one-factor model of the spread y(t) between two
> interest rates
>
> y(t) = a + b*s(t) + u(t)
> s(t) = c*s(t-1) + v(t)
>
> using the DLM package in R. Is it possible to estimate the parameters a, b,
> c, and var(u(t)). Var(v(t)) = 1.
>
> I have EViews code for that and I want to replicate it using R.
>
> Hannu
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>
>
>
>

	[[alternative HTML version deleted]]


From paulteetor at yahoo.com  Wed Feb  8 02:46:38 2017
From: paulteetor at yahoo.com (Paul Teetor)
Date: Wed, 8 Feb 2017 01:46:38 +0000 (UTC)
Subject: [R-SIG-Finance] Estimating a one-factor model using the
	DLM	package
In-Reply-To: <CALuJ=+rXHW_U0DggvQbuh7c0OEww+3_5JtnN-PxEnc-VJiwMWQ@mail.gmail.com>
References: <20170207085300.6557@web007.roc2.bluetie.com>
	<CALuJ=+rXHW_U0DggvQbuh7c0OEww+3_5JtnN-PxEnc-VJiwMWQ@mail.gmail.com>
Message-ID: <970149652.118308.1486518398148@mail.yahoo.com>

Hannu,

The MARSS package could solve your problem, but it seems like over-kill for a simple model like this.

I wrote some R code to demonstrate using dlm to fit your model. You can see the code here.

http://bit.ly/spreadModel-dlm

The code fits all three parameters: a, b, and c; plus the variances and initial value.

I did not have much time to test the code, but it seems to run correctly. To use dlm, I
had to put your model into this matrix form:

#                  _    _
#                 |      |
#   y[t] = [a, b] * |   1  | + u[t]
#                 |      |
#                 | s[t] |
#                 |_    _|
#
#  _    _     _    _     _      _     _    _
#   |      |   |      |   |        |   |      |
#   |   1  |   | 1  0 |   |   1    |   |   0  |
#   |      |  =  |      | * |        | + |      |
#   | s[t] |   | 0  c |   | s[t-1] |   | v[t] |
#   |_    _|   |_    _|   |_      _|   |_    _|
#

Good luck. I hope your model works well.

Paul


 
Paul Teetor, Elgin, IL  USA
http://quantdevel.com/public


On Tuesday, February 7, 2017 10:57 AM, Hannu Kahra <hkahra at gmail.com> wrote:



I specify the problem more clearly. My model is

y(t) = a + b*s(t) + u(t)
s(t) = c*s(t-1) + v(t)

that is a stochastic linear trend model in the DLM package obtained by
setting dlmModPoly(order = 2). The parameters b and c are fixed to 1 by
construction. In my problem I can allow b = 1, but I would like to estimate
c in the state equation. In other applications, I want to estimate
parameter b in the signal equation, as well.

I have had a look at the MARSS package and it seems that b and c can be
free parameters in estimation.

Hannu

On Tue, Feb 7, 2017 at 3:53 PM, ce <zadig_1 at excite.com> wrote:

>
> Not sure what you want to do but dlmMLE function would estimate some
> parameters to start, and dlmFilter and dlmForecast would predict expected
> values. DLM would need some study .
> Documents in https://cran.r-project.org/package=dlm are a good start ,
> also the book "Dynamic Linear Models with R",  ISBN 978-0-387-77237-0
> e-ISBN 978-0-387-77238-7
>
> -----Original Message-----
> From: "Hannu Kahra" [hkahra at gmail.com]
> Date: 02/05/2017 11:19 AM
> To: r-sig-finance at r-project.org
> Subject: [R-SIG-Finance] Estimating a one-factor model using the DLM
> package
>
> Hi,
>
> I am trying to estimate a one-factor model of the spread y(t) between two
> interest rates
>
> y(t) = a + b*s(t) + u(t)
> s(t) = c*s(t-1) + v(t)
>
> using the DLM package in R. Is it possible to estimate the parameters a, b,
> c, and var(u(t)). Var(v(t)) = 1.
>
> I have EViews code for that and I want to replicate it using R.
>
> Hannu
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.

>
>
>
>

    [[alternative HTML version deleted]]

_______________________________________________
R-SIG-Finance at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions should go.


From paulteetor at yahoo.com  Thu Feb  9 10:52:46 2017
From: paulteetor at yahoo.com (Paul Teetor)
Date: Thu, 9 Feb 2017 09:52:46 +0000 (UTC)
Subject: [R-SIG-Finance] Estimating a one-factor model using
	the	DLM	package
In-Reply-To: <970149652.118308.1486518398148@mail.yahoo.com>
References: <20170207085300.6557@web007.roc2.bluetie.com>
	<CALuJ=+rXHW_U0DggvQbuh7c0OEww+3_5JtnN-PxEnc-VJiwMWQ@mail.gmail.com>
	<970149652.118308.1486518398148@mail.yahoo.com>
Message-ID: <1557148252.1156476.1486633966820@mail.yahoo.com>

Oops. I see that my "ASCII TeX" depiction of the matrix form got scrambled. Oh well. If you follow the link, you can see the matrix form there.
 
Paul Teetor, Elgin, IL  USA
http://quantdevel.com/public


On Tuesday, February 7, 2017 7:49 PM, Paul Teetor via R-SIG-Finance <r-sig-finance at r-project.org> wrote:



Hannu,

The MARSS package could solve your problem, but it seems like over-kill for a simple model like this.

I wrote some R code to demonstrate using dlm to fit your model. You can see the code here.

http://bit.ly/spreadModel-dlm

The code fits all three parameters: a, b, and c; plus the variances and initial value.

I did not have much time to test the code, but it seems to run correctly. To use dlm, I
had to put your model into this matrix form:

#                  _    _
#                 |      |
#   y[t] = [a, b] * |   1  | + u[t]
#                 |      |
#                 | s[t] |
#                 |_    _|
#
#  _    _     _    _     _      _     _    _
#   |      |   |      |   |        |   |      |
#   |   1  |   | 1  0 |   |   1    |   |   0  |
#   |      |  =  |      | * |        | + |      |
#   | s[t] |   | 0  c |   | s[t-1] |   | v[t] |
#   |_    _|   |_    _|   |_      _|   |_    _|
#

Good luck. I hope your model works well.

Paul



Paul Teetor, Elgin, IL  USA
http://quantdevel.com/public


On Tuesday, February 7, 2017 10:57 AM, Hannu Kahra <hkahra at gmail.com> wrote:



I specify the problem more clearly. My model is

y(t) = a + b*s(t) + u(t)
s(t) = c*s(t-1) + v(t)

that is a stochastic linear trend model in the DLM package obtained by
setting dlmModPoly(order = 2). The parameters b and c are fixed to 1 by
construction. In my problem I can allow b = 1, but I would like to estimate
c in the state equation. In other applications, I want to estimate
parameter b in the signal equation, as well.

I have had a look at the MARSS package and it seems that b and c can be
free parameters in estimation.

Hannu

On Tue, Feb 7, 2017 at 3:53 PM, ce <zadig_1 at excite.com> wrote:

>
> Not sure what you want to do but dlmMLE function would estimate some
> parameters to start, and dlmFilter and dlmForecast would predict expected
> values. DLM would need some study .
> Documents in https://cran.r-project.org/package=dlm are a good start ,
> also the book "Dynamic Linear Models with R",  ISBN 978-0-387-77237-0
> e-ISBN 978-0-387-77238-7
>
> -----Original Message-----
> From: "Hannu Kahra" [hkahra at gmail.com]
> Date: 02/05/2017 11:19 AM
> To: r-sig-finance at r-project.org
> Subject: [R-SIG-Finance] Estimating a one-factor model using the DLM
> package
>
> Hi,
>
> I am trying to estimate a one-factor model of the spread y(t) between two
> interest rates
>
> y(t) = a + b*s(t) + u(t)
> s(t) = c*s(t-1) + v(t)
>
> using the DLM package in R. Is it possible to estimate the parameters a, b,
> c, and var(u(t)). Var(v(t)) = 1.
>
> I have EViews code for that and I want to replicate it using R.
>
> Hannu
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.


>
>
>
>

    [[alternative HTML version deleted]]

_______________________________________________
R-SIG-Finance at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions should go.

_______________________________________________
R-SIG-Finance at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions should go.


From jongolenbock at gmail.com  Tue Feb 14 15:58:45 2017
From: jongolenbock at gmail.com (Jon Golenbock)
Date: Tue, 14 Feb 2017 09:58:45 -0500
Subject: [R-SIG-Finance] Quantmod graphing issue
Message-ID: <CAE64KYLi4SrG4maW7Mm=KkJpnGVm9N8ZOUxtk9MKe14L1xQ5Mg@mail.gmail.com>

Hi, having an issue and I'm running into a wall. What I'm trying to do is
set up some alerts given a list of products, terms, and rules. For example,
look at the prompt 3 months for natural gas and crude, and if there is RSI
divergence on any of those charts, graph them with the relevant technical
indicators) and email them out (haven't written this part yet but it should
be pretty simple I think).

The issue I'm having might be a graphics issue (my suspicion) or I might be
using a purrr function incorrectly, as I'm still figuring out how to best
use it's mapping functions.

Code below -- should be spitting out two graphs, but it only creates one
and then throws the error "Error: is.list(res) is not TRUE". This
particular (vanilla) example is looking to flag natgas pricing as it breaks
bollinger bands.

Worth noting, I am using the lmap() function instead of the map() function
because I want the name passed as well. i.e if I pass df[[1]] to
graph_send(), it will pass an unnamed dataframe. if i pass df[1], it passes
a (named) list containing the dataframe, which I can still access using
mylist[[1]].

Any help is appreciated, thank you in advance!!

library(TTR)
library(dplyr)
library(purrr)
library(magrittr)
library(quantmod)

graph_send <- function(mylist){
  #print(df %>% str())
  df2 <- mylist[[1]] %<>% dplyr::select(COB_DT, PRICE,QUOTE_DEF_CD) %>%
    dplyr::rename (Date = COB_DT, Close = PRICE) %>%
    dplyr::mutate (Open = lag(Close))


  df2$Open[1] <- df2$Close[1]
  df2$High <- pmax(df2$Close, df2$Open)
  df2$Low <- pmin(df2$Close, df2$Open)
  #print(df2 %>% str())


  df3 <- df2 %>% select(Date, Open, High, Low, Close)
  ts <- xts(df3[,-1], df3[,1]) %>% zoo::na.locf()
  #print(ts)



  candleChart(ts, theme = "white", name = names(mylist))
  plot(addBBands())
}

df <- structure(list(`Henry Hub xh19` = structure(list(COB_DT =
structure(c(17151,

17152, 17153, 17154, 17155, 17156, 17157, 17158, 17159, 17160,

17161, 17162, 17163, 17164, 17165, 17166, 17167, 17168, 17169,

17170, 17171, 17172, 17173, 17174, 17175, 17176, 17177, 17178,

17179, 17180, 17181, 17182, 17183, 17184, 17185, 17186, 17187,

17188, 17189, 17190, 17191, 17192, 17193, 17194, 17195, 17196,

17197, 17198, 17199, 17200, 17201, 17202, 17203, 17204, 17205,

17206, 17207, 17208, 17209, 17210), class = "Date"), PRICE = c(-0.86,

                                                               -0.86,
-0.86, -0.86, -0.83, -0.87, -0.87, -0.83, -0.83, -0.83,

                                                               -0.83,
-0.81, -0.81, -0.78, -0.77, -0.77, -0.77, -0.77, -0.75,

                                                               -0.775,
-0.755, -0.755, -0.755, -0.755, -0.73, -0.74, -0.72,

                                                               -0.72,
-0.72, -0.72, -0.72, -0.72, -0.72, -0.71, -0.71, -0.7,

                                                               -0.7, -0.7,
-0.7, -0.735, -0.7, -0.7, -0.72, -0.72, -0.72, -0.72,

                                                               -0.72,
-0.72, -0.72, -0.72, -0.72, -0.72, -0.665, -0.68, -0.635,

                                                               -0.635,
-0.635, -0.635, -0.635, -0.585), CURVE_START_DT = c("",


                                               "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "",


                                               "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "",


                                               "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "", "",


                                               "", "", "", "", "", "", "",
"", "", "", ""), QUOTE_DEF_CD = c("Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis", "Dominion South Basis",



                                 "Dominion South Basis", "Dominion South
Basis"), dn = c(NA, NA,




             NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA,




             NA, -0.894741986767873, -0.891255877526362, -0.88636710179481,




             -0.880094879733141, -0.872383869796585, -0.870767185654083,
-0.858363089262289,




             -0.844740808202286, -0.83891646141184, -0.831269081190139,
-0.821607558621575,




             -0.809474309040864, -0.800695515162401, -0.789713052669259,
-0.785893441660804,




             -0.783099173310338, -0.780390228494039, -0.77657550056119,
-0.771630648315995,




             -0.769709751494918, -0.761836566749306, -0.757707733980463,
-0.752643214660164,




             -0.746563490998189, -0.739223944189474, -0.737874662159694,
-0.733967566619156,




             -0.733967566619156, -0.733967566619156, -0.733967566619156,
-0.733967566619156,




             -0.733967566619156, -0.733967566619156, -0.740086079144498,
-0.741578029864691,




             -0.75138715591489, -0.757590834083357, -0.761721993725188,
-0.764454364360499,




             -0.766130855814034, -0.769658234195486), mavg = c(NA, NA, NA,




                                                               NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,




                                                               -0.81675,
-0.8115, -0.80625, -0.801, -0.79575, -0.79075, -0.78425,




                                                               -0.77675,
-0.77125, -0.76575, -0.76025, -0.75475, -0.75025, -0.74575,




                                                               -0.74225,
-0.73925, -0.73575, -0.73225, -0.72875, -0.72625, -0.72425,




                                                               -0.7215,
-0.71875, -0.717, -0.71525, -0.71475, -0.71375, -0.71375,




                                                               -0.71375,
-0.71375, -0.71375, -0.71375, -0.71375, -0.711, -0.7095,




                                                               -0.70575,
-0.7025, -0.69925, -0.696, -0.69275, -0.68525), up = c(NA,





                                                    NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,





                                                    NA, NA,
-0.738758013232128, -0.731744122473638, -0.72613289820519,





                                                    -0.721905120266859,
-0.719116130203415, -0.710732814345917, -0.710136910737711,





                                                    -0.708759191797714,
-0.70358353858816, -0.700230918809861, -0.698892441378425,





                                                    -0.700025690959136,
-0.699804484837599, -0.701786947330742, -0.698606558339196,





                                                    -0.695400826689663,
-0.691109771505961, -0.687924499438811, -0.685869351684006,





                                                    -0.682790248505082,
-0.686663433250695, -0.685292266019537, -0.684856785339835,





                                                    -0.687436509001811,
-0.691276055810526, -0.691625337840306, -0.693532433380844,





                                                    -0.693532433380844,
-0.693532433380844, -0.693532433380844, -0.693532433380844,





                                                    -0.693532433380844,
-0.693532433380844, -0.681913920855502, -0.677421970135309,





                                                    -0.66011284408511,
-0.647409165916643, -0.636778006274811, -0.627545635639501,





                                                    -0.619369144185966,
-0.600841765804514), pctB = c(NA, NA, NA,






                          NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA,






                          0.767655702400944, 0.854205870165024,
0.819844320699827, 0.790789999018899,






                          0.765874606803529, 0.879605952792593,
0.798530262605824, 0.917335824507027,






                          0.878695729987092, 0.849134932671232,
0.827995449169055, 0.817500582547799,






                          0.799828437697737, 0.792859554063748,
0.869471320005496, 0.833529663067839,






                          0.900423577634397, 0.863786077897535,
0.835232804645777, 0.8020035676351,






                          0.356996781966012, 0.796897894958033,
0.77660403694367, 0.449261743138118,






                          0.400934114919529, 0.38648482810809,
0.345431447865779, 0.345431447865779,






                          0.345431447865779, 0.345431447865779,
0.345431447865779, 0.345431447865779,






                          0.345431447865779, 1.29075628879841,
0.959816268711555, 1.27513594549958,






                          1.11262459647885, 1.01423042685842,
0.945552307510719, 0.893495001927707,






                          1.09384016829345), cross_up = c(NA, NA, NA, NA,
NA, NA, NA, NA,






                                                          NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, FALSE, FALSE, FALSE,






                                                          FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,






                                                          FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,






                                                          FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,






                                                          FALSE, FALSE,
FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE,






                                                          TRUE), cross_dn =
c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,







  NA, NA, NA, NA, NA, NA, NA, NA, FALSE, FALSE, FALSE, FALSE, FALSE,







  FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,







  FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,







  FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,







  FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE






                                                          )), class =
"data.frame", .Names = c("COB_DT", "PRICE", "CURVE_START_DT",







                   "QUOTE_DEF_CD", "dn", "mavg", "up", "pctB", "cross_up",
"cross_dn"






                                                          ), row.names =
c(NA, -60L)), `Dominion South Basis xh19` = structure(list(






                                                            COB_DT =
structure(c(17151, 17152, 17153, 17154, 17155, 17156,







     17157, 17158, 17159, 17160, 17161, 17162, 17163, 17164, 17165,







     17166, 17167, 17168, 17169, 17170, 17171, 17172, 17173, 17174,







     17175, 17176, 17177, 17178, 17179, 17180, 17181, 17182, 17183,







     17184, 17185, 17186, 17187, 17188, 17189, 17190, 17191, 17192,







     17193, 17194, 17195, 17196, 17197, 17198, 17199, 17200, 17201,







     17202, 17203, 17204, 17205, 17206, 17207, 17208, 17209, 17210






                                                            ), class =
"Date"), PRICE = c(2.95, 2.95, 2.95, 2.975, 2.905,







              2.96, 2.955, 2.95, 2.95, 2.95, 2.95, 2.96, 2.955, 2.96, 2.97,







              2.97, 2.97, 2.97, 2.94, 2.92, 2.925, 2.925, 2.925, 2.925,







              2.895, 2.94, 2.95, 2.97, 2.97, 2.97, 2.97, 2.97, 2.975,
2.975,







              2.975, 2.95, 2.95, 2.95, 2.965, 2.955, 2.945, 2.955, 2.955,







              2.955, 2.955, 2.95, 2.945, 2.96, 2.98, 2.935, 2.935, 2.935,







              2.95, 2.98, 2.97, 2.975, 2.96, 2.96, 2.96, 2.94),
CURVE_START_DT = c("",








       "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",








       "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",








       "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",








       "", "", "", "", "", "", "", "", "", "", "", "", "", ""),






                                                            QUOTE_DEF_CD =
c("Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub", "Henry Hub",







 "Henry Hub"), dn = c(NA, NA, NA, NA, NA, NA, NA, NA, NA,







                      NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
2.92007584473369,







                      2.91663946027188, 2.9135, 2.9106138770061,
2.9086350423062,







                      2.90576852275423, 2.90519066900209, 2.90512519592525,
2.90469624714387,







                      2.90440892112191, 2.90425071429154, 2.90421160864688,
2.90401373833782,







                      2.90371324973884, 2.90340911790111, 2.90321956918171,
2.90297106144673,







                      2.90282023993206, 2.9027725465393, 2.90365498942402,
2.90744321845618,







                      2.9100147084275, 2.9134290744498, 2.91717246420653,
2.92130686340485,







                      2.93832051661132, 2.94027625158384, 2.93939934053801,
2.93938458814558,







                      2.9384612414305, 2.9346043937093, 2.93139748533183,
2.92873214892687,







                      2.92907714041705, 2.92838750305027, 2.92887531407233,
2.92854248688935,







                      2.9290613918672, 2.92961818808345, 2.92962051473909,
2.92798148782779







 ), mavg = c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,







             NA, NA, NA, NA, NA, NA, NA, 2.953, 2.95175, 2.9505, 2.94925,







             2.94675, 2.94625, 2.94525, 2.945, 2.946, 2.947, 2.948, 2.949,







             2.9495, 2.9505, 2.95125, 2.9515, 2.9505, 2.9495, 2.9485,







             2.94975, 2.9515, 2.9525, 2.954, 2.9555, 2.957, 2.96, 2.9605,







             2.96025, 2.95975, 2.96025, 2.9585, 2.95675, 2.955, 2.95375,







             2.954, 2.95375, 2.955, 2.9555, 2.956, 2.95575, 2.955), up =
c(NA,








 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,








 NA, NA, NA, 2.98592415526631, 2.98686053972812, 2.9875, 2.9878861229939,








 2.9848649576938, 2.98673147724577, 2.98530933099791, 2.98487480407475,








 2.98730375285613, 2.98959107887809, 2.99174928570845, 2.99378839135312,








 2.99498626166217, 2.99728675026116, 2.99909088209889, 2.99978043081829,








 2.99802893855326, 2.99617976006793, 2.99422745346069, 2.99584501057598,








 2.99555678154382, 2.9949852915725, 2.9945709255502, 2.99382753579347,








 2.99269313659515, 2.98167948338868, 2.98072374841616, 2.98110065946199,








 2.98011541185442, 2.9820387585695, 2.9823956062907, 2.98210251466817,








 2.98126785107313, 2.97842285958295, 2.97961249694973, 2.97862468592767,








 2.98145751311065, 2.9819386081328, 2.98238181191655, 2.98187948526091,








 2.98201851217221), pctB = c(NA, NA, NA, NA, NA, NA, NA, NA,








                           NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
-0.00115180986540484,








                           0.119060256448094, 0.155405405405416,
0.186174515959769,








                           0.214678943438289, -0.133005555711918,
0.434472195750436,








                           0.56269623282195, 0.790530500746511,
0.770009595974702, 0.75143267648539,








                           0.734435747361799, 0.725342765605294,
0.761826263453277,








                           0.748218667361821, 0.743369825017154,
0.494740046640864,








                           0.505355640209733, 0.516401525631536,
0.665419204914405,








                           0.539721467131223, 0.411734158782905,
0.512324096461183,








                           0.493477274371434, 0.471983409265977,
0.384683598996404,








                           0.240404207372084, 0.134304132495249,
0.50613785770176, 0.953215357290844,








                           0.00827780400054887, 0.071048468274765,
0.119306506186558,








                           0.424005565966269, 1.00756472613798,
0.826637289959252, 0.877964473009239,








                           0.585102815878129, 0.575809804357899,
0.581325750537434,








                           0.222412546175904), cross_up = c(NA, NA, NA, NA,
NA, NA,








                                                            NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, FALSE,








                                                            FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,








                                                            FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,








                                                            FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,








                                                            FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE,








                                                            FALSE, FALSE,
FALSE, FALSE), cross_dn = c(NA, NA, NA, NA,









                          NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA,









                          TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE,
FALSE, FALSE,









                          FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,
FALSE, FALSE,









                          FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,
FALSE, FALSE,









                          FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,
FALSE, FALSE,









                          FALSE, FALSE, FALSE, FALSE, FALSE)), class =
"data.frame", .Names = c("COB_DT",










                    "PRICE", "CURVE_START_DT", "QUOTE_DEF_CD", "dn",
"mavg", "up",










                    "pctB", "cross_up", "cross_dn"), row.names = c(NA,
-60L)), `Henry Hub jv18` = structure(list(










                      COB_DT = structure(c(17151, 17152, 17153, 17154,
17155, 17156,










                                           17157, 17158, 17159, 17160,
17161, 17162, 17163, 17164, 17165,










                                           17166, 17167, 17168, 17169,
17170, 17171, 17172, 17173, 17174,










                                           17175, 17176, 17177, 17178,
17179, 17180, 17181, 17182, 17183,










                                           17184, 17185, 17186, 17187,
17188, 17189, 17190, 17191, 17192,










                                           17193, 17194, 17195, 17196,
17197, 17198, 17199, 17200, 17201,










                                           17202, 17203, 17204, 17205,
17206, 17207, 17208, 17209, 17210










                      ), class = "Date"), PRICE = c(-0.58, -0.58, -0.58,
-0.645,










                                                    -0.61, -0.675, -0.685,
-0.685, -0.685, -0.685, -0.685, -0.63,










                                                    -0.62, -0.58, -0.59,
-0.59, -0.59, -0.59, -0.555, -0.545,










                                                    -0.51, -0.49, -0.49,
-0.49, -0.465, -0.48, -0.46, -0.46,










                                                    -0.43, -0.43, -0.43,
-0.43, -0.43, -0.41, -0.38, -0.37, -0.37,










                                                    -0.37, -0.37, -0.385,
-0.37, -0.35, -0.465, -0.465, -0.465,










                                                    -0.5, -0.49, -0.475,
-0.475, -0.375, -0.375, -0.375, -0.295,










                                                    -0.295, -0.265, -0.285,
-0.26, -0.26, -0.26, -0.27), CURVE_START_DT = c("",











                                                "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "",











                                                "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "",











                                                "", "", "", "", "", "", "",
"", "", "", "", "", "", "", "",











                                                "", "", "", "", "", "", "",
"", "", "", "", "", "", ""),










                      QUOTE_DEF_CD = c("Dominion South Basis", "Dominion
South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis", "Dominion
South Basis", "Dominion South Basis",










                                       "Dominion South Basis"), dn = c(NA,
NA, NA, NA, NA, NA, NA,










                                                                       NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, -0.713921801503932,











 -0.720596316101235, -0.728803179455088, -0.735135162694137,











 -0.735660162446852, -0.740184328913496, -0.732877433700339,











 -0.722778780170072, -0.709329903557334, -0.695083239700345,











 -0.676323574997258, -0.652432125306766, -0.638170250551281,











 -0.623004896808335, -0.615203884726974, -0.605732722363753,











 -0.593744876941616, -0.577680534934208, -0.556963571902068,











 -0.541539596198718, -0.524069645625611, -0.513641930997681,











 -0.507274996479865, -0.50260074692116, -0.497706792863262,











 -0.497706792863262, -0.50222910301065, -0.507668380045843,











 -0.510039591914492, -0.515420178875468, -0.514712232154113,











 -0.513652444925869, -0.512258837989343, -0.517680034178804,











 -0.522046125247264, -0.529833230325465, -0.533588195172019,











 -0.53892091461952, -0.542798305725634, -0.545459666783158,











 -0.545505649627349), mavg = c(NA, NA, NA, NA, NA, NA, NA,











                         NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
-0.61925,











                         -0.61575, -0.61125, -0.60675, -0.599, -0.59175,
-0.582, -0.57075,











                         -0.5595, -0.54675, -0.534, -0.52125, -0.51125,
-0.50175,











                         -0.49325, -0.48275, -0.47175, -0.46075, -0.44975,
-0.4405,











                         -0.4325, -0.4255, -0.4185, -0.41725, -0.416,
-0.416, -0.417,











                         -0.4185, -0.41925, -0.4215, -0.41875, -0.416,
-0.41325, -0.4065,











                         -0.40075, -0.395, -0.39075, -0.38525, -0.37975,
-0.37425,











                         -0.3685), up = c(NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA,











                                          NA, NA, NA, NA, NA, NA, NA, NA,
NA, -0.524578198496067, -0.510903683898765,











                                          -0.493696820544912,
-0.478364837305863, -0.462339837553148,











                                          -0.443315671086504,
-0.431122566299662, -0.418721219829928,











                                          -0.409670096442666,
-0.398416760299655, -0.391676425002742,











                                          -0.390067874693234,
-0.384329749448719, -0.380495103191665,











                                          -0.371296115273026,
-0.359767277636247, -0.349755123058384,











                                          -0.343819465065792,
-0.342536428097931, -0.339460403801282,











                                          -0.340930354374389,
-0.337358069002319, -0.329725003520135,











                                          -0.331899253078839,
-0.334293207136738, -0.334293207136738,











                                          -0.33177089698935,
-0.329331619954156, -0.328460408085508,











                                          -0.327579821124531,
-0.322787767845886, -0.31834755507413,











                                          -0.314241162010656,
-0.295319965821196, -0.279453874752735,











                                          -0.260166769674534,
-0.24791180482798, -0.231579085380479,











                                          -0.216701694274365,
-0.203040333216842, -0.19149435037265











                         ), pctB = c(NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA,











                                     NA, NA, NA, NA, NA, NA, NA,
0.892144222569356, 1.00430956438132,











                                     1.01572403469667, 0.954686497839878,
0.898799467410229, 0.92695648953911,











                                     0.838022716513673, 0.86424024410413,
0.832043195776087, 0.893539574258111,











                                     0.865364627757573, 0.847798908527417,
0.820082885304309,











                                     0.795864339868325, 0.841317540586662,
0.917741606402606,











                                     0.917025708582399, 0.888050905826529,
0.871921197032991,











                                     0.848873128220668, 0.7593654244017,
0.814833129770324, 0.885806830279832,











                                     0.220271926594225, 0.200147329965559,
0.200147329965559,











                                     0.0130771234936691,
0.0990731245580526, 0.192971414319677,











                                     0.215183677029951, 0.72795426397407,
0.709928179633002, 0.693164573874287,











                                     1.00143895360151, 0.935916645253204,
0.982077006114149, 0.870174097595693,











                                     0.907526695308968, 0.867222460445268,
0.83365522562666, 0.778239706493471











                         ), cross_up = c(NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA,











                                         NA, NA, NA, NA, NA, NA, NA, NA,
FALSE, TRUE, TRUE, FALSE,











                                         FALSE, FALSE, FALSE, FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE,











                                         FALSE, FALSE, FALSE, FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE,











                                         FALSE, FALSE, FALSE, FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE,











                                         FALSE, FALSE, TRUE, FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE,











                                         FALSE), cross_dn = c(NA, NA, NA,
NA, NA, NA, NA, NA, NA,











                                                              NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, FALSE, FALSE, FALSE,











                                                              FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,











                                                              FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,











                                                              FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,











                                                              FALSE, FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,











                                                              FALSE,
FALSE)), class = "data.frame", .Names = c("COB_DT",












                                   "PRICE", "CURVE_START_DT",
"QUOTE_DEF_CD", "dn", "mavg", "up",












                                   "pctB", "cross_up", "cross_dn"),
row.names = c(NA, -60L)), `Dominion South Basis jv18` = structure(list(












                                     COB_DT = structure(c(17151, 17152,
17153, 17154, 17155, 17156,












                                                          17157, 17158,
17159, 17160, 17161, 17162, 17163, 17164, 17165,












                                                          17166, 17167,
17168, 17169, 17170, 17171, 17172, 17173, 17174,












                                                          17175, 17176,
17177, 17178, 17179, 17180, 17181, 17182, 17183,












                                                          17184, 17185,
17186, 17187, 17188, 17189, 17190, 17191, 17192,












                                                          17193, 17194,
17195, 17196, 17197, 17198, 17199, 17200, 17201,












                                                          17202, 17203,
17204, 17205, 17206, 17207, 17208, 17209, 17210












                                     ), class = "Date"), PRICE = c(2.92,
2.92, 2.92, 2.94, 2.86,












                                                                   2.93,
2.93, 2.94, 2.94, 2.94, 2.94, 2.965, 2.97, 2.975, 2.98,












                                                                   2.98,
2.98, 2.98, 2.92, 2.89, 2.9, 2.91, 2.91, 2.91, 2.85,












                                                                   2.905,
2.91, 2.96, 2.97, 2.97, 2.97, 2.97, 2.985, 2.965,












                                                                   2.975,
2.92, 2.92, 2.92, 2.94, 2.94, 2.95, 2.96, 2.96, 2.96,












                                                                   2.96,
2.945, 2.925, 2.945, 2.97, 2.92, 2.92, 2.92, 2.93,












                                                                   2.965,
2.955, 2.96, 2.935, 2.935, 2.935, 2.905), CURVE_START_DT = c("",













                                                           "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "",













                                                           "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "",













                                                           "", "", "", "",
"", "", "", "", "", "", "", "", "", "", "",













                                                           "", "", "", "",
"", "", "", "", "", "", "", "", "", ""),












                                     QUOTE_DEF_CD = c("Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub", "Henry
Hub", "Henry Hub", "Henry Hub", "Henry Hub",












                                                      "Henry Hub"), dn =
c(NA, NA, NA, NA, NA, NA, NA, NA, NA,













 NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 2.87802381402466,













 2.87511548720997, 2.87385702627089, 2.87262229289889, 2.86993521627356,













 2.86704287027043, 2.8644565921701, 2.86260604668442, 2.86279282077821,













 2.86278692190085, 2.8629294882634, 2.86321267138588, 2.86311137034422,













 2.86245437829422, 2.86269393040897, 2.86291778554333, 2.86163828369988,













 2.86088614260888, 2.86071158286838, 2.86182468606366, 2.86702941812813,













 2.87120520382413, 2.87427329309938, 2.87773118034116, 2.88159653006341,













 2.90425067568061, 2.9110874415183, 2.9144846804476, 2.91370567051746,













 2.91370567051746, 2.90962674152363, 2.90620835435588, 2.90340673131383,













 2.90450413929979, 2.90450413929979, 2.90605411955924, 2.90856931373228,













 2.91074342170337, 2.91305220827881, 2.91257822060098, 2.90649051848137












                                                      ), mavg = c(NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,












                                                                  NA, NA,
NA, NA, NA, NA, NA, 2.941, 2.94, 2.9395, 2.939, 2.9375,












                                                                  2.937,
2.93575, 2.93475, 2.93575, 2.93725, 2.93875, 2.94025,












                                                                  2.9405,
2.94125, 2.94075, 2.9405, 2.9375, 2.9345, 2.9315,












                                                                  2.9325,
2.935, 2.9375, 2.94, 2.9425, 2.945, 2.9505, 2.9525,












                                                                  2.95325,
2.9525, 2.9525, 2.95, 2.9475, 2.945, 2.94225, 2.94225,












                                                                  2.94125,
2.94325, 2.944, 2.94475, 2.9445, 2.94275), up = c(NA,













                                                 NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA,













                                                 NA, NA, NA,
3.00397618597533, 3.00488451279003, 3.00514297372911,













                                                 3.0053777071011,
3.00506478372643, 3.00695712972957, 3.0070434078299,













                                                 3.00689395331558,
3.00870717922179, 3.01171307809915, 3.0145705117366,













                                                 3.01728732861412,
3.01788862965578, 3.02004562170578, 3.01880606959103,













                                                 3.01808221445667,
3.01336171630012, 3.00811385739112, 3.00228841713162,













                                                 3.00317531393634,
3.00297058187187, 3.00379479617587, 3.00572670690062,













                                                 3.00726881965885,
3.00840346993659, 2.99674932431939, 2.9939125584817,













                                                 2.9920153195524,
2.99129432948254, 2.99129432948254, 2.99037325847637,













                                                 2.98879164564413,
2.98659326868617, 2.97999586070021, 2.97999586070021,













                                                 2.97644588044076,
2.97793068626772, 2.97725657829663, 2.97644779172119,













                                                 2.97642177939902,
2.97900948151863), pctB = c(NA, NA, NA,














                   NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA,














                   NA, 0.095085037223641, 0.191760034251622,
0.275299637385869,














                   0.281553165463918, 0.296491615281828,
-0.121809387665777,














                   0.284341912274921, 0.328467952873774, 0.666193377119756,














                   0.719907643063004, 0.706078799023163, 0.69308821148912,
0.690596474774226,














                   0.777616947825876, 0.655337055318415, 0.722344774776124,














                   0.384658554713109, 0.401513108306767, 0.418772021850563,














                   0.55305954499725, 0.53678061789603, 0.594275876245545,
0.652145154862543,














                   0.635095869371843, 0.618290055851844, 0.602704203140293,














                   0.409447758421942, 0.135627923022663, 0.40333638833254,
0.725548427224084,














                   0.128466946536447, 0.167002857708663, 0.19947060197853,
0.337730551473016,














                   0.80135754726439, 0.695335360670196, 0.741488877565705,
0.364688424652042,














                   0.346203797321917, 0.351198771201796, -0.0205534996494938













                                                 ), cross_up = c(NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA,













                                                                 NA, NA,
NA, NA, NA, NA, NA, NA, FALSE, FALSE, FALSE, FALSE,













                                                                 FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,













                                                                 FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,













                                                                 FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,













                                                                 FALSE,
FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,













                                                                 FALSE),
cross_dn = c(NA, NA, NA, NA, NA, NA, NA, NA, NA,














          NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, FALSE, FALSE, FALSE,














          FALSE, FALSE, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,














          FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,














          FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,














          FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE,














          FALSE, TRUE)), class = "data.frame", .Names = c("COB_DT",














                                                          "PRICE",
"CURVE_START_DT", "QUOTE_DEF_CD", "dn", "mavg", "up",














                                                          "pctB",
"cross_up", "cross_dn"), row.names = c(NA, -60L))), .Names = c("Henry Hub
xh19",















                                                     "Dominion South Basis
xh19", "Henry Hub jv18", "Dominion South Basis jv18"














                                                          ))
process_lgl <- df %>%  map_lgl( ~ .$cross_up[nrow(.)] == TRUE |
.$cross_dn[nrow(.)] == TRUE)
process_df <-  data.frame(Names = names(process_lgl), Process =
process_lgl, row.names = NULL)
process_df
df[process_df$Process == TRUE] %>% lmap(graph_send)

	[[alternative HTML version deleted]]


From josh.m.ulrich at gmail.com  Tue Feb 14 18:09:21 2017
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Tue, 14 Feb 2017 11:09:21 -0600
Subject: [R-SIG-Finance] Quantmod graphing issue
In-Reply-To: <CAE64KYLi4SrG4maW7Mm=KkJpnGVm9N8ZOUxtk9MKe14L1xQ5Mg@mail.gmail.com>
References: <CAE64KYLi4SrG4maW7Mm=KkJpnGVm9N8ZOUxtk9MKe14L1xQ5Mg@mail.gmail.com>
Message-ID: <CAPPM_gQ340gNFtnLjM9teAg+ns6mSqBuaPGARTodb-QRaUDo6A@mail.gmail.com>

On Tue, Feb 14, 2017 at 8:58 AM, Jon Golenbock <jongolenbock at gmail.com> wrote:
> Hi, having an issue and I'm running into a wall. What I'm trying to do is
> set up some alerts given a list of products, terms, and rules. For example,
> look at the prompt 3 months for natural gas and crude, and if there is RSI
> divergence on any of those charts, graph them with the relevant technical
> indicators) and email them out (haven't written this part yet but it should
> be pretty simple I think).
>
> The issue I'm having might be a graphics issue (my suspicion) or I might be
> using a purrr function incorrectly, as I'm still figuring out how to best
> use it's mapping functions.
>
> Code below -- should be spitting out two graphs, but it only creates one
> and then throws the error "Error: is.list(res) is not TRUE". This
> particular (vanilla) example is looking to flag natgas pricing as it breaks
> bollinger bands.
>
> Worth noting, I am using the lmap() function instead of the map() function
> because I want the name passed as well. i.e if I pass df[[1]] to
> graph_send(), it will pass an unnamed dataframe. if i pass df[1], it passes
> a (named) list containing the dataframe, which I can still access using
> mylist[[1]].
>

I have trouble following your code, because my brain does not parse
"%>%" very well.  I've also never used purrr, so I can't help if
that's the issue.  If you truly suspect the issue is with purr, you
should ask your question on a more general forum, because purrr
doesn't really have anything to do with finance.

Based on your description, it seems like a simple for loop works fine:
for (n in names(df)) {
  d <- df[[n]]
  lastobs <- last(d)
  if (lastobs$cross_up || lastobs$cross_dn) {
    x <- na.locf(xts(d$PRICE, d$COB_DT))
    dev.new()  # open new plot device for each chart
    candleChart(x, theme="white", name=n, TA="addBBands()")
  }
}

>         [[alternative %>% version deleted]]

I would also note that creating OHLC data from close prices of the
same periodicity is not a good idea.  The day's open is usually not
the prior day's close.

> Any help is appreciated, thank you in advance!!
>
> library(TTR)
> library(dplyr)
> library(purrr)
> library(magrittr)
> library(quantmod)
>
> graph_send <- function(mylist){
>   #print(df %>% str())
>   df2 <- mylist[[1]] %<>% dplyr::select(COB_DT, PRICE,QUOTE_DEF_CD) %>%
>     dplyr::rename (Date = COB_DT, Close = PRICE) %>%
>     dplyr::mutate (Open = lag(Close))
>
>
>   df2$Open[1] <- df2$Close[1]
>   df2$High <- pmax(df2$Close, df2$Open)
>   df2$Low <- pmin(df2$Close, df2$Open)
>   #print(df2 %>% str())
>
>
>   df3 <- df2 %>% select(Date, Open, High, Low, Close)
>   ts <- xts(df3[,-1], df3[,1]) %>% zoo::na.locf()
>   #print(ts)
>
>
>
>   candleChart(ts, theme = "white", name = names(mylist))
>   plot(addBBands())
> }
>
> df <- structure(list(`Henry Hub xh19` = structure(list(COB_DT =

<snip thousands blank lines... and some data>

>                                                           ))
> process_lgl <- df %>%  map_lgl( ~ .$cross_up[nrow(.)] == TRUE |
> .$cross_dn[nrow(.)] == TRUE)
> process_df <-  data.frame(Names = names(process_lgl), Process =
> process_lgl, row.names = NULL)
> process_df
> df[process_df$Process == TRUE] %>% lmap(graph_send)
>
>         [[alternative HTML version deleted]]
>
Please follow the posting guide and send plain text. The list server
doesn't like HTML.

> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2017 | www.rinfinance.com


From atakanokan at outlook.com  Wed Feb 15 09:54:52 2017
From: atakanokan at outlook.com (Atakan Okan)
Date: Wed, 15 Feb 2017 08:54:52 +0000
Subject: [R-SIG-Finance] Custom Indicator Problem
Message-ID: <VI1PR03MB148596C6D9EEAFD14B9ECCBCC75B0@VI1PR03MB1485.eurprd03.prod.outlook.com>

Hi everyone,


I am facing a problem regarding a higher-time-frame custom indicator. I have daily yahoo finance data but would like to use the technical indicator MACD on weekly close data. I have written a custom function as I have seen in a previous post some years ago but couldn't manage to add the weekly indicator output to mktdata. Any help is appreciated, thank you


Reproducible example:


#Custom Indicator Problem

library(quantmod)
library(quantstrat)
library(TTR)

Sys.setenv(TZ = "UTC")

.strategy <- new.env()
.blotter  <- new.env()

getSymbols("GARAN.IS")


#Stock
symbol.name = "GARAN.IS"
tick.size = 0.01
currency('TRY')
stock(symbol.name, currency="TRY", multiplier=1,tick_size= tick.size)

initialEquity = 1000
port.acct.currency <- "TRY"

strategy.st <- 'Custom_Prob'
rm.strat(strategy.st)

initDate = as.character(as.Date(index(GARAN.IS[1])-1))
initPortf(strategy.st, symbol.name, initDate=initDate, currency = port.acct.currency)
initAcct(strategy.st, portfolios=strategy.st, initDate=initDate,
         initEq=initialEquity, currency = port.acct.currency)
initOrders(portfolio=strategy.st,initDate=initDate)
strategy(strategy.st,store=TRUE)
summary(getStrategy(strategy.st))

#MACD W1 indicator
MACD_W1 <- function(mktdata=quote(mktdata),
                    nFast = 12,
                    nSlow = 26,
                    nSig = 9){
  y <- GARAN.IS
  is.xts(y)
  y <- to.weekly(y)
  y <- Cl(y)
  y <- MACD(y,
            nFast = nFast,
            nSlow = nSlow,
            nSig = nSig,
            maType = "EMA")
  y <- cbind(mktdata, y[paste(first(index(mktdata)),
                              last(index(mktdata)),
                              sep = "/")])
  y <- y[-which(is.na(y[,1])),]
  y <- na.locf(y)
  y <- y[,c((ncol(y)-1),ncol(y))]
  y
}

add.indicator(strategy.st,
              name = "MACD",
              arguments = list(x=Cl(GARAN.IS)),
              label='macd')

add.indicator(strategy.st,
              name = "MACD_W1",
              arguments = list(mktdata=quote(mktdata)))


apply.indicators.df <- applyIndicators(strategy.st, mktdata=GARAN.IS)    #testing indicator calculations


-Atakan Okan



	[[alternative HTML version deleted]]


From agquantr at gmail.com  Wed Feb 15 21:11:09 2017
From: agquantr at gmail.com (Am Gut)
Date: Wed, 15 Feb 2017 15:11:09 -0500
Subject: [R-SIG-Finance] Creating variable based on lags
Message-ID: <CACpG4GCT-3SvcR75wLQtVd_nE7Vu_4qmFJ4WN-JMv6FST3mrFQ@mail.gmail.com>

Good Afternoon Everyone,

I have a series of returns are was hoping that someone could help me create
a variable based on a pre-specified set of lagged observations. For
example, I would want to sum up the last 25 returns to make a new return
column. I would also like to weight the returns by a factor of 0.25^i with
i being the lag number. I am intuitively thinking a for loop but can not
rationalize internally how to write this. I am trying to make a variable
like below:

newreturn = return(-1)*0.25^1 + return(-2)*0.25^2 + .... return(-25)*0.25^25

And obviously I would like to apply this to all new observations past the
25th observatios to the end of my dataset. I hope this is clear as I know
the solution must be relatively simple. I hope to hear from you guys.

Thanks,

Am Gut

	[[alternative HTML version deleted]]


From nicolas.roux at hec.edu  Thu Feb 16 15:21:35 2017
From: nicolas.roux at hec.edu (ROUX, Nicolas)
Date: Thu, 16 Feb 2017 15:21:35 +0100
Subject: [R-SIG-Finance] Jegadeesh & Titman Strategy Implementation
Message-ID: <CAFF3=2qfvaGaoR2pSj3NKzwaUkNKg9TWrodvZK=5m_ZoGDXvWA@mail.gmail.com>

Hello all,

Is there a package/function capable of implementing a momentum strategy
described in Jegadeesh & Titman (1993) and backtesting it? General steps of
the strategy are:
1- taking monthly stock prices/returns,
2- ranking monthly/period returns,
3- create equally weighted portfolio of top and bottom stock returns,
4- hold for "n" months (quarter, semester, year) with no updating in
between,
5- rebalance portfolio after holding period,
6- return results.

I have created a roundabout way using return.portfolio from
performanceanalytics but would like to use a package which allows the
possibility to progressively more complex strategies.
I cannot find a way to implement the holding period in the quantstrat
package or the ranking conditions and holding period in portfolioanalytics
package (uses only a complex ranking method).

Cheers,

Nicolas Roux

	[[alternative HTML version deleted]]


From ku218 at cam.ac.uk  Fri Feb 17 01:50:30 2017
From: ku218 at cam.ac.uk (K. Upadhyay)
Date: Fri, 17 Feb 2017 00:50:30 +0000
Subject: [R-SIG-Finance] Using rgenoud to fit LPPL model
Message-ID: <f106bf7d3970658cf5fdc7e4e59cf278@cam.ac.uk>

apologies if this appears too simplistic/poorly worded a question, this 
is my first time coding in R

I am attempting to fit the LPPL model to a price series in order to test 
for its predictive power for financial crashes. As I understand the 
difficulty in fitting the model is due to the number of variables 
leading to multiple local minima. So far I have attempted to fit the 
model using the nls.lm function, my code is below:

mydata<-fread("data.csv", sep="," , header=TRUE)

f <- function(pars, xx)
    with(pars,(a + b*(tc - xx)^m * (1 + c * cos(omega*log(tc - xx) + 
phi))))`

resids <- function(p, observed, xx) {mydata$Logp - f(p,xx)}

nls.out <- nls.lm(par=list(a=1,b=-1,tc=100, m=0.5, omega=1, phi=1, c=1 
),
               fn = resids, observed = mydata$Logp, xx = mydata$day,
               control=nls.lm.control(maxiter=10000, ftol=1e-6, 
maxfev=1e6))

However the fit for this model is still poor and irrespective of how I 
alter the starting parameters it fails to predict a crash occurring one 
day later with any degree of accuracy. This is troublesome as the data I 
have fitted the model to has been successfully modelled using the LPPL 
model in numerous papers.

 From what I have read online I believe using the rgenoud package is a 
more powerful global optimiser tool. However I am not able to generate 
the correct code to run the package successfully. Any help in doing so 
would be greatly appreciated.


From robert at rwages.com  Fri Feb 17 21:42:16 2017
From: robert at rwages.com (Robert Wages)
Date: Fri, 17 Feb 2017 15:42:16 -0500
Subject: [R-SIG-Finance] Jegadeesh & Titman Strategy Implementation (ROUX,
	Nicolas)
Message-ID: <023101d2895e$53d14340$fb73c9c0$@rwages.com>

Hi Nicolas,

I created custom functions to determine the weights of long-short portfolios
to  backtest Jegadeesh & Titman strategies using the return.portfolio
function.  The custom functions could accomplish steps 1:6 in your example.
In addition, I could vary the number of long and short securities, the
lookback period, the hold period, and make an estimate of transaction fees
based on the period turnover.  I typically use the cumulative return over
the lookback period to rank the securities, but I could change the function
to be the average return or the standard deviation of the return
(volatility), or whatever other function I could apply to the lookback
period returns.  If I wished, I could have modified the weighting scheme to
be based on something other than equal weight very easily.  Ultimately, I
found I could accurately backtest a very wide variety of Jegadeesh & Titman
inspired momentum strategies using this setup with return.portfolio.  (I
exactly replicated results from published papers, building confidence in my
approach.)

I did try to accomplish the same thing with Quanstrat, but gave up, since it
would be substantially harder.  As designed, Quanstrat executes trades based
on signals generated by each security's market data.  One can add the
desired portfolio weight of each security to the market data dataframe to
generate trading signals on fixed lots of the securities, but to generate
trading signals for lots proportional to the whole portfolio (which is what
the strategy calls for) is not at all obvious (to me anyway).  There is
probably a way to create a custom order sizing function that can use the
whole portfolio value as an input, but I could not figure it out in the time
I had available.

There are other trading strategies that I would like to test that involve
the whole portfolio, so I would certainly be interested in hearing anyone
else's ideas of using Quantstrat for that.  But for the momentum strategies
of Jegadeesh & Titman, I found  the return.portfolio function to be
perfectly adequate.

Robert C Wages
USA Mobile: +1 717 618 2828
robert at rwages.com

-----Original Message-----
From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On Behalf
Of r-sig-finance-request at r-project.org
Sent: Friday, February 17, 2017 6:00 AM
To: r-sig-finance at r-project.org
Subject: R-SIG-Finance Digest, Vol 153, Issue 6

Send R-SIG-Finance mailing list submissions to
	r-sig-finance at r-project.org

To subscribe or unsubscribe via the World Wide Web, visit
	https://stat.ethz.ch/mailman/listinfo/r-sig-finance
or, via email, send a message with subject or body 'help' to
	r-sig-finance-request at r-project.org

You can reach the person managing the list at
	r-sig-finance-owner at r-project.org

When replying, please edit your Subject line so it is more specific than
"Re: Contents of R-SIG-Finance digest..."


Today's Topics:

   1. Jegadeesh & Titman Strategy Implementation (ROUX, Nicolas)
   2. Using rgenoud to fit LPPL model (K. Upadhyay)


----------------------------------------------------------------------

Message: 1
Date: Thu, 16 Feb 2017 15:21:35 +0100
From: "ROUX, Nicolas" <nicolas.roux at hec.edu>
To: r-sig-finance at r-project.org
Subject: [R-SIG-Finance] Jegadeesh & Titman Strategy Implementation
Message-ID:
	<CAFF3=2qfvaGaoR2pSj3NKzwaUkNKg9TWrodvZK=5m_ZoGDXvWA at mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"

Hello all,

Is there a package/function capable of implementing a momentum strategy
described in Jegadeesh & Titman (1993) and backtesting it? General steps of
the strategy are:
1- taking monthly stock prices/returns,
2- ranking monthly/period returns,
3- create equally weighted portfolio of top and bottom stock returns,
4- hold for "n" months (quarter, semester, year) with no updating in
between,
5- rebalance portfolio after holding period,
6- return results.

I have created a roundabout way using return.portfolio from
performanceanalytics but would like to use a package which allows the
possibility to progressively more complex strategies.
I cannot find a way to implement the holding period in the quantstrat
package or the ranking conditions and holding period in portfolioanalytics
package (uses only a complex ranking method).

Cheers,

Nicolas Roux

	[[alternative HTML version deleted]]



------------------------------

Message: 2
Date: Fri, 17 Feb 2017 00:50:30 +0000
From: "K. Upadhyay" <ku218 at cam.ac.uk>
To: r-sig-finance at r-project.org
Subject: [R-SIG-Finance] Using rgenoud to fit LPPL model
Message-ID: <f106bf7d3970658cf5fdc7e4e59cf278 at cam.ac.uk>
Content-Type: text/plain; charset=US-ASCII; format=flowed

apologies if this appears too simplistic/poorly worded a question, this is
my first time coding in R

I am attempting to fit the LPPL model to a price series in order to test for
its predictive power for financial crashes. As I understand the difficulty
in fitting the model is due to the number of variables leading to multiple
local minima. So far I have attempted to fit the model using the nls.lm
function, my code is below:

mydata<-fread("data.csv", sep="," , header=TRUE)

f <- function(pars, xx)
    with(pars,(a + b*(tc - xx)^m * (1 + c * cos(omega*log(tc - xx) +
phi))))`

resids <- function(p, observed, xx) {mydata$Logp - f(p,xx)}

nls.out <- nls.lm(par=list(a=1,b=-1,tc=100, m=0.5, omega=1, phi=1, c=1 ),
               fn = resids, observed = mydata$Logp, xx = mydata$day,
               control=nls.lm.control(maxiter=10000, ftol=1e-6,
maxfev=1e6))

However the fit for this model is still poor and irrespective of how I alter
the starting parameters it fails to predict a crash occurring one day later
with any degree of accuracy. This is troublesome as the data I have fitted
the model to has been successfully modelled using the LPPL model in numerous
papers.

 From what I have read online I believe using the rgenoud package is a more
powerful global optimiser tool. However I am not able to generate the
correct code to run the package successfully. Any help in doing so would be
greatly appreciated.



------------------------------

Subject: Digest Footer

_______________________________________________
R-SIG-Finance mailing list
R-SIG-Finance at r-project.org
https://stat.ethz.ch/mailman/listinfo/r-sig-finance

------------------------------

End of R-SIG-Finance Digest, Vol 153, Issue 6


From es at enricoschumann.net  Sun Feb 19 23:55:51 2017
From: es at enricoschumann.net (Enrico Schumann)
Date: Sun, 19 Feb 2017 23:55:51 +0100
Subject: [R-SIG-Finance] Jegadeesh & Titman Strategy Implementation
In-Reply-To: <CAFF3=2qfvaGaoR2pSj3NKzwaUkNKg9TWrodvZK=5m_ZoGDXvWA@mail.gmail.com>
	(Nicolas ROUX's message of "Thu, 16 Feb 2017 15:21:35 +0100")
References: <CAFF3=2qfvaGaoR2pSj3NKzwaUkNKg9TWrodvZK=5m_ZoGDXvWA@mail.gmail.com>
Message-ID: <874lzpvlhk.fsf@enricoschumann.net>

On Thu, 16 Feb 2017, ROUX, Nicolas writes:

> Hello all,
>
> Is there a package/function capable of implementing a momentum strategy
> described in Jegadeesh & Titman (1993) and backtesting it? General steps of
> the strategy are:
> 1- taking monthly stock prices/returns,
> 2- ranking monthly/period returns,
> 3- create equally weighted portfolio of top and bottom stock returns,
> 4- hold for "n" months (quarter, semester, year) with no updating in
> between,
> 5- rebalance portfolio after holding period,
> 6- return results.
>
> I have created a roundabout way using return.portfolio from
> performanceanalytics but would like to use a package which allows the
> possibility to progressively more complex strategies.
> I cannot find a way to implement the holding period in the quantstrat
> package or the ranking conditions and holding period in portfolioanalytics
> package (uses only a complex ranking method).
>
> Cheers,
>
> Nicolas Roux
>

Hi Nicolas,

I have written some code, a package actually, that
might be used for such computations. It is available
from http://enricoschumann.net/R/packages/PMwR/index.htm or
from https://github.com/enricoschumann/PMwR . It is far
from complete, but perhaps it is useful.

Below is a brief example, for which I create random
monthly prices of 100 assets. These I store in a matrix
P (see below for the code). Dates are stored in a
vector 'timestamp'. Just plug in your own data instead,
but with these random data data, you could directly run
the example below.

The key ingredient for simulating a strategy is a
function that is called at any instant of time at which
trading may take place, and which returns the desired
position (or, alternatively, the desired weights). For
a simple momentum strategy, it may look like this:

  mom_weights <- function() {
      k <- 10                              ## Number of stocks in the portfolio.
  
      M <- Close(lag = 1)/Close(lag = 13)  ## Compute 1-year return and 
      r <- order(M)                        ## rank assets. Close(lag = ...) returns a
                                           ## single-row matrix of close prices.
      
      w <- numeric(length(M))              ## Set equal-weight portfolios.
      w[head(r, k)] <- -1/k
      w[tail(r, k)] <-  1/k
      w
  }

You can then call the function 'btest' ('backtest') and
either take the raw equity curve (as a zoo object, say)
or have some stats computed.

  require("PMwR")
  result <- btest(prices = list(P),
                  signal = mom_weights,
                  b = 13,                 ## the burn-in 
                  convert.weights = TRUE, ## since mom_weights returns weights, 
  		                          ## convert them to positions
                  initial.cash = 100,
                  timestamp = timestamp,
                  include.data = TRUE)
  
  summary(as.NAVseries(result))

  ## ---------------------------------------------------------
  ## 31 Dec 1997 ==> 31 Dec 2016   (229 data points, 0 NAs)
  ##         100         81.2107 
  ## ---------------------------------------------------------
  ## High                  105.04  (30 Nov 1999)
  ## Low                    74.05  (31 Jan 2015)
  ## ---------------------------------------------------------
  ## Return (%)              -1.1  (annualised)
  ## ---------------------------------------------------------
  ## Max. drawdown (%)       29.5
  ## _ peak                105.04  (30 Nov 1999)
  ## _ trough               74.05  (31 Jan 2015)
  ## _ underwater now (%)    22.7
  ## ---------------------------------------------------------
  ## Volatility (%)           6.3  (annualised)
  ## _ upside                 4.2
  ## _ downside               4.7
  ## ---------------------------------------------------------
  ## 
  ## Monthly returns  ??????? 
  ## 
  ##       Jan  Feb  Mar  Apr  May  Jun  Jul  Aug  Sep  Oct  Nov  Dec   YTD
  ## 1998  0.0 -1.9 -1.0  2.2  1.7  0.1 -1.3 -0.3 -1.4  1.8  1.1 -2.1  -1.2
  ## 1999 -2.3  1.1 -0.6  0.6  1.0  1.5 -0.2  0.2  3.1  1.7  0.1 -1.5   4.8
  ## 2000  0.7 -3.0 -0.3 -1.3 -2.3 -1.0  0.7  0.4 -1.1 -1.8  2.0 -1.7  -8.6
  ## [ ... ]
  
(Since I used random data, these numbers signify
nothing.)

Now, the previous call of btest computed the portfolio
every month:

  unique(journal(result)$timestamp)

  ## [1] "1998-01-31" "1998-02-28" "1998-03-31" "1998-04-30" "1998-05-31"
  ## [6] "1998-06-30" "1998-07-31" "1998-08-31" "1998-09-30" "1998-10-31"

There are several possiblities for how to trade less
often, but a simple one here would be to precompute the
dates at which trading should take place, and pass
these points in time as parameter 'do.signal'. For
example, to trade only every second timestamp:

  result <- btest(list(P),
                  signal = mom_weights,
                  do.signal = seq(1, length(timestamp), by = 2),
                  b = 13,
                  convert.weights = TRUE,
                  initial.cash = 100,
                  timestamp = timestamp,
                  include.data = TRUE)

  unique(journal(result)$timestamp)

  ## [1] "1998-02-28" "1998-04-30" "1998-06-30" "1998-08-31" "1998-10-31"
  ## [6] "1998-12-31" "1999-02-28" "1999-04-30" "1999-06-30" "1999-08-31"


Kind regards
     Enrico



## Appendix: Random data

  na <- 100 ## number of assets
  timestamp <- seq(as.Date("1996-12-01"),
                   as.Date("2016-12-31"),
                   by = "1 day")
  timestamp <- aggregate(timestamp,
                         by = list(format(timestamp, "%Y-%m")),
                         FUN = tail, 1)[[2]]
                                 
  np <- length(timestamp)
  P <- array(rnorm(np*na, mean = 0.0025, sd = 0.04),
             dim = c(np, na))
  P[1, ] <- 0
  P <- apply(P, 2, function(x) cumprod(1 + x))
  plot(P[ ,1])
  



-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From oleg.mubarakshin at gmail.com  Tue Feb 21 14:42:01 2017
From: oleg.mubarakshin at gmail.com (Oleg Mubarakshin)
Date: Tue, 21 Feb 2017 13:42:01 +0000
Subject: [R-SIG-Finance] Fw: clipping region in ggplot
Message-ID: <58ac43ac.d4b81c0a.b8e37.b925@mx.google.com>

An HTML attachment was scrubbed...
URL: <https://stat.ethz.ch/pipermail/r-sig-finance/attachments/20170221/41b8bd4f/attachment.html>

From josh.m.ulrich at gmail.com  Wed Feb 22 03:34:07 2017
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Tue, 21 Feb 2017 20:34:07 -0600
Subject: [R-SIG-Finance] Creating variable based on lags
In-Reply-To: <CACpG4GCT-3SvcR75wLQtVd_nE7Vu_4qmFJ4WN-JMv6FST3mrFQ@mail.gmail.com>
References: <CACpG4GCT-3SvcR75wLQtVd_nE7Vu_4qmFJ4WN-JMv6FST3mrFQ@mail.gmail.com>
Message-ID: <CAPPM_gT0EejrZ_Fzxb2cjBE=vL516WSy4Z82R7zHB2F7ij6wdw@mail.gmail.com>

On Wed, Feb 15, 2017 at 2:11 PM, Am Gut <agquantr at gmail.com> wrote:
> Good Afternoon Everyone,
>
> I have a series of returns are was hoping that someone could help me create
> a variable based on a pre-specified set of lagged observations. For
> example, I would want to sum up the last 25 returns to make a new return
> column. I would also like to weight the returns by a factor of 0.25^i with
> i being the lag number. I am intuitively thinking a for loop but can not
> rationalize internally how to write this. I am trying to make a variable
> like below:
>
> newreturn = return(-1)*0.25^1 + return(-2)*0.25^2 + .... return(-25)*0.25^25
>
> And obviously I would like to apply this to all new observations past the
> 25th observatios to the end of my dataset. I hope this is clear as I know
> the solution must be relatively simple. I hope to hear from you guys.
>
If you have a set of weights you would like to apply, you can use
TTR::WMA.  It calculates a weighted moving average, and the
denominator in the average is the sum of the weights.  So if you just
want the sum, you can multiply the result by the sum of the weights.
Or you can use a for loop, like you thought.

# random data
set.seed(21)
x <- rnorm(10, 0, 0.01)
n <- 5
# pre-allocate result
y <- x * NA
# weight vector
w <- 0.25^(n:1)

# loop over input
for(i in n:length(x)) {
  y[i] <- sum(x[(i-n+1):i] * w)
}

# Use TTR's WMA function
z <- TTR::WMA(x, n, w) * sum(w)

# verify the results are the same
all.equal(y, z)


> Thanks,
>
> Am Gut
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2017 | www.rinfinance.com


From rjkft at yahoo.com  Wed Feb 22 12:22:34 2017
From: rjkft at yahoo.com (John Kumar)
Date: Wed, 22 Feb 2017 12:22:34 +0100
Subject: [R-SIG-Finance] Optimization of Custom Indicator Based Threshold
	Multiplier
Message-ID: <003401d28cfd$f8378b90$e8a6a2b0$@yahoo.com>

Hi good people of the mailing list,

I am having trouble implementing a threshold multiplier (ATR based) that is
set via a custom indicator (i.e. apply.paramset will not run). I've had a
similar problem previously when the indicator label in the paramset and the
indicator did not match, but here I have been careful to match them. It will
run properly with a single value using apply.strategy, so I'm assuming the
syntax is OK. The function, two rules and distribution are presented below
along with the complete code.  Any help to get this to run would be
appreciated. Cheers

John

 

atrStopThresh <- function(HLC, n=14, atr_mult=2){

  ATR <- ATR(HLC = HLC, n)

  pctATR <- (atr_mult*ATR$atr)/Cl(HLC)

  return(pctATR)

}

 

add.indicator(strategy = strat,name =
"atrStopThresh",arguments=list(HLC=quote(OHLC(mktdata)),

                                                          atr_mult =
atrMult), 

              label = "atr_mult_stop"

)

 

# c) Stoploss rules

add.rule(strategy=strat,

         name='ruleSignal',

         arguments=list(sigcol='long', sigval=TRUE, orderside=NULL,
ordertype='stoplimit', 

                        prefer='High', orderqty="all", replace=FALSE,
orderset ="ocolong",

                        tmult=TRUE, threshold="atr.atrStopThresh"

         ),

         type='chain', parent = "EnterLONG",

         label='StopLONG',enabled = TRUE

)

 

add.rule(strategy=strat,

         name='ruleSignal',

         arguments=list(sigcol='short', sigval=TRUE, orderside=NULL,
ordertype='stoplimit', 

                        prefer='Low', orderqty="all", replace=FALSE,
orderset ="ocoshort",

                        tmult=TRUE, threshold="atr.atrStopThresh"

         ),

         type='chain', parent = "EnterSHORT",

         label='StopSHORT',enabled = TRUE

)

 

add.distribution(portfolio.st,

                 paramset.label = "DMA_OPT",

                 component.type = "indicator",

                 component.label = "atr_mult_stop",

                 variable = list(atr_mult = atrMult),

                 label = "atr_mult_stop"

)

 

Full Code:

# This strategy uses a simple moving average crossover (MAfast and MASlow),
to either a) go long if the fast

# moving avergae is above the slow moving average or b) short if the fast
moving avergae is below the slow 

# moving average. It is essentially a modified version of the luxor demo,
with the ordersets removed. This

# prevents the one closes other behaviour and allows us to be always in the
market. Has a rebalancing rule 

# that enables us to compare being 100% invested in this strategy to buy and
hold. No leverage. Here the

# simple percentage multiple stop loss is replace with an ATR based stop
loss, which is implemented

# via a custom indicatoe. Working.

 

# Library and time zone setup

library(quantstrat)       # Required package for strategy back testing

library(doParallel)       # For parrallel optimization

library(rgl)              # Library to load 3D trade graphs

library(reshape2)         # Library to load 3D trade graphs

ttz<-Sys.getenv('TZ')     # Time zone to UTC, saving original time zone

Sys.setenv(TZ='UTC')

 

# Quantstrat general variables

strat        <- "DMA1EQ"       # Give the stratgey a name variable

portfolio.st <- "DMA1EQ"       # Portfolio name

account.st   <- "DMA1EQ"       # Account name

initEq       <- 10000          # this parameter is required to get pct
equity rebalancing to work

 

# Strategy specific variables

MAfast  <- 10        #fast moving average period

MAslow  <- 100        #slow moving average period

atrMult <- seq(1, 5, by = 1)            #atr multiplier

 

# Strategy Functions

# Custom indicator to generate the threshold multiplier to set an ATR based
stop, if a simple % multiplier

# is desired just set it to return a fixed numeric. e.g. return(0.04)

atrStopThresh <- function(HLC, n=14, atr_mult=2){

  ATR <- ATR(HLC = HLC, n)

  pctATR <- (atr_mult*ATR$atr)/Cl(HLC)

  return(pctATR)

}

 

# Symbols etc

currency('USD')             # set USD as a base currency

symbol <- "GSPC"            # Universe selection At this stage is only one
symbol

 

# set the instument as a future and get the data from yahoo

stock(symbol, currency = "USD", multiplier = 1)

getSymbols("^GSPC", from = '1995-01-01')

 

# if run previously, run this code from here down

delete.paramset(portfolio.st,"DMA_OPT")

rm.strat(portfolio.st)

 

# initialize the portfolio, account and orders. Starting equity and assuming
data post 1995.

initPortf(portfolio.st, symbols = symbol, initDate = "1995-01-01")

initAcct(account.st, portfolios = portfolio.st, initEq = initEq, initDate =
"1995-01-01")

initOrders(portfolio = portfolio.st, initDate = "1995-01-01")

 

# define the strategy with a position limit to prevent multiple trades in a
direction

strategy(strat, store = TRUE)

addPosLimit(strat, symbol, timestamp="1995-01-01", maxpos=100, 

            longlevels = 1, minpos=-100, shortlevels = 1)

 

# Add the indicators - One bband for the breakout another for the stop

 

add.indicator(strategy = strat,name =
"SMA",arguments=list(x=quote(Cl(mktdata)[,1]),

                                                           n = MAfast),
label = "nFast"

)

 

add.indicator(strategy = strat,name =
"SMA",arguments=list(x=quote(Cl(mktdata)[,1]),

                                                           n = MAslow),
label = "nSlow"

)

 

add.indicator(strategy = strat,name =
"atrStopThresh",arguments=list(HLC=quote(OHLC(mktdata)),

                                                          atr_mult =
atrMult), 

              label = "atr_mult_stop"

)

 

# Add the signals -  Go long on a cross of the close greater than the
breakout band and close on a cross 

# less than the close band. Signals reversed for a short.

 

add.signal(strategy=strat,name='sigCrossover', arguments = 

             list(columns=c("nFast", "nSlow"),relationship="gt"

             ),

           label='long'

)

 

add.signal(strategy=strat,name='sigCrossover',arguments = 

             list(columns=c("nFast", "nSlow"),relationship="lte"

             ),

           label='short'

)

 

# Add the rules

# a) Entry rules - enter on moving average cross, osMaxPos is the order
function

add.rule(strategy=strat,

         name='ruleSignal',

         arguments=list(sigcol='long', sigval=TRUE, orderside='long',
ordertype='market', 

                         orderqty=+100, osFUN='osMaxPos', replace=FALSE

         ),

         type='enter',

         label='EnterLONG'

)

 

add.rule(strategy=strat,

         name='ruleSignal',

         arguments=list(sigcol='short', sigval=TRUE, orderside='short',
ordertype='market', 

                        orderqty=-100, osFUN='osMaxPos', replace=FALSE

         ),

         type='enter',

         label='EnterSHORT'

)

 

# b) Exit rules - Close on cross the other way

add.rule(strategy = strat, name='ruleSignal',

         arguments=list(sigcol='long' , sigval=TRUE, orderside=NULL,
ordertype='market',

                        orderqty="all", replace=TRUE, orderset = "ocolong"

         ),

         type='exit',

         label='ExitLONG'

)

 

add.rule(strategy = strat, name='ruleSignal',

         arguments=list(sigcol='short', sigval=TRUE, orderside=NULL ,
ordertype='market',

                        orderqty="all", replace=TRUE, orderset = "ocoshort"

         ),

         type='exit',

         label='ExitSHORT'

)

 

# c) Stoploss rules

add.rule(strategy=strat,

         name='ruleSignal',

         arguments=list(sigcol='long', sigval=TRUE, orderside=NULL,
ordertype='stoplimit', 

                        orderqty="all", replace=FALSE, orderset ="ocolong",

                        tmult=TRUE, threshold="atr.atrStopThresh"

         ),

         type='chain', parent = "EnterLONG",

         label='StopLONG',enabled = TRUE

)

 

add.rule(strategy=strat,

         name='ruleSignal',

         arguments=list(sigcol='short', sigval=TRUE, orderside=NULL,
ordertype='stoplimit', 

                        orderqty="all", replace=FALSE, orderset ="ocoshort",

                        tmult=TRUE, threshold="atr.atrStopThresh"

         ),

         type='chain', parent = "EnterSHORT",

         label='StopSHORT',enabled = TRUE

)

 

# Add distributions and constraints

add.distribution(portfolio.st,

                 paramset.label = "DMA_OPT",

                 component.type = "indicator",

                 component.label = "atr_mult_stop",

                 variable = list(atr_mult = atrMult),

                 label = "atr_mult_stop"

)

 

# Now apply the parameter sets for optimization

out <- apply.paramset(strat, paramset.label = "DMA_OPT",

                      portfolio=portfolio.st, account = account.st, 

                      nsamples=0, verbose = TRUE,audit = globalenv())

stats <- out$tradeStats

 

Sys.setenv(TZ=ttz)                                             # Return to
original time zone


	[[alternative HTML version deleted]]


From atakanokan at outlook.com  Sat Feb 25 10:33:43 2017
From: atakanokan at outlook.com (Atakan Okan)
Date: Sat, 25 Feb 2017 09:33:43 +0000
Subject: [R-SIG-Finance] Custom Indicator Problem
In-Reply-To: <VI1PR03MB148596C6D9EEAFD14B9ECCBCC75B0@VI1PR03MB1485.eurprd03.prod.outlook.com>
References: <VI1PR03MB148596C6D9EEAFD14B9ECCBCC75B0@VI1PR03MB1485.eurprd03.prod.outlook.com>
Message-ID: <VI1PR03MB1485A82837A78371B9D11AD1C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>

Just remembered that Outlook sent emails in HTML format, so here is the problem in plain text format in case you couldn't see it before. Still couldn't find a way to make this work. 


From: Atakan Okan <atakanokan at outlook.com>
Sent: Wednesday, February 15, 2017 11:54 AM
To: r-sig-finance at r-project.org
Subject: Custom Indicator Problem
? 

Hi everyone,

I am facing a problem regarding a higher-time-frame custom indicator. I have daily yahoo finance data but would like to use the technical indicator MACD on weekly close data. I have written a custom function as I have seen in a previous post some years ago  but couldn't manage to add the weekly indicator output to mktdata. Any help is appreciated, thank you

Reproducible example:



#Custom Indicator Problem


library(quantmod)
library(quantstrat)
library(TTR)


Sys.setenv(TZ = "UTC") ? ? ? ? ? ? ? ? ? ? ? ? ? ?


.strategy <- new.env()
.blotter ?<- new.env() ? ? ? ? ? ? ? ? ? ? ? ? ? ??


getSymbols("GARAN.IS")




#Stock
symbol.name = "GARAN.IS" ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?
tick.size = 0.01 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ??
currency('TRY')
stock(symbol.name, currency="TRY", multiplier=1,tick_size= tick.size)


initialEquity = 1000 ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?
port.acct.currency <- "TRY"


strategy.st <- 'Custom_Prob'

rm.strat(strategy.st) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?


initDate = as.character(as.Date(index(GARAN.IS[1])-1)) ? ? ? ? ? ? ? ? ? ?
initPortf(strategy.st, symbol.name, initDate=initDate, currency = port.acct.currency)
initAcct(strategy.st, portfolios=strategy.st, initDate=initDate,?
? ? ? ? ?initEq=initialEquity, currency = port.acct.currency)
initOrders(portfolio=strategy.st,initDate=initDate) ? ? ? ? ? ? ? ? ? ? ? ? ?
strategy(strategy.st,store=TRUE)
summary(getStrategy(strategy.st)) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?


#MACD W1 indicator
MACD_W1 <- function(mktdata=quote(mktdata),
? ? ? ? ? ? ? ? ? ? nFast = 12,
? ? ? ? ? ? ? ? ? ? nSlow = 26,
? ? ? ? ? ? ? ? ? ? nSig = 9){
? y <- GARAN.IS
? is.xts(y)
? y <- to.weekly(y)
? y <- Cl(y)
? y <- MACD(y,
? ? ? ? ? ? nFast = nFast,
? ? ? ? ? ? nSlow = nSlow,
? ? ? ? ? ? nSig = nSig,
? ? ? ? ? ? maType = "EMA")
? y <- cbind(mktdata, y[paste(first(index(mktdata)),
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? last(index(mktdata)),?
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? sep = "/")])
? y <- y[-which(is.na(y[,1])),]
? y <- na.locf(y)
? y <- y[,c((ncol(y)-1),ncol(y))]
? y
}?


add.indicator(strategy.st, ?
? ? ? ? ? ? ? name = "MACD",?
? ? ? ? ? ? ? arguments = list(x=Cl(GARAN.IS)),?
? ? ? ? ? ? ? label='macd')?


add.indicator(strategy.st,
? ? ? ? ? ? ? name = "MACD_W1",
? ? ? ? ? ? ? arguments = list(mktdata=quote(mktdata)))




apply.indicators.df <- applyIndicators(strategy.st, mktdata=GARAN.IS) ? ?#testing indicator calculations




-Atakan Okan



     

From trunglh at hvnh.edu.vn  Sat Feb 25 12:10:05 2017
From: trunglh at hvnh.edu.vn (Le Hai Trung KNH)
Date: Sat, 25 Feb 2017 11:10:05 +0000
Subject: [R-SIG-Finance] racd package - Time-varying higher moment
Message-ID: <CAJ-k01wtCdZAmsC0f1pWRmkVqKi7jwBaYO9Yx4pB8BdcKDg7UQ@mail.gmail.com>

Dear all,

I am currently working on the "racd" package of Alexios about modeling
time-varying higher moment for returns series.

In the package, however, there are limited choices of specifications for
the conditional variance, in compared with its predecessor ?rugarch?.

I am just wondering how could I impose other specifications into the
conditional variance function, such as GIR-GARCH specification to account
for potential leverage effect in the series?

Best regards,

T

-- 
*Best regards, *
TRUNG

	[[alternative HTML version deleted]]


From brian at braverock.com  Sat Feb 25 12:49:30 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Sat, 25 Feb 2017 05:49:30 -0600
Subject: [R-SIG-Finance] Custom Indicator Problem
In-Reply-To: <VI1PR03MB1485A82837A78371B9D11AD1C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>
References: <VI1PR03MB148596C6D9EEAFD14B9ECCBCC75B0@VI1PR03MB1485.eurprd03.prod.outlook.com>
	<VI1PR03MB1485A82837A78371B9D11AD1C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>
Message-ID: <2d59a9ae-83c6-6a11-c0b6-59802f7ade40@braverock.com>

You're overcomplicating your indicator function.

MACD_W1 <- function(mktdata=quote(mktdata),
                     nFast = 12,
                     nSlow = 26,
                     nSig = 9)
{
   y <- MACD(Cl(to.weekly(mktdata)),
             nFast = nFast,
             nSlow = nSlow,
             nSig = nSig,
             maType = "EMA")
   y <- cbind(xts(order.by=index(mktdata)),y)
   y <- na.locf(y)
   y
}


On 02/25/2017 03:33 AM, Atakan Okan wrote:
> Just remembered that Outlook sent emails in HTML format, so here is the problem in plain text format in case you couldn't see it before. Still couldn't find a way to make this work.
>
>
> From: Atakan Okan <atakanokan at outlook.com>
> Sent: Wednesday, February 15, 2017 11:54 AM
> To: r-sig-finance at r-project.org
> Subject: Custom Indicator Problem
>
>
> Hi everyone,
>
> I am facing a problem regarding a higher-time-frame custom indicator. I have daily yahoo finance data but would like to use the technical indicator MACD on weekly close data. I have written a custom function as I have seen in a previous post some years ago  but couldn't manage to add the weekly indicator output to mktdata. Any help is appreciated, thank you
>
> Reproducible example:
>
>
>
> #Custom Indicator Problem
>
>
> library(quantmod)
> library(quantstrat)
> library(TTR)
>
>
> Sys.setenv(TZ = "UTC")
>
>
> .strategy <- new.env()
> .blotter  <- new.env()
>
>
> getSymbols("GARAN.IS")
>
>
>
>
> #Stock
> symbol.name = "GARAN.IS"
> tick.size = 0.01
> currency('TRY')
> stock(symbol.name, currency="TRY", multiplier=1,tick_size= tick.size)
>
>
> initialEquity = 1000
> port.acct.currency <- "TRY"
>
>
> strategy.st <- 'Custom_Prob'
>
> rm.strat(strategy.st)
>
>
> initDate = as.character(as.Date(index(GARAN.IS[1])-1))
> initPortf(strategy.st, symbol.name, initDate=initDate, currency = port.acct.currency)
> initAcct(strategy.st, portfolios=strategy.st, initDate=initDate,
>          initEq=initialEquity, currency = port.acct.currency)
> initOrders(portfolio=strategy.st,initDate=initDate)
> strategy(strategy.st,store=TRUE)
> summary(getStrategy(strategy.st))
>
>
> #MACD W1 indicator
> MACD_W1 <- function(mktdata=quote(mktdata),
>                     nFast = 12,
>                     nSlow = 26,
>                     nSig = 9){
>   y <- GARAN.IS
>   is.xts(y)
>   y <- to.weekly(y)
>   y <- Cl(y)
>   y <- MACD(y,
>             nFast = nFast,
>             nSlow = nSlow,
>             nSig = nSig,
>             maType = "EMA")
>   y <- cbind(mktdata, y[paste(first(index(mktdata)),
>                               last(index(mktdata)),
>                               sep = "/")])
>   y <- y[-which(is.na(y[,1])),]
>   y <- na.locf(y)
>   y <- y[,c((ncol(y)-1),ncol(y))]
>   y
> }
>
>
> add.indicator(strategy.st,
>               name = "MACD",
>               arguments = list(x=Cl(GARAN.IS)),
>               label='macd')
>
>
> add.indicator(strategy.st,
>               name = "MACD_W1",
>               arguments = list(mktdata=quote(mktdata)))
>
>
>
>
> apply.indicators.df <- applyIndicators(strategy.st, mktdata=GARAN.IS)    #testing indicator calculations
>
>
>
>
> -Atakan Okan
>
>
>
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.
>


-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From rjkft at yahoo.com  Sat Feb 25 13:12:42 2017
From: rjkft at yahoo.com (John Kumar)
Date: Sat, 25 Feb 2017 13:12:42 +0100
Subject: [R-SIG-Finance] Custom Indicator Problem
In-Reply-To: <VI1PR03MB1485A82837A78371B9D11AD1C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>
References: <VI1PR03MB148596C6D9EEAFD14B9ECCBCC75B0@VI1PR03MB1485.eurprd03.prod.outlook.com>
	<VI1PR03MB1485A82837A78371B9D11AD1C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>
Message-ID: <000c01d28f60$780d36d0$6827a470$@yahoo.com>

The problem is with this line:

y <- y[-which(is.na(y[,1])),]

It appears to attempt to remove any rows that have an NA in the open column
(i.e no price data). However, with the data used in your example this is
always FALSE so the code returns an integer of 0, which ends up assigning y
to nothing and the rest of the operations in the function are on nothing. If
you comment out this line the example runs and your indicator is added, but
you lose the functionality. You'll have to rewrite this line to correctly
accommodate the case in which all entries have data if you want to keep the
functionality. Cheers

John

-----Original Message-----
From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On Behalf
Of Atakan Okan
Sent: Saturday, 25 February 2017 10:34 AM
To: r-sig-finance at r-project.org
Subject: Re: [R-SIG-Finance] Custom Indicator Problem

Just remembered that Outlook sent emails in HTML format, so here is the
problem in plain text format in case you couldn't see it before. Still
couldn't find a way to make this work. 


From: Atakan Okan <atakanokan at outlook.com>
Sent: Wednesday, February 15, 2017 11:54 AM
To: r-sig-finance at r-project.org
Subject: Custom Indicator Problem
? 

Hi everyone,

I am facing a problem regarding a higher-time-frame custom indicator. I have
daily yahoo finance data but would like to use the technical indicator MACD
on weekly close data. I have written a custom function as I have seen in a
previous post some years ago  but couldn't manage to add the weekly
indicator output to mktdata. Any help is appreciated, thank you

Reproducible example:



#Custom Indicator Problem


library(quantmod)
library(quantstrat)
library(TTR)


Sys.setenv(TZ = "UTC") ? ? ? ? ? ? ? ? ? ? ? ? ? ?


strategy <- new.env()
blotter ?<- new.env() ? ? ? ? ? ? ? ? ? ? ? ? ? ??


getSymbols("GARAN.IS")




#Stock
symbol.name = "GARAN.IS" tick.size = 0.01
currency('TRY')
stock(symbol.name, currency="TRY", multiplier=1,tick_size= tick.size)


initialEquity = 1000 port.acct.currency <- "TRY"


strategy.st <- 'Custom_Prob'

rm.strat(strategy.st) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?


initDate = as.character(as.Date(index(GARAN.IS[1])-1))
initPortf(strategy.st, symbol.name, initDate=initDate, currency =
port.acct.currency) initAcct(strategy.st, portfolios=strategy.st,
initDate=initDate,
? ? ? ? ?initEq=initialEquity, currency = port.acct.currency)
initOrders(portfolio=strategy.st,initDate=initDate)
strategy(strategy.st,store=TRUE)
summary(getStrategy(strategy.st)) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?
?


#MACD W1 indicator
MACD_W1 <- function(mktdata=quote(mktdata),
? ? ? ? ? ? ? ? ? ? nFast = 12,
? ? ? ? ? ? ? ? ? ? nSlow = 26,
? ? ? ? ? ? ? ? ? ? nSig = 9){
? y <- GARAN.IS
? is.xts(y)
? y <- to.weekly(y)
? y <- Cl(y)
? y <- MACD(y,
? ? ? ? ? ? nFast = nFast,
? ? ? ? ? ? nSlow = nSlow,
? ? ? ? ? ? nSig = nSig,
? ? ? ? ? ? maType = "EMA")
? y <- cbind(mktdata, y[paste(first(index(mktdata)),
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? last(index(mktdata)),
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? sep = "/")])
? y <- y[-which(is.na(y[,1])),]
? y <- na.locf(y)
? y <- y[,c((ncol(y)-1),ncol(y))]
? y
}?


add.indicator(strategy.st, ?
? ? ? ? ? ? ? name = "MACD",?
? ? ? ? ? ? ? arguments = list(x=Cl(GARAN.IS)),?
? ? ? ? ? ? ? label='macd')?


add.indicator(strategy.st,
? ? ? ? ? ? ? name = "MACD_W1",
? ? ? ? ? ? ? arguments = list(mktdata=quote(mktdata)))




apply.indicators.df <- applyIndicators(strategy.st, mktdata=GARAN.IS) ?
?#testing indicator calculations




-Atakan Okan



     
_______________________________________________
R-SIG-Finance at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions
should go.


From atakanokan at outlook.com  Sat Feb 25 18:57:25 2017
From: atakanokan at outlook.com (Atakan Okan)
Date: Sat, 25 Feb 2017 17:57:25 +0000
Subject: [R-SIG-Finance] Fw:  Custom Indicator Problem
In-Reply-To: <AM4PR03MB1474B0A9545D5F177FD39CD3C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>
References: <VI1PR03MB148596C6D9EEAFD14B9ECCBCC75B0@VI1PR03MB1485.eurprd03.prod.outlook.com>
	<VI1PR03MB1485A82837A78371B9D11AD1C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>,
	<000901d28f54$fb096f10$f11c4d30$@yahoo.com>,
	<AM4PR03MB1474B0A9545D5F177FD39CD3C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>
Message-ID: <AM4PR03MB1474370914CA75699447FD97C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>

Thanks for the suggestion for a more concise version of the indicator Brian, however when I run the backtest it gives an error like the following:

Error in if (inherits(sret$indicators, "xts") & nrow(mktdata) == nrow(sret$indicators)) { :?
? argument is of length zero
In addition: Warning message:
In to.period(x, "days", name = name, ...) :
? missing values removed from data




From: Atakan Okan <atakanokan at outlook.com>
Sent: Saturday, February 25, 2017 5:22 PM
To: John Kumar
Subject: Re: [R-SIG-Finance] Custom Indicator Problem
? 


Thanks Mr. Kumar,

Fixed it with a simple:

if (anyNA(y[,1])){} and works fine now.

Best regards,

Atakan Okan
  

From: John Kumar <rjkft at yahoo.com>
Sent: Saturday, February 25, 2017 1:50:27 PM
To: 'Atakan Okan'
Subject: RE: [R-SIG-Finance] Custom Indicator Problem
?   
The problem is with this line:

y <- y[-which(is.na(y[,1])),]

It appears to attempt to remove any rows that have an NA in the open column
(i.e no price data). However, with the data used in your example this is
always FALSE so the code returns an integer of 0, which ends up assigning y
to nothing and the rest of the operations in the function are on nothing. If
you comment out this line the example runs and your indicator is added, but
you lose the functionality. You'll have to rewrite this line to correctly
accommodate the case in which all entries have data if you want to keep the
functionality. Cheers

John

-----Original Message-----
From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On Behalf
Of Atakan Okan
Sent: Saturday, 25 February 2017 10:34 AM
To: r-sig-finance at r-project.org
Subject: Re: [R-SIG-Finance] Custom Indicator Problem

Just remembered that Outlook sent emails in HTML format, so here is the
problem in plain text format in case you couldn't see it before. Still
couldn't find a way to make this work. 


From: Atakan Okan <atakanokan at outlook.com>
Sent: Wednesday, February 15, 2017 11:54 AM
To: r-sig-finance at r-project.org
Subject: Custom Indicator Problem
? 

Hi everyone,

I am facing a problem regarding a higher-time-frame custom indicator. I have
daily yahoo finance data but would like to use the technical indicator MACD
on weekly close data. I have written a custom function as I have seen in a
previous post some years ago? but couldn't manage to add the weekly
indicator output to mktdata. Any help is appreciated, thank you

Reproducible example:



#Custom Indicator Problem


library(quantmod)
library(quantstrat)
library(TTR)


Sys.setenv(TZ = "UTC") ? ? ? ? ? ? ? ? ? ? ? ? ? ?


strategy <- new.env()
blotter ?<- new.env() ? ? ? ? ? ? ? ? ? ? ? ? ? ??


getSymbols("GARAN.IS")




#Stock
symbol.name = "GARAN.IS" tick.size = 0.01
currency('TRY')
stock(symbol.name, currency="TRY", multiplier=1,tick_size= tick.size)


initialEquity = 1000 port.acct.currency <- "TRY"


strategy.st <- 'Custom_Prob'

rm.strat(strategy.st) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?


initDate = as.character(as.Date(index(GARAN.IS[1])-1))
initPortf(strategy.st, symbol.name, initDate=initDate, currency =
port.acct.currency) initAcct(strategy.st, portfolios=strategy.st,
initDate=initDate,
? ? ? ? ?initEq=initialEquity, currency = port.acct.currency)
initOrders(portfolio=strategy.st,initDate=initDate)
strategy(strategy.st,store=TRUE)
summary(getStrategy(strategy.st)) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?
?


#MACD W1 indicator
MACD_W1 <- function(mktdata=quote(mktdata),
? ? ? ? ? ? ? ? ? ? nFast = 12,
? ? ? ? ? ? ? ? ? ? nSlow = 26,
? ? ? ? ? ? ? ? ? ? nSig = 9){
? y <- GARAN.IS
? is.xts(y)
? y <- to.weekly(y)
? y <- Cl(y)
? y <- MACD(y,
? ? ? ? ? ? nFast = nFast,
? ? ? ? ? ? nSlow = nSlow,
? ? ? ? ? ? nSig = nSig,
? ? ? ? ? ? maType = "EMA")
? y <- cbind(mktdata, y[paste(first(index(mktdata)),
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? last(index(mktdata)),
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? sep = "/")])
? y <- y[-which(is.na(y[,1])),]
? y <- na.locf(y)
? y <- y[,c((ncol(y)-1),ncol(y))]
? y
}?


add.indicator(strategy.st, ?
? ? ? ? ? ? ? name = "MACD",?
? ? ? ? ? ? ? arguments = list(x=Cl(GARAN.IS)),?
? ? ? ? ? ? ? label='macd')?


add.indicator(strategy.st,
? ? ? ? ? ? ? name = "MACD_W1",
? ? ? ? ? ? ? arguments = list(mktdata=quote(mktdata)))




apply.indicators.df <- applyIndicators(strategy.st, mktdata=GARAN.IS) ?
?#testing indicator calculations




-Atakan Okan



???? 
_______________________________________________
R-SIG-Finance at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions
should go.

    

From atakanokan at outlook.com  Sat Feb 25 21:11:19 2017
From: atakanokan at outlook.com (Atakan Okan)
Date: Sat, 25 Feb 2017 20:11:19 +0000
Subject: [R-SIG-Finance] Custom Indicator and apply.paramset problem
Message-ID: <AM4PR03MB14745D181782EE763277D0E0C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>

Hi again,

As a followup to my custom indicator question:
Although I have successfully implemented it based on your suggestions and ran it via applyStrategy; optimizing parameters of a strategy with the same custom indicator?via apply.paramset does not seem to work on Windows using the package doSNOW, despite the fact that I have run apply.paramset on a different strategy with parallelization with doSNOW but without any custom indicators. 

Any help is appreciated, thank you :)?

Atakan Okan

The reproducible code:

library(quantmod)
library(quantstrat)
library(TTR)


Sys.setenv(TZ = "UTC") ? ? ? ? ? ? ? ? ? ? ? ? ? ?


.strategy <- new.env()
.blotter ?<- new.env() ? ? ? ? ? ? ? ? ? ? ? ? ? ??


#Data
getSymbols("AAPL")


#Stock
symbol.name = "AAPL"?
tick.size = 0.01
currency('USD')
stock(symbol.name, currency="USD", multiplier=1,tick_size= tick.size)


initialEquity = 100000?
port.acct.currency <- "USD"


strategy.st <- 'Custom_Prob'
rm.strat(strategy.st) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?


initDate = as.character(as.Date(index(AAPL[1])-1))
initPortf(strategy.st, symbol.name, initDate=initDate, currency =
? ? ? ? ? ? port.acct.currency)?
initAcct(strategy.st, portfolios=strategy.st,
? ? ? ? ?initDate=initDate,
? ? ? ? ?initEq=initialEquity, currency = port.acct.currency)
initOrders(portfolio=strategy.st,initDate=initDate)
strategy(strategy.st,store=TRUE)
summary(getStrategy(strategy.st)) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?




#MACD W1 indicator
MACD_W1 <- function(mktdata=quote(mktdata),
? ? ? ? ? ? ? ? ? ? nFast = 12,
? ? ? ? ? ? ? ? ? ? nSlow = 26,
? ? ? ? ? ? ? ? ? ? nSig = 9)
{
? y <- eval(parse(text = symbol.name))
? y <- to.weekly(y)
? y <- Cl(y)
? y <- MACD(y,
? ? ? ? ? ? nFast = nFast,
? ? ? ? ? ? nSlow = nSlow,
? ? ? ? ? ? nSig = nSig,
? ? ? ? ? ? maType = "EMA")
? y <- cbind(mktdata, y[paste(first(index(mktdata)),
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? last(index(mktdata)),?
? ? ? ? ? ? ? ? ? ? ? ? ? ? ? sep = "/")])
? if (anyNA(y[,1])){ ? ? ? ? ? ? ? ? ? ? ? ? ?
? ? y <- y[-which(is.na(y[,1])),]
? }
? y <- na.locf(y)
? y <- y[,c((ncol(y)-1),ncol(y))]
? y
}?




add.indicator(strategy.st, ?
? ? ? ? ? ? ? name = "MACD",?
? ? ? ? ? ? ? arguments = list(x=Cl(AAPL)),?
? ? ? ? ? ? ? label='macd')?


add.indicator(strategy.st,
? ? ? ? ? ? ? name = "MACD_W1",
? ? ? ? ? ? ? arguments = list(mktdata=quote(mktdata)))


add.signal(strategy.st,name="sigCrossover",
? ? ? ? ? ?arguments = list(columns=c("macd.macd","signal.macd"),relationship="gt"),
? ? ? ? ? ?label="macd.gt.signal")?


add.signal(strategy.st,name="sigCrossover",
? ? ? ? ? ?arguments = list(columns=c("macd.macd","signal.macd"),relationship="lt"),
? ? ? ? ? ?label="macd.lt.signal")


add.signal(strategy.st, name="sigFormula",?
? ? ? ? ? ?arguments=list(columns=c("macd.MACD_W1.ind", "signal.MACD_W1.ind"),?
? ? ? ? ? ? ? ? ? ? ? ? ? formula="(macd.MACD_W1.ind > signal.MACD_W1.ind)",?
? ? ? ? ? ? ? ? ? ? ? ? ? cross=FALSE),?
? ? ? ? ? ?label="LongCond.W1")


add.signal(strategy.st, name="sigFormula",?
? ? ? ? ? ?arguments=list(columns=c("macd.macd", "signal.macd","LongCond.W1"),?
? ? ? ? ? ? ? ? ? ? ? ? ? formula="(macd.gt.signal == 1) & (LongCond.W1 == 1)",?
? ? ? ? ? ? ? ? ? ? ? ? ? cross=FALSE),?
? ? ? ? ? ?label="macd.gt.signal.w1")


add.rule(strategy.st,
? ? ? ? ?name='ruleSignal',
? ? ? ? ?arguments = list(sigcol="macd.gt.signal.w1",
? ? ? ? ? ? ? ? ? ? ? ? ? sigval=TRUE,
? ? ? ? ? ? ? ? ? ? ? ? ? prefer="Open",?
? ? ? ? ? ? ? ? ? ? ? ? ? orderqty= 100,?
? ? ? ? ? ? ? ? ? ? ? ? ? ordertype='market',
? ? ? ? ? ? ? ? ? ? ? ? ? orderside='long',
? ? ? ? ? ? ? ? ? ? ? ? ? orderset='ocolong',
? ? ? ? ? ? ? ? ? ? ? ? ? TxnFees = 0),
? ? ? ? ?type='enter',
? ? ? ? ?label='longenter',
? ? ? ? ?enabled=TRUE
)


add.rule(strategy.st,
? ? ? ? ?name='ruleSignal',
? ? ? ? ?arguments = list(sigcol="macd.lt.signal",
? ? ? ? ? ? ? ? ? ? ? ? ? sigval=TRUE,
? ? ? ? ? ? ? ? ? ? ? ? ? prefer="Open",?
? ? ? ? ? ? ? ? ? ? ? ? ? orderqty='all',
? ? ? ? ? ? ? ? ? ? ? ? ? ordertype='market',
? ? ? ? ? ? ? ? ? ? ? ? ? orderside='long',
? ? ? ? ? ? ? ? ? ? ? ? ? orderset='ocolong',
? ? ? ? ? ? ? ? ? ? ? ? ? TxnFees = 0),
? ? ? ? ?type='exit',
? ? ? ? ?label='longexit',
? ? ? ? ?enabled=TRUE
)


macdFastMARange <- seq(2,12,by=5)
macdSlowMARange <- seq(12,24,by=6)
macdSignalRange <- seq(5,15,by=5)


paramset.label.name <- "macd_opt"


add.distribution(strategy.st,
? ? ? ? ? ? ? ? ?paramset.label = paramset.label.name,
? ? ? ? ? ? ? ? ?component.type = 'indicator',
? ? ? ? ? ? ? ? ?component.label = "macd",
? ? ? ? ? ? ? ? ?variable = list( nFast = macdFastMARange ),?
? ? ? ? ? ? ? ? ?label = "macdFastMARANGE")


add.distribution(strategy.st,
? ? ? ? ? ? ? ? ?paramset.label = paramset.label.name,
? ? ? ? ? ? ? ? ?component.type = 'indicator',
? ? ? ? ? ? ? ? ?component.label = "macd",
? ? ? ? ? ? ? ? ?variable = list( nSlow = macdSlowMARange ),
? ? ? ? ? ? ? ? ?label = "macdSlowMARANGE")


add.distribution(strategy.st,
? ? ? ? ? ? ? ? ?paramset.label = paramset.label.name,
? ? ? ? ? ? ? ? ?component.type = 'indicator',
? ? ? ? ? ? ? ? ?component.label = "macd",
? ? ? ? ? ? ? ? ?variable = list( nSig = macdSignalRange ),
? ? ? ? ? ? ? ? ?label = "macdSignalRANGE")


add.distribution.constraint(strategy.st,
? ? ? ? ? ? ? ? ? ? ? ? ? ? paramset.label = paramset.label.name,
? ? ? ? ? ? ? ? ? ? ? ? ? ? distribution.label.1 = 'macdFastMARANGE',
? ? ? ? ? ? ? ? ? ? ? ? ? ? distribution.label.2 = 'macdSlowMARANGE',
? ? ? ? ? ? ? ? ? ? ? ? ? ? operator = '<',
? ? ? ? ? ? ? ? ? ? ? ? ? ? label = 'FastMA<SlowMA')


#Single Core - Works
#applyStrategy(strategy=strategy.st,portfolios=strategy.st, verbose=TRUE)
#updatePortf(strategy.st)
#updateAcct(strategy.st)
#updateEndEq(strategy.st)




#DoSNOW Parallel on Windows - Does Not Work?
library(doSNOW)
library(parallel)
paramsetenv <- new.env()
cl <- snow::makeCluster(detectCores(), type = "SOCK") ??
registerDoSNOW(cl) ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?
results <- apply.paramset(strategy.st,
? ? ? ? ? ? ? ? ? ? ? ? ? paramset.label=paramset.label.name,
? ? ? ? ? ? ? ? ? ? ? ? ? portfolio=strategy.st,?
? ? ? ? ? ? ? ? ? ? ? ? ? account=strategy.st,
? ? ? ? ? ? ? ? ? ? ? ? ? nsamples=0,
? ? ? ? ? ? ? ? ? ? ? ? ? verbose = TRUE,
? ? ? ? ? ? ? ? ? ? ? ? ? audit=paramsetenv,
? ? ? ? ? ? ? ? ? ? ? ? ? calc = "slave")
snow::stopCluster(cl) ??


From brian at braverock.com  Sat Feb 25 21:39:23 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Sat, 25 Feb 2017 14:39:23 -0600
Subject: [R-SIG-Finance] Custom Indicator and apply.paramset problem
In-Reply-To: <AM4PR03MB14745D181782EE763277D0E0C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>
References: <AM4PR03MB14745D181782EE763277D0E0C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>
Message-ID: <e62a8fcd-7080-9639-1543-02d4df420b3f@braverock.com>

You didn't tell the list what error you see when you try running your code.

You should probably use doParallel on Windows, and not load snow and 
parallel both.  The socket cluster code in the parallel package came 
from snow, and they share the same function names, so you could have 
namespace collisions with both loaded.

Your most likely problem is that you did not export your custom function 
to the cluster workers using .exports in the apply.paramsets call or 
clusterExport before calling apply.paramsets.

Regards,

Brian


On 02/25/2017 02:11 PM, Atakan Okan wrote:
> Hi again,
>
> As a followup to my custom indicator question:
> Although I have successfully implemented it based on your suggestions and ran it via applyStrategy; optimizing parameters of a strategy with the same custom indicator via apply.paramset does not seem to work on Windows using the package doSNOW, despite the fact that I have run apply.paramset on a different strategy with parallelization with doSNOW but without any custom indicators.
>
> Any help is appreciated, thank you :)
>
> Atakan Okan
>
> The reproducible code:
>
> library(quantmod)
> library(quantstrat)
> library(TTR)
>
>
> Sys.setenv(TZ = "UTC")
>
>
> .strategy <- new.env()
> .blotter  <- new.env()
>
>
> #Data
> getSymbols("AAPL")
>
>
> #Stock
> symbol.name = "AAPL"
> tick.size = 0.01
> currency('USD')
> stock(symbol.name, currency="USD", multiplier=1,tick_size= tick.size)
>
>
> initialEquity = 100000
> port.acct.currency <- "USD"
>
>
> strategy.st <- 'Custom_Prob'
> rm.strat(strategy.st)
>
>
> initDate = as.character(as.Date(index(AAPL[1])-1))
> initPortf(strategy.st, symbol.name, initDate=initDate, currency =
>             port.acct.currency)
> initAcct(strategy.st, portfolios=strategy.st,
>          initDate=initDate,
>          initEq=initialEquity, currency = port.acct.currency)
> initOrders(portfolio=strategy.st,initDate=initDate)
> strategy(strategy.st,store=TRUE)
> summary(getStrategy(strategy.st))
>
>
>
>
> #MACD W1 indicator
> MACD_W1 <- function(mktdata=quote(mktdata),
>                     nFast = 12,
>                     nSlow = 26,
>                     nSig = 9)
> {
>   y <- eval(parse(text = symbol.name))
>   y <- to.weekly(y)
>   y <- Cl(y)
>   y <- MACD(y,
>             nFast = nFast,
>             nSlow = nSlow,
>             nSig = nSig,
>             maType = "EMA")
>   y <- cbind(mktdata, y[paste(first(index(mktdata)),
>                               last(index(mktdata)),
>                               sep = "/")])
>   if (anyNA(y[,1])){
>     y <- y[-which(is.na(y[,1])),]
>   }
>   y <- na.locf(y)
>   y <- y[,c((ncol(y)-1),ncol(y))]
>   y
> }
>
>
>
>
> add.indicator(strategy.st,
>               name = "MACD",
>               arguments = list(x=Cl(AAPL)),
>               label='macd')
>
>
> add.indicator(strategy.st,
>               name = "MACD_W1",
>               arguments = list(mktdata=quote(mktdata)))
>
>
> add.signal(strategy.st,name="sigCrossover",
>            arguments = list(columns=c("macd.macd","signal.macd"),relationship="gt"),
>            label="macd.gt.signal")
>
>
> add.signal(strategy.st,name="sigCrossover",
>            arguments = list(columns=c("macd.macd","signal.macd"),relationship="lt"),
>            label="macd.lt.signal")
>
>
> add.signal(strategy.st, name="sigFormula",
>            arguments=list(columns=c("macd.MACD_W1.ind", "signal.MACD_W1.ind"),
>                           formula="(macd.MACD_W1.ind > signal.MACD_W1.ind)",
>                           cross=FALSE),
>            label="LongCond.W1")
>
>
> add.signal(strategy.st, name="sigFormula",
>            arguments=list(columns=c("macd.macd", "signal.macd","LongCond.W1"),
>                           formula="(macd.gt.signal == 1) & (LongCond.W1 == 1)",
>                           cross=FALSE),
>            label="macd.gt.signal.w1")
>
>
> add.rule(strategy.st,
>          name='ruleSignal',
>          arguments = list(sigcol="macd.gt.signal.w1",
>                           sigval=TRUE,
>                           prefer="Open",
>                           orderqty= 100,
>                           ordertype='market',
>                           orderside='long',
>                           orderset='ocolong',
>                           TxnFees = 0),
>          type='enter',
>          label='longenter',
>          enabled=TRUE
> )
>
>
> add.rule(strategy.st,
>          name='ruleSignal',
>          arguments = list(sigcol="macd.lt.signal",
>                           sigval=TRUE,
>                           prefer="Open",
>                           orderqty='all',
>                           ordertype='market',
>                           orderside='long',
>                           orderset='ocolong',
>                           TxnFees = 0),
>          type='exit',
>          label='longexit',
>          enabled=TRUE
> )
>
>
> macdFastMARange <- seq(2,12,by=5)
> macdSlowMARange <- seq(12,24,by=6)
> macdSignalRange <- seq(5,15,by=5)
>
>
> paramset.label.name <- "macd_opt"
>
>
> add.distribution(strategy.st,
>                  paramset.label = paramset.label.name,
>                  component.type = 'indicator',
>                  component.label = "macd",
>                  variable = list( nFast = macdFastMARange ),
>                  label = "macdFastMARANGE")
>
>
> add.distribution(strategy.st,
>                  paramset.label = paramset.label.name,
>                  component.type = 'indicator',
>                  component.label = "macd",
>                  variable = list( nSlow = macdSlowMARange ),
>                  label = "macdSlowMARANGE")
>
>
> add.distribution(strategy.st,
>                  paramset.label = paramset.label.name,
>                  component.type = 'indicator',
>                  component.label = "macd",
>                  variable = list( nSig = macdSignalRange ),
>                  label = "macdSignalRANGE")
>
>
> add.distribution.constraint(strategy.st,
>                             paramset.label = paramset.label.name,
>                             distribution.label.1 = 'macdFastMARANGE',
>                             distribution.label.2 = 'macdSlowMARANGE',
>                             operator = '<',
>                             label = 'FastMA<SlowMA')
>
>
> #Single Core - Works
> #applyStrategy(strategy=strategy.st,portfolios=strategy.st, verbose=TRUE)
> #updatePortf(strategy.st)
> #updateAcct(strategy.st)
> #updateEndEq(strategy.st)
>
>
>
>
> #DoSNOW Parallel on Windows - Does Not Work
> library(doSNOW)
> library(parallel)
> paramsetenv <- new.env()
> cl <- snow::makeCluster(detectCores(), type = "SOCK")
> registerDoSNOW(cl)
> results <- apply.paramset(strategy.st,
>                           paramset.label=paramset.label.name,
>                           portfolio=strategy.st,
>                           account=strategy.st,
>                           nsamples=0,
>                           verbose = TRUE,
>                           audit=paramsetenv,
>                           calc = "slave")
> snow::stopCluster(cl)
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.
>


-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From alexios at 4dscape.com  Sat Feb 25 21:47:32 2017
From: alexios at 4dscape.com (alexios galanos)
Date: Sat, 25 Feb 2017 14:47:32 -0600
Subject: [R-SIG-Finance] racd package - Time-varying higher moment
In-Reply-To: <CAJ-k01wtCdZAmsC0f1pWRmkVqKi7jwBaYO9Yx4pB8BdcKDg7UQ@mail.gmail.com>
References: <CAJ-k01wtCdZAmsC0f1pWRmkVqKi7jwBaYO9Yx4pB8BdcKDg7UQ@mail.gmail.com>
Message-ID: <076fcf56-6d10-8126-226e-c95a7eb7b41b@4dscape.com>

You can download the source and try to make such additions yourself.
Currently the package allows for plain vanilla GARCH (sGARCH), component 
GARCH (csGARCH)
and multiplicative component GARCH (mcsGARCH).

Alexios

On 2/25/2017 5:10 AM, Le Hai Trung KNH wrote:
> Dear all,
>
> I am currently working on the "racd" package of Alexios about modeling
> time-varying higher moment for returns series.
>
> In the package, however, there are limited choices of specifications for
> the conditional variance, in compared with its predecessor ?rugarch?.
>
> I am just wondering how could I impose other specifications into the
> conditional variance function, such as GIR-GARCH specification to account
> for potential leverage effect in the series?
>
> Best regards,
>
> T
>


From atakanokan at outlook.com  Sat Feb 25 21:47:37 2017
From: atakanokan at outlook.com (Atakan Okan)
Date: Sat, 25 Feb 2017 20:47:37 +0000
Subject: [R-SIG-Finance] Custom Indicator and apply.paramset problem
In-Reply-To: <AM4PR03MB14745D181782EE763277D0E0C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>
References: <AM4PR03MB14745D181782EE763277D0E0C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>
Message-ID: <VI1PR03MB1485C5611B4586ABCBBEC3F3C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>

Thanks for the quick reply Brian,

The error reads as follows:

error calling combine function:
<simpleError in fun(result.1, result.2, result.3, result.4, result.5, result.6, ? ? result.7, result.8, result.9, result.10, result.11, result.12, ? ? result.13, result.14, result.15, result.16, result.17, result.18, ? ? result.19, result.20, result.21, result.22, result.23, result.24): attempt to select less than one element in OneIndex>


After switching to doParallel, the error message stays the same. How should I export my custom function to the cluster workers using .exports though? Just add it as an argument to apply.paramset()? Took a quick look at the apply.paramset() source code but couldn't figure out how to pass the .exports argument to it.

Thanks,

Atakan

The new parallel code (all other bits are the same):

#DoParallel on Windows - Does Not Work 
library(doParallel)
library(parallel)
paramsetenv <- new.env()
cl <- makeCluster(detectCores())
registerDoParallel(cl, cores=detectCores())                                      
results <- apply.paramset(strategy.st,
                          paramset.label=paramset.label.name,
                          portfolio=strategy.st, 
                          account=strategy.st,
                          nsamples=0,
                          verbose = TRUE,
                          audit=paramsetenv,
                          calc = "slave")
stopCluster(cl) 
    

From atakanokan at outlook.com  Sun Feb 26 09:05:22 2017
From: atakanokan at outlook.com (Atakan Okan)
Date: Sun, 26 Feb 2017 08:05:22 +0000
Subject: [R-SIG-Finance] Custom Indicator and apply.paramset problem
In-Reply-To: <VI1PR03MB1485C5611B4586ABCBBEC3F3C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>
References: <AM4PR03MB14745D181782EE763277D0E0C7550@AM4PR03MB1474.eurprd03.prod.outlook.com>,
	<VI1PR03MB1485C5611B4586ABCBBEC3F3C7550@VI1PR03MB1485.eurprd03.prod.outlook.com>
Message-ID: <VI1PR03MB148573796308B9C4FCC08FECC7540@VI1PR03MB1485.eurprd03.prod.outlook.com>

Firstly, I tried to pass the .exports argument in apply.paramset, but produced an error like "formal argument ".exports" matched by multiple actual arguments"

So tried changing the code of apply.paramset using trace("apply.paramset",edit=TRUE) where I added my custom indicator MACD_W1 to the .exports arguments so that it looks like this:
.export = c(env.functions,  symbols, "MACD_W1")

When I run the code now I get a different error:

error calling combine function:
<simpleError in results[[r$portfolio.st]] <- r: attempt to select less than one element in OneIndex>




From: Atakan Okan <atakanokan at outlook.com>
Sent: Saturday, February 25, 2017 11:47 PM
To: r-sig-finance at r-project.org
Subject: Custom Indicator and apply.paramset problem
?   
Thanks for the quick reply Brian,

The error reads as follows:

error calling combine function:
<simpleError in fun(result.1, result.2, result.3, result.4, result.5, result.6, ? ? result.7, result.8, result.9, result.10, result.11, result.12, ? ? result.13, result.14, result.15, result.16, result.17, result.18, ? ? result.19, result.20, result.21, result.22,  result.23, result.24): attempt to select less than one element in OneIndex>


After switching to doParallel, the error message stays the same. How should I export my custom function to the cluster workers using .exports though? Just add it as an argument to apply.paramset()? Took a quick look at the apply.paramset() source code but couldn't  figure out how to pass the .exports argument to it.

Thanks,

Atakan

The new parallel code (all other bits are the same):

#DoParallel on Windows - Does Not Work 
library(doParallel)
library(parallel)
paramsetenv <- new.env()
cl <- makeCluster(detectCores())
registerDoParallel(cl, cores=detectCores())????????????????????????????????????? 
results <- apply.paramset(strategy.st,
????????????????????????? paramset.label=paramset.label.name,
????????????????????????? portfolio=strategy.st, 
????????????????????????? account=strategy.st,
????????????????????????? nsamples=0,
????????????????????????? verbose = TRUE,
????????????????????????? audit=paramsetenv,
????????????????????????? calc = "slave")
stopCluster(cl) 


From johnsk00 at gmail.com  Mon Feb 27 20:49:25 2017
From: johnsk00 at gmail.com (John Klingensmith)
Date: Mon, 27 Feb 2017 14:49:25 -0500
Subject: [R-SIG-Finance] SMA of RSI
Message-ID: <CAFLRcn0AMBb67QXfx7QK1DZpT3HFm0rRxF+B0Au14nSFtKvbgA@mail.gmail.com>

Hi,
 How do take a simple moving average of an indicator, like a 5 period SMA
of a 3 period RSI?

Best,
 John

	[[alternative HTML version deleted]]


From josh.m.ulrich at gmail.com  Mon Feb 27 20:52:30 2017
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Mon, 27 Feb 2017 13:52:30 -0600
Subject: [R-SIG-Finance] SMA of RSI
In-Reply-To: <CAFLRcn0AMBb67QXfx7QK1DZpT3HFm0rRxF+B0Au14nSFtKvbgA@mail.gmail.com>
References: <CAFLRcn0AMBb67QXfx7QK1DZpT3HFm0rRxF+B0Au14nSFtKvbgA@mail.gmail.com>
Message-ID: <CAPPM_gS=bpCL0oqo_yit3VmRK4eWGrS3NHHOSz7oYhL-5=h7nQ@mail.gmail.com>

On Mon, Feb 27, 2017 at 1:49 PM, John Klingensmith <johnsk00 at gmail.com> wrote:
> Hi,
>  How do take a simple moving average of an indicator, like a 5 period SMA
> of a 3 period RSI?
>
Have you tried anything?

What's wrong with something straight-forward and simple like:

R> require(TTR)
Loading required package: TTR
R> data(ttrc)
R> RSI.SMA <- SMA(RSI(ttrc$Close, 3), 5)
R> tail(RSI.SMA)
[1] 56.32127 42.49744 38.26578 37.85953 39.58722 43.33587


> Best,
>  John
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2017 | www.rinfinance.com


From josh.m.ulrich at gmail.com  Mon Feb 27 21:21:47 2017
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Mon, 27 Feb 2017 14:21:47 -0600
Subject: [R-SIG-Finance] R/Finance 2017: Call for Papers
In-Reply-To: <CAPPM_gSjwZ4CGH2+1fK_Tm0ir9-4fuE5kq7+ixc_-jTqcMxv5g@mail.gmail.com>
References: <CAPPM_gSjwZ4CGH2+1fK_Tm0ir9-4fuE5kq7+ixc_-jTqcMxv5g@mail.gmail.com>
Message-ID: <CAPPM_gSwXPW=k7-G_YXPyJJvCB0M4dYoqukHYy=cQtsJc3L8Mw@mail.gmail.com>

A friendly reminder that the CFP deadline is tomorrow!

On Wed, Jan 4, 2017 at 8:11 AM, Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:
> Call for Papers:
>
> R/Finance 2017: Applied Finance with R
> May 19 and 20, 2017
> University of Illinois at Chicago
>
> The ninth annual R/Finance conference for applied finance using R will
> be held on May 19 and 20, 2017 in Chicago, IL, USA at the University
> of Illinois at Chicago.  The conference will cover topics including
> portfolio management, time series analysis, advanced risk tools,
> high-performance computing, market microstructure, and econometrics.
> All will be discussed within the context of using R as a primary tool
> for financial risk management, portfolio construction, and trading.
>
> Over the past eight years, R/Finance has included attendees from
> around the world.  It has featured presentations from prominent
> academics and practitioners, and we anticipate another exciting
> line-up for 2017.
>
> We invite you to submit complete papers in pdf format for
> consideration.  We will also consider one-page abstracts (in txt or
> pdf format) although more complete papers are preferred.  We welcome
> submissions for both full talks and abbreviated "lightning talks."
> Both academic and practitioner proposals related to R are encouraged.
>
> All slides will be made publicly available at conference time.
> Presenters are strongly encouraged to provide working R code to
> accompany the slides.  Data sets should also be made public for the
> purposes of reproducibility (though we realize this may be limited due
> to contracts with data vendors).  Preference may be given to
> presenters who have released R packages.
>
> Financial assistance for travel and accommodation may be available to
> presenters, however requests must be made at the time of submission.
> Assistance will be granted at the discretion of the conference
> committee.
>
> Please submit proposals online at http://go.uic.edu/rfinsubmit.
>
> Submissions will be reviewed and accepted on a rolling basis with a
> final deadline of February 28, 2017.  Submitters will be notified via
> email by March 31, 2017 of acceptance, presentation length, and
> financial assistance (if requested).
>
> Additional details will be announced via the conference website
>
> http://www.RinFinance.com/
>
> as they become available.  Information on previous years' presenters
> and their presentations are also at the conference website.  We will
> make a separate announcement when registration opens.
>
> For the program committee:
> Gib Bassett, Peter Carl, Dirk Eddelbuettel, Brian Peterson, Dale
> Rosenthal, Jeffrey Ryan, Joshua Ulrich
>


-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2017 | www.rinfinance.com


From johnsk00 at gmail.com  Tue Feb 28 19:04:10 2017
From: johnsk00 at gmail.com (John Klingensmith)
Date: Tue, 28 Feb 2017 13:04:10 -0500
Subject: [R-SIG-Finance] SMA of RSI
In-Reply-To: <CAPPM_gS=bpCL0oqo_yit3VmRK4eWGrS3NHHOSz7oYhL-5=h7nQ@mail.gmail.com>
References: <CAFLRcn0AMBb67QXfx7QK1DZpT3HFm0rRxF+B0Au14nSFtKvbgA@mail.gmail.com>
	<CAPPM_gS=bpCL0oqo_yit3VmRK4eWGrS3NHHOSz7oYhL-5=h7nQ@mail.gmail.com>
Message-ID: <CAFLRcn3w5f=-JM1f94fyj3c9EVfT85o9zrZ7w+dUprOo-NRKzw@mail.gmail.com>

After thinking about what you gave me, I tried the following, which seems
to work:

add.indicator(strategy.st,name = "SMA",
              arguments = list(x = RSI(Cl(SPY),nRSI),n = nSMAofRSI),
              label = "smaofrsi")

Thanks for your help!

On Mon, Feb 27, 2017 at 2:52 PM, Joshua Ulrich <josh.m.ulrich at gmail.com>
wrote:

> On Mon, Feb 27, 2017 at 1:49 PM, John Klingensmith <johnsk00 at gmail.com>
> wrote:
> > Hi,
> >  How do take a simple moving average of an indicator, like a 5 period SMA
> > of a 3 period RSI?
> >
> Have you tried anything?
>
> What's wrong with something straight-forward and simple like:
>
> R> require(TTR)
> Loading required package: TTR
> R> data(ttrc)
> R> RSI.SMA <- SMA(RSI(ttrc$Close, 3), 5)
> R> tail(RSI.SMA)
> [1] 56.32127 42.49744 38.26578 37.85953 39.58722 43.33587
>
>
> > Best,
> >  John
> >
> >         [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Finance at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> > -- Subscriber-posting only. If you want to post, subscribe first.
> > -- Also note that this is not the r-help list where general R questions
> should go.
>
>
>
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com
> R/Finance 2017 | www.rinfinance.com
>

	[[alternative HTML version deleted]]


From cl1 at infomaniak.ch  Wed Mar  1 10:46:51 2017
From: cl1 at infomaniak.ch (Christian Lear)
Date: Wed, 1 Mar 2017 10:46:51 +0100
Subject: [R-SIG-Finance] Syntax - symbol problem
Message-ID: <281ECE85-4B83-4661-9800-EC23C2646C05@infomaniak.ch>

Hi,

I?m using Interactive Brokers (IB) data feed running through R code (R studio) with moving average filters on futures contracts.

I have listed the contracts in an excel sheet.  The sheet has 4 columns, contract (or ticker) i.e. ?CLJ7" for April 2007 Crude Oil, Security Type ?Future?, Exchange ?NYMEX? and Use 1 or 0 to activate the excel line (contract) or not.  

My program works perfectly for Nymex energy contracts (CL, NG, RB, HO), Nymex metals (GC, SI, etc.), Globex mini S&P (ES).  However, the program stops working and has an error when running Globex Euro FX (6E), Japanese Yen (6J) and the other currencies.  Note that the currency contracts have the same syntax as the Nymex Energy, and Nymex metals, namely ?TickerMonthYear" (6EM7, CLJ7, GCJ7 etc.)  

1.  Does anyone know why the program fails to recognize the currency futures contracts?  Any suggestions?

Grains are also a problem.  IB uses a different symbol structure, namely Ticker MONth YEar  ?ZS MONabbrev YEar? (ZS JUL 17). 

2.  How would you solve for one code to read both the CL contracts and the Grains ticker, knowing that the symbol structure is different?  Any ideas?

I can send a short code and excel sheet test list to better demonstrate the issue.  

Thanks for your help.

Christian


From es at enricoschumann.net  Wed Mar  1 11:13:14 2017
From: es at enricoschumann.net (Enrico Schumann)
Date: Wed, 01 Mar 2017 11:13:14 +0100
Subject: [R-SIG-Finance] Syntax - symbol problem
In-Reply-To: <281ECE85-4B83-4661-9800-EC23C2646C05@infomaniak.ch> (Christian
	Lear's message of "Wed, 1 Mar 2017 10:46:51 +0100")
References: <281ECE85-4B83-4661-9800-EC23C2646C05@infomaniak.ch>
Message-ID: <87vart71ad.fsf@enricoschumann.net>

On Wed, 01 Mar 2017, Christian Lear writes:

> Hi,
>
> I?m using Interactive Brokers (IB) data feed running through R code (R
> studio) with moving average filters on futures contracts.
>
> I have listed the contracts in an excel sheet.  The sheet has 4
> columns, contract (or ticker) i.e. ?CLJ7" for April 2007 Crude Oil,
> Security Type ?Future?, Exchange ?NYMEX? and Use 1 or 0 to activate
> the excel line (contract) or not.
>
> My program works perfectly for Nymex energy contracts (CL, NG, RB,
> HO), Nymex metals (GC, SI, etc.), Globex mini S&P (ES).  However, the
> program stops working and has an error when running Globex Euro FX
> (6E), Japanese Yen (6J) and the other currencies.  Note that the
> currency contracts have the same syntax as the Nymex Energy, and Nymex
> metals, namely ?TickerMonthYear" (6EM7, CLJ7, GCJ7 etc.)
>
> 1.  Does anyone know why the program fails to
> recognize the currency futures contracts?  Any
> suggestions?
>
> Grains are also a problem.  IB uses a different symbol structure,
> namely Ticker MONth YEar ?ZS MONabbrev YEar? (ZS JUL 17).
>
> 2.  How would you solve for one code to read both the
> CL contracts and the Grains ticker, knowing that the
> symbol structure is different?  Any ideas?
>
> I can send a short code and excel sheet test list to better
> demonstrate the issue.
>
> Thanks for your help.
>
> Christian
>

1) In my experience, you need four attributes to
   reliably specify a contract: the local symbol, the
   exchange, the currency and the security type. For
   6E futures, that would mean

   symbol = 6EH7
   exchange = GLOBEX
   currency = USD
   type = FUT

2) An easy and _safe_ way is to keep a list/database of
   contracts with the four mentioned attributes, and
   then refer to this list when contract information is
   needed.


-- 
Enrico Schumann
Lucerne, Switzerland
http://enricoschumann.net


From cl1 at infomaniak.ch  Wed Mar  1 22:26:52 2017
From: cl1 at infomaniak.ch (Christian Lear)
Date: Wed, 1 Mar 2017 22:26:52 +0100
Subject: [R-SIG-Finance] Syntax - symbol problem
In-Reply-To: <87vart71ad.fsf@enricoschumann.net>
References: <281ECE85-4B83-4661-9800-EC23C2646C05@infomaniak.ch>
	<87vart71ad.fsf@enricoschumann.net>
Message-ID: <A64688DB-D091-4E5B-A731-2B77010AF34A@infomaniak.ch>

Thank you, Enrico, for your suggestion.

It does not seem to get the data from IB on the currency contracts.  Looking at the database / list closer, the second page defining the moving averages has a default USD input.  So I do have 4 attributes, which may be the reason I am getting data for metals and energies.  If anyone out there is using IB successfully on currency futures contracts, grains and options on all of the above, thanks for letting me know outside of the mailing list to avoid clogging it.

Cheers,

Christian

> On Mar 1, 2017, at 11:13 AM, Enrico Schumann <es at enricoschumann.net> wrote:
> 
> On Wed, 01 Mar 2017, Christian Lear writes:
> 
>> Hi,
>> 
>> I?m using Interactive Brokers (IB) data feed running through R code (R
>> studio) with moving average filters on futures contracts.
>> 
>> I have listed the contracts in an excel sheet.  The sheet has 4
>> columns, contract (or ticker) i.e. ?CLJ7" for April 2007 Crude Oil,
>> Security Type ?Future?, Exchange ?NYMEX? and Use 1 or 0 to activate
>> the excel line (contract) or not.
>> 
>> My program works perfectly for Nymex energy contracts (CL, NG, RB,
>> HO), Nymex metals (GC, SI, etc.), Globex mini S&P (ES).  However, the
>> program stops working and has an error when running Globex Euro FX
>> (6E), Japanese Yen (6J) and the other currencies.  Note that the
>> currency contracts have the same syntax as the Nymex Energy, and Nymex
>> metals, namely ?TickerMonthYear" (6EM7, CLJ7, GCJ7 etc.)
>> 
>> 1.  Does anyone know why the program fails to
>> recognize the currency futures contracts?  Any
>> suggestions?
>> 
>> Grains are also a problem.  IB uses a different symbol structure,
>> namely Ticker MONth YEar ?ZS MONabbrev YEar? (ZS JUL 17).
>> 
>> 2.  How would you solve for one code to read both the
>> CL contracts and the Grains ticker, knowing that the
>> symbol structure is different?  Any ideas?
>> 
>> I can send a short code and excel sheet test list to better
>> demonstrate the issue.
>> 
>> Thanks for your help.
>> 
>> Christian
>> 
> 
> 1) In my experience, you need four attributes to
>   reliably specify a contract: the local symbol, the
>   exchange, the currency and the security type. For
>   6E futures, that would mean
> 
>   symbol = 6EH7
>   exchange = GLOBEX
>   currency = USD
>   type = FUT
> 
> 2) An easy and _safe_ way is to keep a list/database of
>   contracts with the four mentioned attributes, and
>   then refer to this list when contract information is
>   needed.
> 
> 
> -- 
> Enrico Schumann
> Lucerne, Switzerland
> http://enricoschumann.net
> 


From adrian at trapletti.org  Thu Mar  2 12:45:49 2017
From: adrian at trapletti.org (Adrian Trapletti)
Date: Thu, 2 Mar 2017 12:45:49 +0100
Subject: [R-SIG-Finance] Syntax - symbol problem
Message-ID: <CAFmikf35JQKTYj=5MRpmamt5Qrn78BOtspi8=qKen_O0wjunQg@mail.gmail.com>

Christian,

In some old configuration file, I found the following for IB currency futures:

Symbol,Expiry,Exchange,Type
EUR,201206,GLOBEX,FUT

Maybe it helps.

Dr. Adrian Trapletti

Steinstrasse 9b, 8610 Uster, Switzerland
P +41 44 994 56 30  |  M +41 79 103 71 31
adrian at trapletti.org  |  www.trapletti.org

On Thu, Mar 2, 2017 at 12:00 PM, <r-sig-finance-request at r-project.org> wrote:
>
>
> Message: 1
> Date: Wed, 1 Mar 2017 22:26:52 +0100
> From: Christian Lear <cl1 at infomaniak.ch>
> To: Enrico Schumann <es at enricoschumann.net>
> Cc: R-SIG-Finance at r-project.org
> Subject: Re: [R-SIG-Finance] Syntax - symbol problem
> Message-ID: <A64688DB-D091-4E5B-A731-2B77010AF34A at infomaniak.ch>
> Content-Type: text/plain; charset=utf-8
>
> Thank you, Enrico, for your suggestion.
>
> It does not seem to get the data from IB on the currency contracts.  Looking at the database / list closer, the second page defining the moving averages has a default USD input.  So I do have 4 attributes, which may be the reason I am getting data for metals and energies.  If anyone out there is using IB successfully on currency futures contracts, grains and options on all of the above, thanks for letting me know outside of the mailing list to avoid clogging it.
>
> Cheers,
>
> Christian
>
> > On Mar 1, 2017, at 11:13 AM, Enrico Schumann <es at enricoschumann.net> wrote:
> >
> > On Wed, 01 Mar 2017, Christian Lear writes:
> >
> >> Hi,
> >>
> >> I?m using Interactive Brokers (IB) data feed running through R code (R
> >> studio) with moving average filters on futures contracts.
> >>
> >> I have listed the contracts in an excel sheet.  The sheet has 4
> >> columns, contract (or ticker) i.e. ?CLJ7" for April 2007 Crude Oil,
> >> Security Type ?Future?, Exchange ?NYMEX? and Use 1 or 0 to activate
> >> the excel line (contract) or not.
> >>
> >> My program works perfectly for Nymex energy contracts (CL, NG, RB,
> >> HO), Nymex metals (GC, SI, etc.), Globex mini S&P (ES).  However, the
> >> program stops working and has an error when running Globex Euro FX
> >> (6E), Japanese Yen (6J) and the other currencies.  Note that the
> >> currency contracts have the same syntax as the Nymex Energy, and Nymex
> >> metals, namely ?TickerMonthYear" (6EM7, CLJ7, GCJ7 etc.)
> >>
> >> 1.  Does anyone know why the program fails to
> >> recognize the currency futures contracts?  Any
> >> suggestions?
> >>
> >> Grains are also a problem.  IB uses a different symbol structure,
> >> namely Ticker MONth YEar ?ZS MONabbrev YEar? (ZS JUL 17).
> >>
> >> 2.  How would you solve for one code to read both the
> >> CL contracts and the Grains ticker, knowing that the
> >> symbol structure is different?  Any ideas?
> >>
> >> I can send a short code and excel sheet test list to better
> >> demonstrate the issue.
> >>
> >> Thanks for your help.
> >>
> >> Christian
> >>
> >
> > 1) In my experience, you need four attributes to
> >   reliably specify a contract: the local symbol, the
> >   exchange, the currency and the security type. For
> >   6E futures, that would mean
> >
> >   symbol = 6EH7
> >   exchange = GLOBEX
> >   currency = USD
> >   type = FUT
> >
> > 2) An easy and _safe_ way is to keep a list/database of
> >   contracts with the four mentioned attributes, and
> >   then refer to this list when contract information is
> >   needed.
> >
> >
> > --
> > Enrico Schumann
> > Lucerne, Switzerland
> > http://enricoschumann.net
> >


From diegoperoni at vodafone.it  Sat Mar  4 19:12:10 2017
From: diegoperoni at vodafone.it (Diego Peroni)
Date: Sat, 4 Mar 2017 19:12:10 +0100
Subject: [R-SIG-Finance] Buying at Current Close Price
In-Reply-To: <CAFmikf35JQKTYj=5MRpmamt5Qrn78BOtspi8=qKen_O0wjunQg@mail.gmail.com>
References: <CAFmikf35JQKTYj=5MRpmamt5Qrn78BOtspi8=qKen_O0wjunQg@mail.gmail.com>
Message-ID: <b3e416f1-3d2c-2742-f348-c22c587f7d2c@vodafone.it>

Hi everybody,

can help me to understand exactly how this rule works?

add.rule(my.strategy, name='ruleSignal',
          arguments = list(sigcol='upTrend', sigval=TRUE,
                           replace=TRUE,
                           prefer='open',
                           orderside='long',
                           ordertype='stoplimit',
order.price=quote(mktdata$close[timestamp]),
                           orderqty=1,
                           time.in.force=180),
          type='enter',
          label='LE')

More in detail if price is 100,00$ at signal time (timestamp), does this 
rule buy JUST if price will be 100,00$ or MORE within 3 minutes after 
current bar?

Does prefer='open' anticipate buying if price is the same at next open bar?

Thanks in advance for your help

Regards

Diego


From atakanokan at outlook.com  Mon Mar  6 19:53:03 2017
From: atakanokan at outlook.com (Atakan Okan)
Date: Mon, 6 Mar 2017 18:53:03 +0000
Subject: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols
Message-ID: <VI1PR03MB1485B088E0DE2B7E4160827DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>

Hello,

I am trying to parallelize applyStrategy() to make it faster when applied to multiple symbols. The reproducible code below only contains 3 symbols thus it finishes fast however when I apply it to 100 symbols in an index, sequential computing takes a lot of time. What is the best way to accomplish this? Using foreach loop does not seem to work and couldn't find any info on stackexchange or the usual mailing lists. 

Thanks.

Atakan Okan

Code with applyStrategy (foreach is below this):

library(quantmod)
library(quantstrat)

symbols <- c("AAPL","GOOGL","MSFT")

getSymbols(Symbols = symbols, from = "2010-01-01")

currency('USD')
stock(symbols, currency="USD")

strategy.st <- "multiple_symbols_parallel_applystrategy"
rm.strat(strategy.st)                                                      
      
initPortf(strategy.st, symbols = symbols)
initAcct(strategy.st, portfolios=strategy.st, initEq=100000)
initOrders(portfolio=strategy.st)                          
strategy(strategy.st,store=TRUE)
                                           
rule.longenter  = TRUE  
rule.longexit   = TRUE  
rule.shortenter = TRUE 
rule.shortexit  = TRUE 

txn.model <- 0

add.indicator(strategy.st,  
              name = "MACD", 
              arguments = list(x=Cl(get(symbols))), 
              label='macd') 

add.signal(strategy.st,name="sigCrossover",
           arguments = list(columns=c("macd.macd","signal.macd"),
                            relationship="gt"),
           label="macd.gt.signal") 

add.signal(strategy.st,name="sigCrossover",
           arguments = list(columns=c("macd.macd","signal.macd"),
                            relationship="lt"),
           label="macd.lt.signal")

add.rule(strategy.st,
         name='ruleSignal',
         arguments = list(sigcol="macd.gt.signal",
                          sigval=TRUE,
                          prefer="Open", 
                          orderqty= 1000, 
                          #osFUN="osAllInLong",  
                          ordertype='market',
                          orderside='long',
                          orderset='ocolong',
                          TxnFees = txn.model),
         type='enter',
         label='longenter',
         enabled=FALSE
)

add.rule(strategy.st,
         name='ruleSignal',
         arguments = list(sigcol="macd.lt.signal",
                          sigval=TRUE,
                          prefer="Open", 
                          orderqty='all',
                          ordertype='market',
                          orderside='long',
                          orderset='ocolong',
                          TxnFees = txn.model),
         type='exit',
         label='longexit',
         enabled=FALSE
)


add.rule(strategy.st,
         name='ruleSignal',
         arguments = list(sigcol="macd.lt.signal",
                          sigval=TRUE,
                          prefer="Open", 
                          orderqty=-1000, 
                          #osFUN="osAllInShort",  
                          ordertype='market',
                          orderside='short',
                          orderset='ocoshort',
                          TxnFees = txn.model),
         type='enter',
         label='shortenter',
         enabled=FALSE
)

add.rule(strategy.st,
         name='ruleSignal',
         arguments = list(sigcol="macd.gt.signal",
                          sigval=TRUE,
                          prefer="Open", 
                          orderqty='all',
                          ordertype='market',
                          orderside='short',
                          orderset='ocoshort',
                          TxnFees = txn.model),
         type='exit',
         label='shortexit',
         enabled=FALSE
)

enable.rule(strategy.st,type="enter",label="longenter", enable = rule.longenter) 
enable.rule(strategy.st,type="exit",label="longexit", enable = rule.longexit)
enable.rule(strategy.st,type="enter",label="shortenter", enable = rule.shortenter) 
enable.rule(strategy.st,type="exit",label="shortexit", enable = rule.shortexit)
summary(getStrategy(strategy.st))                                              

applyStrategy( strategy=strategy.st , 
               portfolios=strategy.st,
               symbols = symbols,
               verbose=TRUE)
updatePortf(strategy.st)
updateAcct(strategy.st)
updateEndEq(strategy.st)

---------------------------------------------------------------------------------------------------------------------------------------------------------------------
Code with foreach:

library(quantmod)
library(quantstrat)

if(Sys.info()["sysname"] == "Windows") {
  library(doSNOW)
  cl <- makeCluster(4)
  registerDoSNOW(cl)
}
if(Sys.info()["sysname"] == "Linux") {
  library(doMC)
  registerDoMC(cores=4)
  #registerDoSEQ()
  getDoParWorkers()
}

symbols <- c("AAPL","GOOGL","MSFT")

sens.df <- foreach(sym = 1:length(symbols), 
                   .combine = 'rbind', 
                   .packages = c("quantstrat","quantmod")) %dopar% {

  getSymbols(Symbols = sym, from = "2010-01-01")
  
  currency('USD')
  stock(sym, currency="USD")
  
  strategy.st <- "multiple_symbols_parallel_applystrategy"
  rm.strat(strategy.st)                                                      
        
  initPortf(strategy.st, symbols = sym)
  initAcct(strategy.st, portfolios=strategy.st, initEq=100000)
  initOrders(portfolio=strategy.st)                          
  strategy(strategy.st,store=TRUE)
                                             
  rule.longenter  = TRUE  
  rule.longexit   = TRUE  
  rule.shortenter = TRUE 
  rule.shortexit  = TRUE 
  
  txn.model <- 0
  
  add.indicator(strategy.st,  
                name = "MACD", 
                arguments = list(x=Cl(get(sym))), 
                label='macd') 
  
  add.signal(strategy.st,name="sigCrossover",
             arguments = list(columns=c("macd.macd","signal.macd"),
                              relationship="gt"),
             label="macd.gt.signal") 
  
  add.signal(strategy.st,name="sigCrossover",
             arguments = list(columns=c("macd.macd","signal.macd"),
                              relationship="lt"),
             label="macd.lt.signal")
  
  add.rule(strategy.st,
           name='ruleSignal',
           arguments = list(sigcol="macd.gt.signal",
                            sigval=TRUE,
                            prefer="Open", 
                            orderqty= 1000, 
                            #osFUN="osAllInLong",  
                            ordertype='market',
                            orderside='long',
                            orderset='ocolong',
                            TxnFees = txn.model),
           type='enter',
           label='longenter',
           enabled=FALSE
  )
  
  add.rule(strategy.st,
           name='ruleSignal',
           arguments = list(sigcol="macd.lt.signal",
                            sigval=TRUE,
                            prefer="Open", 
                            orderqty='all',
                            ordertype='market',
                            orderside='long',
                            orderset='ocolong',
                            TxnFees = txn.model),
           type='exit',
           label='longexit',
           enabled=FALSE
  )
  
  
  add.rule(strategy.st,
           name='ruleSignal',
           arguments = list(sigcol="macd.lt.signal",
                            sigval=TRUE,
                            prefer="Open", 
                            orderqty=-1000, 
                            #osFUN="osAllInShort",  
                            ordertype='market',
                            orderside='short',
                            orderset='ocoshort',
                            TxnFees = txn.model),
           type='enter',
           label='shortenter',
           enabled=FALSE
  )
  
  add.rule(strategy.st,
           name='ruleSignal',
           arguments = list(sigcol="macd.gt.signal",
                            sigval=TRUE,
                            prefer="Open", 
                            orderqty='all',
                            ordertype='market',
                            orderside='short',
                            orderset='ocoshort',
                            TxnFees = txn.model),
           type='exit',
           label='shortexit',
           enabled=FALSE
  )
  
  enable.rule(strategy.st,type="enter",label="longenter", enable = rule.longenter) 
  enable.rule(strategy.st,type="exit",label="longexit", enable = rule.longexit)
  enable.rule(strategy.st,type="enter",label="shortenter", enable = rule.shortenter) 
  enable.rule(strategy.st,type="exit",label="shortexit", enable = rule.shortexit)
  summary(getStrategy(strategy.st))                                              
  
  applyStrategy( strategy=strategy.st , 
                 portfolios=strategy.st,
                 symbols = sym,
                 verbose=TRUE)
  updatePortf(strategy.st)
  updateAcct(strategy.st)
  updateEndEq(strategy.st)
  
  results.checkstrat <- data.frame(t(tradeStats(strategy.st)))
  
  return(results.checkstrat[,1])

}

if (Sys.info()["sysname"] == "Windows"){
  snow::stopCluster(cl)   #dosnow  windows
}


From brian at braverock.com  Mon Mar  6 20:45:41 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Mon, 06 Mar 2017 13:45:41 -0600
Subject: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols
In-Reply-To: <VI1PR03MB1485B088E0DE2B7E4160827DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>
References: <VI1PR03MB1485B088E0DE2B7E4160827DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>
Message-ID: <1488829541.11845.1.camel@braverock.com>

I suspect you're running up against communication and memory management
time and resource contention. ?

applyIndicators and applySignals should all be using vectorized code,
so the potential benefit from parallelization will likely be negative,
as communication and memory management swap any benefit from the
calculations.

applyRules might benefit from parllelization, but you would need to
come back together on any rebalancing period.  You would also have
significant copying time.

If you were going to make this work, you'd need to minimize copies. 
Your effective 'reduce' operation at the end by only returning
tradeStats could do this for the end of the calculation, but at the
start, you'd need to be smarter about how you segment market data to
each worker. 

Just putting getSymbols on the workers might run into I/O contention
issues.  You also don't need to redeclare the strategy object.  You
could just copy that to each worker.

When we've done things as a one-off, we typically create portfolios for
each segment, and try to avoid as many copies as we can.
 
You'd need to profile to see exactly where you're getting hung up, but
this approach seems too simplistic (see my first sentence for hints).

We haven't bothered to do this in the package itself since with a
little work we can usually get to around one core minute per symbol per
day on L1 tick data, which means that even a large backtest on tick
data can finish in a few hours.  The cost of optimizing execution time
doesn't seem to be worth the cost in programming and testing time.

Regards,

Brian
 
-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock

On Mon, 2017-03-06 at 18:53 +0000, Atakan Okan wrote:
> Hello,
> 
> I am trying to parallelize applyStrategy() to make it faster when
> applied to multiple symbols. The reproducible code below only
> contains 3 symbols thus it finishes fast however when I apply it to
> 100 symbols in an index, sequential computing takes a lot of time.
> What is the best way to accomplish this? Using foreach loop does not
> seem to work and couldn't find any info on stackexchange or the usual
> mailing lists.?
> 
> Thanks.
> 
> Atakan Okan
> 
> Code with applyStrategy (foreach is below this):
> 
> library(quantmod)
> library(quantstrat)
> 
> symbols <- c("AAPL","GOOGL","MSFT")
> 
> getSymbols(Symbols = symbols, from = "2010-01-01")
> 
> currency('USD')
> stock(symbols, currency="USD")
> 
> strategy.st <- "multiple_symbols_parallel_applystrategy"
> rm.strat(strategy.st)????????????????????????????????????????????????
> ??????
> ??????
> initPortf(strategy.st, symbols = symbols)
> initAcct(strategy.st, portfolios=strategy.st, initEq=100000)
> initOrders(portfolio=strategy.st)??????????????????????????
> strategy(strategy.st,store=TRUE)
> ???????????????????????????????????????????
> rule.longenter??= TRUE??
> rule.longexit???= TRUE??
> rule.shortenter = TRUE?
> rule.shortexit??= TRUE?
> 
> txn.model <- 0
> 
> add.indicator(strategy.st,??
> ??????????????name = "MACD",?
> ??????????????arguments = list(x=Cl(get(symbols))),?
> ??????????????label='macd')?
> 
> add.signal(strategy.st,name="sigCrossover",
> ???????????arguments = list(columns=c("macd.macd","signal.macd"),
> ????????????????????????????relationship="gt"),
> ???????????label="macd.gt.signal")?
> 
> add.signal(strategy.st,name="sigCrossover",
> ???????????arguments = list(columns=c("macd.macd","signal.macd"),
> ????????????????????????????relationship="lt"),
> ???????????label="macd.lt.signal")
> 
> add.rule(strategy.st,
> ?????????name='ruleSignal',
> ?????????arguments = list(sigcol="macd.gt.signal",
> ??????????????????????????sigval=TRUE,
> ??????????????????????????prefer="Open",?
> ??????????????????????????orderqty= 1000,?
> ??????????????????????????#osFUN="osAllInLong",??
> ??????????????????????????ordertype='market',
> ??????????????????????????orderside='long',
> ??????????????????????????orderset='ocolong',
> ??????????????????????????TxnFees = txn.model),
> ?????????type='enter',
> ?????????label='longenter',
> ?????????enabled=FALSE
> )
> 
> add.rule(strategy.st,
> ?????????name='ruleSignal',
> ?????????arguments = list(sigcol="macd.lt.signal",
> ??????????????????????????sigval=TRUE,
> ??????????????????????????prefer="Open",?
> ??????????????????????????orderqty='all',
> ??????????????????????????ordertype='market',
> ??????????????????????????orderside='long',
> ??????????????????????????orderset='ocolong',
> ??????????????????????????TxnFees = txn.model),
> ?????????type='exit',
> ?????????label='longexit',
> ?????????enabled=FALSE
> )
> 
> 
> add.rule(strategy.st,
> ?????????name='ruleSignal',
> ?????????arguments = list(sigcol="macd.lt.signal",
> ??????????????????????????sigval=TRUE,
> ??????????????????????????prefer="Open",?
> ??????????????????????????orderqty=-1000,?
> ??????????????????????????#osFUN="osAllInShort",??
> ??????????????????????????ordertype='market',
> ??????????????????????????orderside='short',
> ??????????????????????????orderset='ocoshort',
> ??????????????????????????TxnFees = txn.model),
> ?????????type='enter',
> ?????????label='shortenter',
> ?????????enabled=FALSE
> )
> 
> add.rule(strategy.st,
> ?????????name='ruleSignal',
> ?????????arguments = list(sigcol="macd.gt.signal",
> ??????????????????????????sigval=TRUE,
> ??????????????????????????prefer="Open",?
> ??????????????????????????orderqty='all',
> ??????????????????????????ordertype='market',
> ??????????????????????????orderside='short',
> ??????????????????????????orderset='ocoshort',
> ??????????????????????????TxnFees = txn.model),
> ?????????type='exit',
> ?????????label='shortexit',
> ?????????enabled=FALSE
> )
> 
> enable.rule(strategy.st,type="enter",label="longenter", enable =
> rule.longenter)?
> enable.rule(strategy.st,type="exit",label="longexit", enable =
> rule.longexit)
> enable.rule(strategy.st,type="enter",label="shortenter", enable =
> rule.shortenter)?
> enable.rule(strategy.st,type="exit",label="shortexit", enable =
> rule.shortexit)
> summary(getStrategy(strategy.st))????????????????????????????????????
> ??????????
> 
> applyStrategy( strategy=strategy.st ,?
> ???????????????portfolios=strategy.st,
> ???????????????symbols = symbols,
> ???????????????verbose=TRUE)
> updatePortf(strategy.st)
> updateAcct(strategy.st)
> updateEndEq(strategy.st)
> 
> -------------------------------------------------------------------
> -------------------------------------------------------------------
> -------------------------------
> Code with foreach:
> 
> library(quantmod)
> library(quantstrat)
> 
> if(Sys.info()["sysname"] == "Windows") {
> ? library(doSNOW)
> ? cl <- makeCluster(4)
> ? registerDoSNOW(cl)
> }
> if(Sys.info()["sysname"] == "Linux") {
> ? library(doMC)
> ? registerDoMC(cores=4)
> ? #registerDoSEQ()
> ? getDoParWorkers()
> }
> 
> symbols <- c("AAPL","GOOGL","MSFT")
> 
> sens.df <- foreach(sym = 1:length(symbols),?
> ???????????????????.combine = 'rbind',?
> ???????????????????.packages = c("quantstrat","quantmod")) %dopar% {
> 
> ? getSymbols(Symbols = sym, from = "2010-01-01")
> ??
> ? currency('USD')
> ? stock(sym, currency="USD")
> ??
> ? strategy.st <- "multiple_symbols_parallel_applystrategy"
> ?
> rm.strat(strategy.st)????????????????????????????????????????????????
> ??????
> ????????
> ? initPortf(strategy.st, symbols = sym)
> ? initAcct(strategy.st, portfolios=strategy.st, initEq=100000)
> ? initOrders(portfolio=strategy.st)??????????????????????????
> ? strategy(strategy.st,store=TRUE)
> ?????????????????????????????????????????????
> ? rule.longenter??= TRUE??
> ? rule.longexit???= TRUE??
> ? rule.shortenter = TRUE?
> ? rule.shortexit??= TRUE?
> ??
> ? txn.model <- 0
> ??
> ? add.indicator(strategy.st,??
> ????????????????name = "MACD",?
> ????????????????arguments = list(x=Cl(get(sym))),?
> ????????????????label='macd')?
> ??
> ? add.signal(strategy.st,name="sigCrossover",
> ?????????????arguments = list(columns=c("macd.macd","signal.macd"),
> ??????????????????????????????relationship="gt"),
> ?????????????label="macd.gt.signal")?
> ??
> ? add.signal(strategy.st,name="sigCrossover",
> ?????????????arguments = list(columns=c("macd.macd","signal.macd"),
> ??????????????????????????????relationship="lt"),
> ?????????????label="macd.lt.signal")
> ??
> ? add.rule(strategy.st,
> ???????????name='ruleSignal',
> ???????????arguments = list(sigcol="macd.gt.signal",
> ????????????????????????????sigval=TRUE,
> ????????????????????????????prefer="Open",?
> ????????????????????????????orderqty= 1000,?
> ????????????????????????????#osFUN="osAllInLong",??
> ????????????????????????????ordertype='market',
> ????????????????????????????orderside='long',
> ????????????????????????????orderset='ocolong',
> ????????????????????????????TxnFees = txn.model),
> ???????????type='enter',
> ???????????label='longenter',
> ???????????enabled=FALSE
> ? )
> ??
> ? add.rule(strategy.st,
> ???????????name='ruleSignal',
> ???????????arguments = list(sigcol="macd.lt.signal",
> ????????????????????????????sigval=TRUE,
> ????????????????????????????prefer="Open",?
> ????????????????????????????orderqty='all',
> ????????????????????????????ordertype='market',
> ????????????????????????????orderside='long',
> ????????????????????????????orderset='ocolong',
> ????????????????????????????TxnFees = txn.model),
> ???????????type='exit',
> ???????????label='longexit',
> ???????????enabled=FALSE
> ? )
> ??
> ??
> ? add.rule(strategy.st,
> ???????????name='ruleSignal',
> ???????????arguments = list(sigcol="macd.lt.signal",
> ????????????????????????????sigval=TRUE,
> ????????????????????????????prefer="Open",?
> ????????????????????????????orderqty=-1000,?
> ????????????????????????????#osFUN="osAllInShort",??
> ????????????????????????????ordertype='market',
> ????????????????????????????orderside='short',
> ????????????????????????????orderset='ocoshort',
> ????????????????????????????TxnFees = txn.model),
> ???????????type='enter',
> ???????????label='shortenter',
> ???????????enabled=FALSE
> ? )
> ??
> ? add.rule(strategy.st,
> ???????????name='ruleSignal',
> ???????????arguments = list(sigcol="macd.gt.signal",
> ????????????????????????????sigval=TRUE,
> ????????????????????????????prefer="Open",?
> ????????????????????????????orderqty='all',
> ????????????????????????????ordertype='market',
> ????????????????????????????orderside='short',
> ????????????????????????????orderset='ocoshort',
> ????????????????????????????TxnFees = txn.model),
> ???????????type='exit',
> ???????????label='shortexit',
> ???????????enabled=FALSE
> ? )
> ??
> ? enable.rule(strategy.st,type="enter",label="longenter", enable =
> rule.longenter)?
> ? enable.rule(strategy.st,type="exit",label="longexit", enable =
> rule.longexit)
> ? enable.rule(strategy.st,type="enter",label="shortenter", enable =
> rule.shortenter)?
> ? enable.rule(strategy.st,type="exit",label="shortexit", enable =
> rule.shortexit)
> ?
> summary(getStrategy(strategy.st))????????????????????????????????????
> ??????????
> ??
> ? applyStrategy( strategy=strategy.st ,?
> ?????????????????portfolios=strategy.st,
> ?????????????????symbols = sym,
> ?????????????????verbose=TRUE)
> ? updatePortf(strategy.st)
> ? updateAcct(strategy.st)
> ? updateEndEq(strategy.st)
> ??
> ? results.checkstrat <- data.frame(t(tradeStats(strategy.st)))
> ??
> ? return(results.checkstrat[,1])
> 
> }
> 
> if (Sys.info()["sysname"] == "Windows"){
> ? snow::stopCluster(cl)???#dosnow??windows
> }
> 
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R
> questions should go.


From frankm60606 at gmail.com  Mon Mar  6 21:55:07 2017
From: frankm60606 at gmail.com (Frank)
Date: Mon, 6 Mar 2017 14:55:07 -0600
Subject: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols
In-Reply-To: <1488829541.11845.1.camel@braverock.com>
References: <VI1PR03MB1485B088E0DE2B7E4160827DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>
	<1488829541.11845.1.camel@braverock.com>
Message-ID: <000001d296bb$f07d25f0$d17771d0$@gmail.com>

Atakan,

What kind of computer do you have? Number of cores, memory, hyperthreaded or not?

/Brian Does this package take advantage of hyperthreading? By your comment it suggests it does for multiple cores and I would assume hyper threading.

When I do non-R computer intensive work, I break it up into chunks of 8. I have an i7 that hyper threads which pegs the CPU at 100%. If you had a similar setup, you could break your 100 symbol list down into 8 datasets and run them simultaneously. 

Regardless, adding memory is usually a cheap and mindless way to improve throughput.

Best,

Frank
Chicago, IL

-----Original Message-----
From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On Behalf Of Brian G. Peterson
Sent: Monday, March 06, 2017 1:46 PM
To: Atakan Okan <atakanokan at outlook.com>; r-sig-finance at r-project.org
Subject: Re: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols

I suspect you're running up against communication and memory management time and resource contention.  

applyIndicators and applySignals should all be using vectorized code, so the potential benefit from parallelization will likely be negative, as communication and memory management swap any benefit from the calculations.

applyRules might benefit from parllelization, but you would need to come back together on any rebalancing period.  You would also have significant copying time.

If you were going to make this work, you'd need to minimize copies. 
Your effective 'reduce' operation at the end by only returning tradeStats could do this for the end of the calculation, but at the start, you'd need to be smarter about how you segment market data to each worker. 

Just putting getSymbols on the workers might run into I/O contention issues.  You also don't need to redeclare the strategy object.  You could just copy that to each worker.

When we've done things as a one-off, we typically create portfolios for each segment, and try to avoid as many copies as we can.
 
You'd need to profile to see exactly where you're getting hung up, but this approach seems too simplistic (see my first sentence for hints).

We haven't bothered to do this in the package itself since with a little work we can usually get to around one core minute per symbol per day on L1 tick data, which means that even a large backtest on tick data can finish in a few hours.  The cost of optimizing execution time doesn't seem to be worth the cost in programming and testing time.

Regards,

Brian
 
--
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock

On Mon, 2017-03-06 at 18:53 +0000, Atakan Okan wrote:
> Hello,
> 
> I am trying to parallelize applyStrategy() to make it faster when 
> applied to multiple symbols. The reproducible code below only contains 
> 3 symbols thus it finishes fast however when I apply it to
> 100 symbols in an index, sequential computing takes a lot of time.
> What is the best way to accomplish this? Using foreach loop does not 
> seem to work and couldn't find any info on stackexchange or the usual 
> mailing lists.
> 
> Thanks.
> 
> Atakan Okan
> 
> Code with applyStrategy (foreach is below this):
> 
> library(quantmod)
> library(quantstrat)
> 
> symbols <- c("AAPL","GOOGL","MSFT")
> 
> getSymbols(Symbols = symbols, from = "2010-01-01")
> 
> currency('USD')
> stock(symbols, currency="USD")
> 
> strategy.st <- "multiple_symbols_parallel_applystrategy"
> rm.strat(strategy.st)
>       
>       
> initPortf(strategy.st, symbols = symbols) initAcct(strategy.st, 
> portfolios=strategy.st, initEq=100000)
> initOrders(portfolio=strategy.st)
> strategy(strategy.st,store=TRUE)
>                                            
> rule.longenter  = TRUE
> rule.longexit   = TRUE
> rule.shortenter = TRUE
> rule.shortexit  = TRUE
> 
> txn.model <- 0
> 
> add.indicator(strategy.st,
>               name = "MACD",
>               arguments = list(x=Cl(get(symbols))),
>               label='macd')
> 
> add.signal(strategy.st,name="sigCrossover",
>            arguments = list(columns=c("macd.macd","signal.macd"),
>                             relationship="gt"),
>            label="macd.gt.signal")
> 
> add.signal(strategy.st,name="sigCrossover",
>            arguments = list(columns=c("macd.macd","signal.macd"),
>                             relationship="lt"),
>            label="macd.lt.signal")
> 
> add.rule(strategy.st,
>          name='ruleSignal',
>          arguments = list(sigcol="macd.gt.signal",
>                           sigval=TRUE,
>                           prefer="Open",
>                           orderqty= 1000,
>                           #osFUN="osAllInLong",
>                           ordertype='market',
>                           orderside='long',
>                           orderset='ocolong',
>                           TxnFees = txn.model),
>          type='enter',
>          label='longenter',
>          enabled=FALSE
> )
> 
> add.rule(strategy.st,
>          name='ruleSignal',
>          arguments = list(sigcol="macd.lt.signal",
>                           sigval=TRUE,
>                           prefer="Open",
>                           orderqty='all',
>                           ordertype='market',
>                           orderside='long',
>                           orderset='ocolong',
>                           TxnFees = txn.model),
>          type='exit',
>          label='longexit',
>          enabled=FALSE
> )
> 
> 
> add.rule(strategy.st,
>          name='ruleSignal',
>          arguments = list(sigcol="macd.lt.signal",
>                           sigval=TRUE,
>                           prefer="Open",
>                           orderqty=-1000,
>                           #osFUN="osAllInShort",
>                           ordertype='market',
>                           orderside='short',
>                           orderset='ocoshort',
>                           TxnFees = txn.model),
>          type='enter',
>          label='shortenter',
>          enabled=FALSE
> )
> 
> add.rule(strategy.st,
>          name='ruleSignal',
>          arguments = list(sigcol="macd.gt.signal",
>                           sigval=TRUE,
>                           prefer="Open",
>                           orderqty='all',
>                           ordertype='market',
>                           orderside='short',
>                           orderset='ocoshort',
>                           TxnFees = txn.model),
>          type='exit',
>          label='shortexit',
>          enabled=FALSE
> )
> 
> enable.rule(strategy.st,type="enter",label="longenter", enable =
> rule.longenter)
> enable.rule(strategy.st,type="exit",label="longexit", enable =
> rule.longexit)
> enable.rule(strategy.st,type="enter",label="shortenter", enable =
> rule.shortenter)
> enable.rule(strategy.st,type="exit",label="shortexit", enable =
> rule.shortexit)
> summary(getStrategy(strategy.st))
>           
> 
> applyStrategy( strategy=strategy.st ,
>                portfolios=strategy.st,
>                symbols = symbols,
>                verbose=TRUE)
> updatePortf(strategy.st)
> updateAcct(strategy.st)
> updateEndEq(strategy.st)
> 
> -------------------------------------------------------------------
> -------------------------------------------------------------------
> -------------------------------
> Code with foreach:
> 
> library(quantmod)
> library(quantstrat)
> 
> if(Sys.info()["sysname"] == "Windows") {
>   library(doSNOW)
>   cl <- makeCluster(4)
>   registerDoSNOW(cl)
> }
> if(Sys.info()["sysname"] == "Linux") {
>   library(doMC)
>   registerDoMC(cores=4)
>   #registerDoSEQ()
>   getDoParWorkers()
> }
> 
> symbols <- c("AAPL","GOOGL","MSFT")
> 
> sens.df <- foreach(sym = 1:length(symbols),
>                    .combine = 'rbind',
>                    .packages = c("quantstrat","quantmod")) %dopar% {
> 
>   getSymbols(Symbols = sym, from = "2010-01-01")
>   
>   currency('USD')
>   stock(sym, currency="USD")
>   
>   strategy.st <- "multiple_symbols_parallel_applystrategy"
>  
> rm.strat(strategy.st)
>       
>         
>   initPortf(strategy.st, symbols = sym)
>   initAcct(strategy.st, portfolios=strategy.st, initEq=100000)
>   initOrders(portfolio=strategy.st)
>   strategy(strategy.st,store=TRUE)
>                                              
>   rule.longenter  = TRUE
>   rule.longexit   = TRUE
>   rule.shortenter = TRUE
>   rule.shortexit  = TRUE
>   
>   txn.model <- 0
>   
>   add.indicator(strategy.st,
>                 name = "MACD",
>                 arguments = list(x=Cl(get(sym))),
>                 label='macd')
>   
>   add.signal(strategy.st,name="sigCrossover",
>              arguments = list(columns=c("macd.macd","signal.macd"),
>                               relationship="gt"),
>              label="macd.gt.signal")
>   
>   add.signal(strategy.st,name="sigCrossover",
>              arguments = list(columns=c("macd.macd","signal.macd"),
>                               relationship="lt"),
>              label="macd.lt.signal")
>   
>   add.rule(strategy.st,
>            name='ruleSignal',
>            arguments = list(sigcol="macd.gt.signal",
>                             sigval=TRUE,
>                             prefer="Open",
>                             orderqty= 1000,
>                             #osFUN="osAllInLong",
>                             ordertype='market',
>                             orderside='long',
>                             orderset='ocolong',
>                             TxnFees = txn.model),
>            type='enter',
>            label='longenter',
>            enabled=FALSE
>   )
>   
>   add.rule(strategy.st,
>            name='ruleSignal',
>            arguments = list(sigcol="macd.lt.signal",
>                             sigval=TRUE,
>                             prefer="Open",
>                             orderqty='all',
>                             ordertype='market',
>                             orderside='long',
>                             orderset='ocolong',
>                             TxnFees = txn.model),
>            type='exit',
>            label='longexit',
>            enabled=FALSE
>   )
>   
>   
>   add.rule(strategy.st,
>            name='ruleSignal',
>            arguments = list(sigcol="macd.lt.signal",
>                             sigval=TRUE,
>                             prefer="Open",
>                             orderqty=-1000,
>                             #osFUN="osAllInShort",
>                             ordertype='market',
>                             orderside='short',
>                             orderset='ocoshort',
>                             TxnFees = txn.model),
>            type='enter',
>            label='shortenter',
>            enabled=FALSE
>   )
>   
>   add.rule(strategy.st,
>            name='ruleSignal',
>            arguments = list(sigcol="macd.gt.signal",
>                             sigval=TRUE,
>                             prefer="Open",
>                             orderqty='all',
>                             ordertype='market',
>                             orderside='short',
>                             orderset='ocoshort',
>                             TxnFees = txn.model),
>            type='exit',
>            label='shortexit',
>            enabled=FALSE
>   )
>   
>   enable.rule(strategy.st,type="enter",label="longenter", enable =
> rule.longenter)
>   enable.rule(strategy.st,type="exit",label="longexit", enable =
> rule.longexit)
>   enable.rule(strategy.st,type="enter",label="shortenter", enable =
> rule.shortenter)
>   enable.rule(strategy.st,type="exit",label="shortexit", enable =
> rule.shortexit)
>  
> summary(getStrategy(strategy.st))
>           
>   
>   applyStrategy( strategy=strategy.st ,
>                  portfolios=strategy.st,
>                  symbols = sym,
>                  verbose=TRUE)
>   updatePortf(strategy.st)
>   updateAcct(strategy.st)
>   updateEndEq(strategy.st)
>   
>   results.checkstrat <- data.frame(t(tradeStats(strategy.st)))
>   
>   return(results.checkstrat[,1])
> 
> }
> 
> if (Sys.info()["sysname"] == "Windows"){
>   snow::stopCluster(cl)   #dosnow  windows }
> 
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R 
> questions should go.

_______________________________________________
R-SIG-Finance at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions should go.


From atakanokan at outlook.com  Mon Mar  6 23:36:32 2017
From: atakanokan at outlook.com (Atakan Okan)
Date: Mon, 6 Mar 2017 22:36:32 +0000
Subject: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols
In-Reply-To: <000001d296bb$f07d25f0$d17771d0$@gmail.com>
References: <VI1PR03MB1485B088E0DE2B7E4160827DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>
	<1488829541.11845.1.camel@braverock.com>,
	<000001d296bb$f07d25f0$d17771d0$@gmail.com>
Message-ID: <VI1PR03MB1485AF060811A9F6AFED063DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>

Hi Frank,

I just thought of an idea based on your suggestion. Instead of trying to implement a foreach loop, I will try to subset my symbol set into different R sessions with the create a new r session option in Rstudio and then run each subset on a different session with the default call to applyStrategy. I think this is what you were suggesting or I might have understood it incorrectly. 

Hi Brian,
 My understanding of parallelization wasnt enough to grasp all of your reply, but I am not planning on doing rebalancing or testing any strategy that need to "talk" to other threads. Each symbol is backtested on its own withiut any input or output to and from other symbols' backtest. Would my idea suggested above work in this case? I think I explained my problem inadequately; the time of completion of a single symbol's backtest is not the issue but the sequential computing of each symbol's backtest and consequently, linearly increasing completion time of all symbols' backtest is the main issue. I just want to divide each symbol's applyStrategy call to each CPU my laptop has to speed up the process. Like apply.paramset but not for each parameter combination, for each symbol. I hope I have explained better. 

Thanks for the help.

Best,

Atakan Okan

> On 6 Mar 2017, at 23:55, Frank <frankm60606 at gmail.com> wrote:
> 
> Atakan,
> 
> What kind of computer do you have? Number of cores, memory, hyperthreaded or not?
> 
> /Brian Does this package take advantage of hyperthreading? By your comment it suggests it does for multiple cores and I would assume hyper threading.
> 
> When I do non-R computer intensive work, I break it up into chunks of 8. I have an i7 that hyper threads which pegs the CPU at 100%. If you had a similar setup, you could break your 100 symbol list down into 8 datasets and run them simultaneously. 
> 
> Regardless, adding memory is usually a cheap and mindless way to improve throughput.
> 
> Best,
> 
> Frank
> Chicago, IL
> 
> -----Original Message-----
> From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On Behalf Of Brian G. Peterson
> Sent: Monday, March 06, 2017 1:46 PM
> To: Atakan Okan <atakanokan at outlook.com>; r-sig-finance at r-project.org
> Subject: Re: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols
> 
> I suspect you're running up against communication and memory management time and resource contention.  
> 
> applyIndicators and applySignals should all be using vectorized code, so the potential benefit from parallelization will likely be negative, as communication and memory management swap any benefit from the calculations.
> 
> applyRules might benefit from parllelization, but you would need to come back together on any rebalancing period.  You would also have significant copying time.
> 
> If you were going to make this work, you'd need to minimize copies. 
> Your effective 'reduce' operation at the end by only returning tradeStats could do this for the end of the calculation, but at the start, you'd need to be smarter about how you segment market data to each worker. 
> 
> Just putting getSymbols on the workers might run into I/O contention issues.  You also don't need to redeclare the strategy object.  You could just copy that to each worker.
> 
> When we've done things as a one-off, we typically create portfolios for each segment, and try to avoid as many copies as we can.
> 
> You'd need to profile to see exactly where you're getting hung up, but this approach seems too simplistic (see my first sentence for hints).
> 
> We haven't bothered to do this in the package itself since with a little work we can usually get to around one core minute per symbol per day on L1 tick data, which means that even a large backtest on tick data can finish in a few hours.  The cost of optimizing execution time doesn't seem to be worth the cost in programming and testing time.
> 
> Regards,
> 
> Brian
> 
> --
> Brian G. Peterson
> http://braverock.com/brian/
> Ph: 773-459-4973
> IM: bgpbraverock
> 
>> On Mon, 2017-03-06 at 18:53 +0000, Atakan Okan wrote:
>> Hello,
>> 
>> I am trying to parallelize applyStrategy() to make it faster when 
>> applied to multiple symbols. The reproducible code below only contains 
>> 3 symbols thus it finishes fast however when I apply it to
>> 100 symbols in an index, sequential computing takes a lot of time.
>> What is the best way to accomplish this? Using foreach loop does not 
>> seem to work and couldn't find any info on stackexchange or the usual 
>> mailing lists.
>> 
>> Thanks.
>> 
>> Atakan Okan
>> 
>> Code with applyStrategy (foreach is below this):
>> 
>> library(quantmod)
>> library(quantstrat)
>> 
>> symbols <- c("AAPL","GOOGL","MSFT")
>> 
>> getSymbols(Symbols = symbols, from = "2010-01-01")
>> 
>> currency('USD')
>> stock(symbols, currency="USD")
>> 
>> strategy.st <- "multiple_symbols_parallel_applystrategy"
>> rm.strat(strategy.st)
>> 
>> 
>> initPortf(strategy.st, symbols = symbols) initAcct(strategy.st, 
>> portfolios=strategy.st, initEq=100000)
>> initOrders(portfolio=strategy.st)
>> strategy(strategy.st,store=TRUE)
>> 
>> rule.longenter  = TRUE
>> rule.longexit   = TRUE
>> rule.shortenter = TRUE
>> rule.shortexit  = TRUE
>> 
>> txn.model <- 0
>> 
>> add.indicator(strategy.st,
>>              name = "MACD",
>>              arguments = list(x=Cl(get(symbols))),
>>              label='macd')
>> 
>> add.signal(strategy.st,name="sigCrossover",
>>           arguments = list(columns=c("macd.macd","signal.macd"),
>>                            relationship="gt"),
>>           label="macd.gt.signal")
>> 
>> add.signal(strategy.st,name="sigCrossover",
>>           arguments = list(columns=c("macd.macd","signal.macd"),
>>                            relationship="lt"),
>>           label="macd.lt.signal")
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.gt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty= 1000,
>>                          #osFUN="osAllInLong",
>>                          ordertype='market',
>>                          orderside='long',
>>                          orderset='ocolong',
>>                          TxnFees = txn.model),
>>         type='enter',
>>         label='longenter',
>>         enabled=FALSE
>> )
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.lt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty='all',
>>                          ordertype='market',
>>                          orderside='long',
>>                          orderset='ocolong',
>>                          TxnFees = txn.model),
>>         type='exit',
>>         label='longexit',
>>         enabled=FALSE
>> )
>> 
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.lt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty=-1000,
>>                          #osFUN="osAllInShort",
>>                          ordertype='market',
>>                          orderside='short',
>>                          orderset='ocoshort',
>>                          TxnFees = txn.model),
>>         type='enter',
>>         label='shortenter',
>>         enabled=FALSE
>> )
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.gt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty='all',
>>                          ordertype='market',
>>                          orderside='short',
>>                          orderset='ocoshort',
>>                          TxnFees = txn.model),
>>         type='exit',
>>         label='shortexit',
>>         enabled=FALSE
>> )
>> 
>> enable.rule(strategy.st,type="enter",label="longenter", enable =
>> rule.longenter)
>> enable.rule(strategy.st,type="exit",label="longexit", enable =
>> rule.longexit)
>> enable.rule(strategy.st,type="enter",label="shortenter", enable =
>> rule.shortenter)
>> enable.rule(strategy.st,type="exit",label="shortexit", enable =
>> rule.shortexit)
>> summary(getStrategy(strategy.st))
>> 
>> 
>> applyStrategy( strategy=strategy.st ,
>>               portfolios=strategy.st,
>>               symbols = symbols,
>>               verbose=TRUE)
>> updatePortf(strategy.st)
>> updateAcct(strategy.st)
>> updateEndEq(strategy.st)
>> 
>> -------------------------------------------------------------------
>> -------------------------------------------------------------------
>> -------------------------------
>> Code with foreach:
>> 
>> library(quantmod)
>> library(quantstrat)
>> 
>> if(Sys.info()["sysname"] == "Windows") {
>>  library(doSNOW)
>>  cl <- makeCluster(4)
>>  registerDoSNOW(cl)
>> }
>> if(Sys.info()["sysname"] == "Linux") {
>>  library(doMC)
>>  registerDoMC(cores=4)
>>  #registerDoSEQ()
>>  getDoParWorkers()
>> }
>> 
>> symbols <- c("AAPL","GOOGL","MSFT")
>> 
>> sens.df <- foreach(sym = 1:length(symbols),
>>                   .combine = 'rbind',
>>                   .packages = c("quantstrat","quantmod")) %dopar% {
>> 
>>  getSymbols(Symbols = sym, from = "2010-01-01")
>> 
>>  currency('USD')
>>  stock(sym, currency="USD")
>> 
>>  strategy.st <- "multiple_symbols_parallel_applystrategy"
>> 
>> rm.strat(strategy.st)
>> 
>> 
>>  initPortf(strategy.st, symbols = sym)
>>  initAcct(strategy.st, portfolios=strategy.st, initEq=100000)
>>  initOrders(portfolio=strategy.st)
>>  strategy(strategy.st,store=TRUE)
>> 
>>  rule.longenter  = TRUE
>>  rule.longexit   = TRUE
>>  rule.shortenter = TRUE
>>  rule.shortexit  = TRUE
>> 
>>  txn.model <- 0
>> 
>>  add.indicator(strategy.st,
>>                name = "MACD",
>>                arguments = list(x=Cl(get(sym))),
>>                label='macd')
>> 
>>  add.signal(strategy.st,name="sigCrossover",
>>             arguments = list(columns=c("macd.macd","signal.macd"),
>>                              relationship="gt"),
>>             label="macd.gt.signal")
>> 
>>  add.signal(strategy.st,name="sigCrossover",
>>             arguments = list(columns=c("macd.macd","signal.macd"),
>>                              relationship="lt"),
>>             label="macd.lt.signal")
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.gt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty= 1000,
>>                            #osFUN="osAllInLong",
>>                            ordertype='market',
>>                            orderside='long',
>>                            orderset='ocolong',
>>                            TxnFees = txn.model),
>>           type='enter',
>>           label='longenter',
>>           enabled=FALSE
>>  )
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.lt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty='all',
>>                            ordertype='market',
>>                            orderside='long',
>>                            orderset='ocolong',
>>                            TxnFees = txn.model),
>>           type='exit',
>>           label='longexit',
>>           enabled=FALSE
>>  )
>> 
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.lt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty=-1000,
>>                            #osFUN="osAllInShort",
>>                            ordertype='market',
>>                            orderside='short',
>>                            orderset='ocoshort',
>>                            TxnFees = txn.model),
>>           type='enter',
>>           label='shortenter',
>>           enabled=FALSE
>>  )
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.gt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty='all',
>>                            ordertype='market',
>>                            orderside='short',
>>                            orderset='ocoshort',
>>                            TxnFees = txn.model),
>>           type='exit',
>>           label='shortexit',
>>           enabled=FALSE
>>  )
>> 
>>  enable.rule(strategy.st,type="enter",label="longenter", enable =
>> rule.longenter)
>>  enable.rule(strategy.st,type="exit",label="longexit", enable =
>> rule.longexit)
>>  enable.rule(strategy.st,type="enter",label="shortenter", enable =
>> rule.shortenter)
>>  enable.rule(strategy.st,type="exit",label="shortexit", enable =
>> rule.shortexit)
>> 
>> summary(getStrategy(strategy.st))
>> 
>> 
>>  applyStrategy( strategy=strategy.st ,
>>                 portfolios=strategy.st,
>>                 symbols = sym,
>>                 verbose=TRUE)
>>  updatePortf(strategy.st)
>>  updateAcct(strategy.st)
>>  updateEndEq(strategy.st)
>> 
>>  results.checkstrat <- data.frame(t(tradeStats(strategy.st)))
>> 
>>  return(results.checkstrat[,1])
>> 
>> }
>> 
>> if (Sys.info()["sysname"] == "Windows"){
>>  snow::stopCluster(cl)   #dosnow  windows }
>> 
>> _______________________________________________
>> R-SIG-Finance at r-project.org mailing list 
>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> -- Subscriber-posting only. If you want to post, subscribe first.
>> -- Also note that this is not the r-help list where general R 
>> questions should go.
> 
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.
> 


From frankm60606 at gmail.com  Tue Mar  7 22:17:51 2017
From: frankm60606 at gmail.com (Frank)
Date: Tue, 7 Mar 2017 15:17:51 -0600
Subject: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols
In-Reply-To: <VI1PR03MB1485AF060811A9F6AFED063DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>
References: <VI1PR03MB1485B088E0DE2B7E4160827DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>
	<1488829541.11845.1.camel@braverock.com>,
	<000001d296bb$f07d25f0$d17771d0$@gmail.com>
	<VI1PR03MB1485AF060811A9F6AFED063DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>
Message-ID: <000001d29788$4784aef0$d68e0cd0$@gmail.com>

Hi Atakan,

I use a batch file to run most of my R programs. That way I just have to get
it right once and then I can run it many times. The following is a simple
batch command, scatter_plot.bat,  to run some regressions:

"C:\Program Files\R\R-3.0.2\bin\x64\R.exe" CMD BATCH  " Scatter_Plot.txt" "
Scatter_Plot.out"

Scatter_plot.txt contains generic R commands that use data in the current
directory. Scatter_Plot.out will contain the output from the commands in the
text file. 

If I'm analyzing SPY data for 2016, I would use a data structure like:

\SPY\2016\01
\SPY\2016\02
\SPY\2016\03
.
.
.

So that I can analyze one month's data and save the output in one directory.
January data and output to \SPY\2016\01, etc. I have 8 execution paths and
can run 8 months of data simultaneously.  My program is small and does not
use up all available physical memory. I would run the final 4 months when 4
of the 8 initial months are finished. 

If I run more than 8 data intensive regressions, what Brian is saying is
that the OS will spend extra time allocating which thread from which process
gets loaded into the next available execution path. If I were to use up more
than the available physical memory, if that thread was swapped out to the
disk, the process would need to be loaded back into memory and executed
while some process in memory would have to be swapped out to the hard drive.
This traffic will slow things down dramatically. 

At the end of the batch file, the output is copied up one directory, in this
case to 2016, with the year and month appended to a generic file name. There
is a batch file in 2016 to concatenate all data from the different months
into one file for 2016.

Best,

Frank
Chicago
 


-----Original Message-----
From: Atakan Okan [mailto:atakanokan at outlook.com] 
Sent: Monday, March 06, 2017 4:37 PM
To: Frank <frankm60606 at gmail.com>
Cc: Brian G. Peterson <brian at braverock.com>; r-sig-finance at r-project.org
Subject: Re: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols

Hi Frank,

I just thought of an idea based on your suggestion. Instead of trying to
implement a foreach loop, I will try to subset my symbol set into different
R sessions with the create a new r session option in Rstudio and then run
each subset on a different session with the default call to applyStrategy. I
think this is what you were suggesting or I might have understood it
incorrectly. 

Hi Brian,
 My understanding of parallelization wasnt enough to grasp all of your
reply, but I am not planning on doing rebalancing or testing any strategy
that need to "talk" to other threads. Each symbol is backtested on its own
withiut any input or output to and from other symbols' backtest. Would my
idea suggested above work in this case? I think I explained my problem
inadequately; the time of completion of a single symbol's backtest is not
the issue but the sequential computing of each symbol's backtest and
consequently, linearly increasing completion time of all symbols' backtest
is the main issue. I just want to divide each symbol's applyStrategy call to
each CPU my laptop has to speed up the process. Like apply.paramset but not
for each parameter combination, for each symbol. I hope I have explained
better. 

Thanks for the help.

Best,

Atakan Okan

> On 6 Mar 2017, at 23:55, Frank <frankm60606 at gmail.com> wrote:
> 
> Atakan,
> 
> What kind of computer do you have? Number of cores, memory, hyperthreaded
or not?
> 
> /Brian Does this package take advantage of hyperthreading? By your comment
it suggests it does for multiple cores and I would assume hyper threading.
> 
> When I do non-R computer intensive work, I break it up into chunks of 8. I
have an i7 that hyper threads which pegs the CPU at 100%. If you had a
similar setup, you could break your 100 symbol list down into 8 datasets and
run them simultaneously. 
> 
> Regardless, adding memory is usually a cheap and mindless way to improve
throughput.
> 
> Best,
> 
> Frank
> Chicago, IL
> 
> -----Original Message-----
> From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On 
> Behalf Of Brian G. Peterson
> Sent: Monday, March 06, 2017 1:46 PM
> To: Atakan Okan <atakanokan at outlook.com>; r-sig-finance at r-project.org
> Subject: Re: [R-SIG-Finance] Parallelizing applyStrategy to multiple 
> symbols
> 
> I suspect you're running up against communication and memory management
time and resource contention.  
> 
> applyIndicators and applySignals should all be using vectorized code, so
the potential benefit from parallelization will likely be negative, as
communication and memory management swap any benefit from the calculations.
> 
> applyRules might benefit from parllelization, but you would need to come
back together on any rebalancing period.  You would also have significant
copying time.
> 
> If you were going to make this work, you'd need to minimize copies. 
> Your effective 'reduce' operation at the end by only returning tradeStats
could do this for the end of the calculation, but at the start, you'd need
to be smarter about how you segment market data to each worker. 
> 
> Just putting getSymbols on the workers might run into I/O contention
issues.  You also don't need to redeclare the strategy object.  You could
just copy that to each worker.
> 
> When we've done things as a one-off, we typically create portfolios for
each segment, and try to avoid as many copies as we can.
> 
> You'd need to profile to see exactly where you're getting hung up, but
this approach seems too simplistic (see my first sentence for hints).
> 
> We haven't bothered to do this in the package itself since with a little
work we can usually get to around one core minute per symbol per day on L1
tick data, which means that even a large backtest on tick data can finish in
a few hours.  The cost of optimizing execution time doesn't seem to be worth
the cost in programming and testing time.
> 
> Regards,
> 
> Brian
> 
> --
> Brian G. Peterson
> http://braverock.com/brian/
> Ph: 773-459-4973
> IM: bgpbraverock
> 
>> On Mon, 2017-03-06 at 18:53 +0000, Atakan Okan wrote:
>> Hello,
>> 
>> I am trying to parallelize applyStrategy() to make it faster when 
>> applied to multiple symbols. The reproducible code below only 
>> contains
>> 3 symbols thus it finishes fast however when I apply it to
>> 100 symbols in an index, sequential computing takes a lot of time.
>> What is the best way to accomplish this? Using foreach loop does not 
>> seem to work and couldn't find any info on stackexchange or the usual 
>> mailing lists.
>> 
>> Thanks.
>> 
>> Atakan Okan
>> 
>> Code with applyStrategy (foreach is below this):
>> 
>> library(quantmod)
>> library(quantstrat)
>> 
>> symbols <- c("AAPL","GOOGL","MSFT")
>> 
>> getSymbols(Symbols = symbols, from = "2010-01-01")
>> 
>> currency('USD')
>> stock(symbols, currency="USD")
>> 
>> strategy.st <- "multiple_symbols_parallel_applystrategy"
>> rm.strat(strategy.st)
>> 
>> 
>> initPortf(strategy.st, symbols = symbols) initAcct(strategy.st, 
>> portfolios=strategy.st, initEq=100000)
>> initOrders(portfolio=strategy.st)
>> strategy(strategy.st,store=TRUE)
>> 
>> rule.longenter  = TRUE
>> rule.longexit   = TRUE
>> rule.shortenter = TRUE
>> rule.shortexit  = TRUE
>> 
>> txn.model <- 0
>> 
>> add.indicator(strategy.st,
>>              name = "MACD",
>>              arguments = list(x=Cl(get(symbols))),
>>              label='macd')
>> 
>> add.signal(strategy.st,name="sigCrossover",
>>           arguments = list(columns=c("macd.macd","signal.macd"),
>>                            relationship="gt"),
>>           label="macd.gt.signal")
>> 
>> add.signal(strategy.st,name="sigCrossover",
>>           arguments = list(columns=c("macd.macd","signal.macd"),
>>                            relationship="lt"),
>>           label="macd.lt.signal")
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.gt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty= 1000,
>>                          #osFUN="osAllInLong",
>>                          ordertype='market',
>>                          orderside='long',
>>                          orderset='ocolong',
>>                          TxnFees = txn.model),
>>         type='enter',
>>         label='longenter',
>>         enabled=FALSE
>> )
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.lt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty='all',
>>                          ordertype='market',
>>                          orderside='long',
>>                          orderset='ocolong',
>>                          TxnFees = txn.model),
>>         type='exit',
>>         label='longexit',
>>         enabled=FALSE
>> )
>> 
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.lt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty=-1000,
>>                          #osFUN="osAllInShort",
>>                          ordertype='market',
>>                          orderside='short',
>>                          orderset='ocoshort',
>>                          TxnFees = txn.model),
>>         type='enter',
>>         label='shortenter',
>>         enabled=FALSE
>> )
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.gt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty='all',
>>                          ordertype='market',
>>                          orderside='short',
>>                          orderset='ocoshort',
>>                          TxnFees = txn.model),
>>         type='exit',
>>         label='shortexit',
>>         enabled=FALSE
>> )
>> 
>> enable.rule(strategy.st,type="enter",label="longenter", enable =
>> rule.longenter)
>> enable.rule(strategy.st,type="exit",label="longexit", enable =
>> rule.longexit)
>> enable.rule(strategy.st,type="enter",label="shortenter", enable =
>> rule.shortenter)
>> enable.rule(strategy.st,type="exit",label="shortexit", enable =
>> rule.shortexit)
>> summary(getStrategy(strategy.st))
>> 
>> 
>> applyStrategy( strategy=strategy.st ,
>>               portfolios=strategy.st,
>>               symbols = symbols,
>>               verbose=TRUE)
>> updatePortf(strategy.st)
>> updateAcct(strategy.st)
>> updateEndEq(strategy.st)
>> 
>> -------------------------------------------------------------------
>> -------------------------------------------------------------------
>> -------------------------------
>> Code with foreach:
>> 
>> library(quantmod)
>> library(quantstrat)
>> 
>> if(Sys.info()["sysname"] == "Windows") {
>>  library(doSNOW)
>>  cl <- makeCluster(4)
>>  registerDoSNOW(cl)
>> }
>> if(Sys.info()["sysname"] == "Linux") {
>>  library(doMC)
>>  registerDoMC(cores=4)
>>  #registerDoSEQ()
>>  getDoParWorkers()
>> }
>> 
>> symbols <- c("AAPL","GOOGL","MSFT")
>> 
>> sens.df <- foreach(sym = 1:length(symbols),
>>                   .combine = 'rbind',
>>                   .packages = c("quantstrat","quantmod")) %dopar% {
>> 
>>  getSymbols(Symbols = sym, from = "2010-01-01")
>> 
>>  currency('USD')
>>  stock(sym, currency="USD")
>> 
>>  strategy.st <- "multiple_symbols_parallel_applystrategy"
>> 
>> rm.strat(strategy.st)
>> 
>> 
>>  initPortf(strategy.st, symbols = sym)  initAcct(strategy.st, 
>> portfolios=strategy.st, initEq=100000)
>>  initOrders(portfolio=strategy.st)
>>  strategy(strategy.st,store=TRUE)
>> 
>>  rule.longenter  = TRUE
>>  rule.longexit   = TRUE
>>  rule.shortenter = TRUE
>>  rule.shortexit  = TRUE
>> 
>>  txn.model <- 0
>> 
>>  add.indicator(strategy.st,
>>                name = "MACD",
>>                arguments = list(x=Cl(get(sym))),
>>                label='macd')
>> 
>>  add.signal(strategy.st,name="sigCrossover",
>>             arguments = list(columns=c("macd.macd","signal.macd"),
>>                              relationship="gt"),
>>             label="macd.gt.signal")
>> 
>>  add.signal(strategy.st,name="sigCrossover",
>>             arguments = list(columns=c("macd.macd","signal.macd"),
>>                              relationship="lt"),
>>             label="macd.lt.signal")
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.gt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty= 1000,
>>                            #osFUN="osAllInLong",
>>                            ordertype='market',
>>                            orderside='long',
>>                            orderset='ocolong',
>>                            TxnFees = txn.model),
>>           type='enter',
>>           label='longenter',
>>           enabled=FALSE
>>  )
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.lt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty='all',
>>                            ordertype='market',
>>                            orderside='long',
>>                            orderset='ocolong',
>>                            TxnFees = txn.model),
>>           type='exit',
>>           label='longexit',
>>           enabled=FALSE
>>  )
>> 
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.lt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty=-1000,
>>                            #osFUN="osAllInShort",
>>                            ordertype='market',
>>                            orderside='short',
>>                            orderset='ocoshort',
>>                            TxnFees = txn.model),
>>           type='enter',
>>           label='shortenter',
>>           enabled=FALSE
>>  )
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.gt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty='all',
>>                            ordertype='market',
>>                            orderside='short',
>>                            orderset='ocoshort',
>>                            TxnFees = txn.model),
>>           type='exit',
>>           label='shortexit',
>>           enabled=FALSE
>>  )
>> 
>>  enable.rule(strategy.st,type="enter",label="longenter", enable =
>> rule.longenter)
>>  enable.rule(strategy.st,type="exit",label="longexit", enable =
>> rule.longexit)
>>  enable.rule(strategy.st,type="enter",label="shortenter", enable =
>> rule.shortenter)
>>  enable.rule(strategy.st,type="exit",label="shortexit", enable =
>> rule.shortexit)
>> 
>> summary(getStrategy(strategy.st))
>> 
>> 
>>  applyStrategy( strategy=strategy.st ,
>>                 portfolios=strategy.st,
>>                 symbols = sym,
>>                 verbose=TRUE)
>>  updatePortf(strategy.st)
>>  updateAcct(strategy.st)
>>  updateEndEq(strategy.st)
>> 
>>  results.checkstrat <- data.frame(t(tradeStats(strategy.st)))
>> 
>>  return(results.checkstrat[,1])
>> 
>> }
>> 
>> if (Sys.info()["sysname"] == "Windows"){
>>  snow::stopCluster(cl)   #dosnow  windows }
>> 
>> _______________________________________________
>> R-SIG-Finance at r-project.org mailing list 
>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> -- Subscriber-posting only. If you want to post, subscribe first.
>> -- Also note that this is not the r-help list where general R 
>> questions should go.
> 
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list 
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
should go.
>


From frankm60606 at gmail.com  Wed Mar  8 17:46:03 2017
From: frankm60606 at gmail.com (Frank)
Date: Wed, 8 Mar 2017 10:46:03 -0600
Subject: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols
In-Reply-To: <DM5PR0101MB3099822C5099E65A27E422E2822E0@DM5PR0101MB3099.prod.exchangelabs.com>
References: <VI1PR03MB1485B088E0DE2B7E4160827DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>	<1488829541.11845.1.camel@braverock.com>,
	<000001d296bb$f07d25f0$d17771d0$@gmail.com>	<VI1PR03MB1485AF060811A9F6AFED063DC72C0@VI1PR03MB1485.eurprd03.prod.outlook.com>,
	<000001d29788$4784aef0$d68e0cd0$@gmail.com>
	<DM5PR0101MB3099822C5099E65A27E422E2822E0@DM5PR0101MB3099.prod.exchangelabs.com>
Message-ID: <000401d2982b$797bae10$6c730a30$@gmail.com>

No, I have not seen this. Thanks.

 

My post was more to point out how I structure data when I'm running a
compute intensive program written in C. I thought this might help Atakam
think of a way to structure directories to fit his data. 

 

The batch command to run R can be run multiple times in different
directories. This is an example of how to run R from a Windows batch file.
Some may not know how to run R from a batch file. Breaking the data up into
multiple directories and then running R code from a batch file is an
alternative to using the console.

 

I do run the regressions using R from a batch file, but they take seconds to
complete. 

 

Best,

 

Frank

Chicago

 

 

From: Dane Edwards [mailto:daneedwards1 at hotmail.com] 
Sent: Tuesday, March 07, 2017 9:06 PM
To: Frank <frankm60606 at gmail.com>
Subject: RE: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols

 

Hi Frank have you tried this?

 

http://blog.revolutionanalytics.com/2009/05/parallelized-backtesting-with-fo
reach.html

 

http://stackoverflow.com/questions/22340488/r-using-foreach-with-blotter-por
tfolio-already-exists-error

 

 

 

From: Frank <mailto:frankm60606 at gmail.com> 
Sent: Wednesday, 8 March 2017 8:18 AM
To: 'Atakan Okan' <mailto:atakanokan at outlook.com> 
Cc: r-sig-finance at r-project.org <mailto:r-sig-finance at r-project.org> ;
'Brian G. Peterson' <mailto:brian at braverock.com> 
Subject: Re: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols

 

Hi Atakan,

I use a batch file to run most of my R programs. That way I just have to get
it right once and then I can run it many times. The following is a simple
batch command, scatter_plot.bat,  to run some regressions:

"C:\Program Files\R\R-3.0.2\bin\x64\R.exe" CMD BATCH  " Scatter_Plot.txt" "
Scatter_Plot.out"

Scatter_plot.txt contains generic R commands that use data in the current
directory. Scatter_Plot.out will contain the output from the commands in the
text file. 

If I'm analyzing SPY data for 2016, I would use a data structure like:

\SPY\2016\01
\SPY\2016\02
\SPY\2016\03
.
.
.

So that I can analyze one month's data and save the output in one directory.
January data and output to \SPY\2016\01, etc. I have 8 execution paths and
can run 8 months of data simultaneously.  My program is small and does not
use up all available physical memory. I would run the final 4 months when 4
of the 8 initial months are finished. 

If I run more than 8 data intensive regressions, what Brian is saying is
that the OS will spend extra time allocating which thread from which process
gets loaded into the next available execution path. If I were to use up more
than the available physical memory, if that thread was swapped out to the
disk, the process would need to be loaded back into memory and executed
while some process in memory would have to be swapped out to the hard drive.
This traffic will slow things down dramatically. 

At the end of the batch file, the output is copied up one directory, in this
case to 2016, with the year and month appended to a generic file name. There
is a batch file in 2016 to concatenate all data from the different months
into one file for 2016.

Best,

Frank
Chicago
 


-----Original Message-----
From: Atakan Okan [mailto:atakanokan at outlook.com] 
Sent: Monday, March 06, 2017 4:37 PM
To: Frank <frankm60606 at gmail.com <mailto:frankm60606 at gmail.com> >
Cc: Brian G. Peterson <brian at braverock.com <mailto:brian at braverock.com> >;
r-sig-finance at r-project.org <mailto:r-sig-finance at r-project.org> 
Subject: Re: [R-SIG-Finance] Parallelizing applyStrategy to multiple symbols

Hi Frank,

I just thought of an idea based on your suggestion. Instead of trying to
implement a foreach loop, I will try to subset my symbol set into different
R sessions with the create a new r session option in Rstudio and then run
each subset on a different session with the default call to applyStrategy. I
think this is what you were suggesting or I might have understood it
incorrectly. 

Hi Brian,
 My understanding of parallelization wasnt enough to grasp all of your
reply, but I am not planning on doing rebalancing or testing any strategy
that need to "talk" to other threads. Each symbol is backtested on its own
withiut any input or output to and from other symbols' backtest. Would my
idea suggested above work in this case? I think I explained my problem
inadequately; the time of completion of a single symbol's backtest is not
the issue but the sequential computing of each symbol's backtest and
consequently, linearly increasing completion time of all symbols' backtest
is the main issue. I just want to divide each symbol's applyStrategy call to
each CPU my laptop has to speed up the process. Like apply.paramset but not
for each parameter combination, for each symbol. I hope I have explained
better. 

Thanks for the help.

Best,

Atakan Okan

> On 6 Mar 2017, at 23:55, Frank <frankm60606 at gmail.com
<mailto:frankm60606 at gmail.com> > wrote:
> 
> Atakan,
> 
> What kind of computer do you have? Number of cores, memory, hyperthreaded
or not?
> 
> /Brian Does this package take advantage of hyperthreading? By your comment
it suggests it does for multiple cores and I would assume hyper threading.
> 
> When I do non-R computer intensive work, I break it up into chunks of 8. I
have an i7 that hyper threads which pegs the CPU at 100%. If you had a
similar setup, you could break your 100 symbol list down into 8 datasets and
run them simultaneously. 
> 
> Regardless, adding memory is usually a cheap and mindless way to improve
throughput.
> 
> Best,
> 
> Frank
> Chicago, IL
> 
> -----Original Message-----
> From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On 
> Behalf Of Brian G. Peterson
> Sent: Monday, March 06, 2017 1:46 PM
> To: Atakan Okan <atakanokan at outlook.com <mailto:atakanokan at outlook.com> >;
r-sig-finance at r-project.org <mailto:r-sig-finance at r-project.org> 
> Subject: Re: [R-SIG-Finance] Parallelizing applyStrategy to multiple 
> symbols
> 
> I suspect you're running up against communication and memory management
time and resource contention.  
> 
> applyIndicators and applySignals should all be using vectorized code, so
the potential benefit from parallelization will likely be negative, as
communication and memory management swap any benefit from the calculations.
> 
> applyRules might benefit from parllelization, but you would need to come
back together on any rebalancing period.  You would also have significant
copying time.
> 
> If you were going to make this work, you'd need to minimize copies. 
> Your effective 'reduce' operation at the end by only returning tradeStats
could do this for the end of the calculation, but at the start, you'd need
to be smarter about how you segment market data to each worker. 
> 
> Just putting getSymbols on the workers might run into I/O contention
issues.  You also don't need to redeclare the strategy object.  You could
just copy that to each worker.
> 
> When we've done things as a one-off, we typically create portfolios for
each segment, and try to avoid as many copies as we can.
> 
> You'd need to profile to see exactly where you're getting hung up, but
this approach seems too simplistic (see my first sentence for hints).
> 
> We haven't bothered to do this in the package itself since with a little
work we can usually get to around one core minute per symbol per day on L1
tick data, which means that even a large backtest on tick data can finish in
a few hours.  The cost of optimizing execution time doesn't seem to be worth
the cost in programming and testing time.
> 
> Regards,
> 
> Brian
> 
> --
> Brian G. Peterson
> http://braverock.com/brian/
> Ph: 773-459-4973
> IM: bgpbraverock
> 
>> On Mon, 2017-03-06 at 18:53 +0000, Atakan Okan wrote:
>> Hello,
>> 
>> I am trying to parallelize applyStrategy() to make it faster when 
>> applied to multiple symbols. The reproducible code below only 
>> contains
>> 3 symbols thus it finishes fast however when I apply it to
>> 100 symbols in an index, sequential computing takes a lot of time.
>> What is the best way to accomplish this? Using foreach loop does not 
>> seem to work and couldn't find any info on stackexchange or the usual 
>> mailing lists.
>> 
>> Thanks.
>> 
>> Atakan Okan
>> 
>> Code with applyStrategy (foreach is below this):
>> 
>> library(quantmod)
>> library(quantstrat)
>> 
>> symbols <- c("AAPL","GOOGL","MSFT")
>> 
>> getSymbols(Symbols = symbols, from = "2010-01-01")
>> 
>> currency('USD')
>> stock(symbols, currency="USD")
>> 
>> strategy.st <- "multiple_symbols_parallel_applystrategy"
>> rm.strat(strategy.st)
>> 
>> 
>> initPortf(strategy.st, symbols = symbols) initAcct(strategy.st, 
>> portfolios=strategy.st, initEq=100000)
>> initOrders(portfolio=strategy.st)
>> strategy(strategy.st,store=TRUE)
>> 
>> rule.longenter  = TRUE
>> rule.longexit   = TRUE
>> rule.shortenter = TRUE
>> rule.shortexit  = TRUE
>> 
>> txn.model <- 0
>> 
>> add.indicator(strategy.st,
>>              name = "MACD",
>>              arguments = list(x=Cl(get(symbols))),
>>              label='macd')
>> 
>> add.signal(strategy.st,name="sigCrossover",
>>           arguments = list(columns=c("macd.macd","signal.macd"),
>>                            relationship="gt"),
>>           label="macd.gt.signal")
>> 
>> add.signal(strategy.st,name="sigCrossover",
>>           arguments = list(columns=c("macd.macd","signal.macd"),
>>                            relationship="lt"),
>>           label="macd.lt.signal")
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.gt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty= 1000,
>>                          #osFUN="osAllInLong",
>>                          ordertype='market',
>>                          orderside='long',
>>                          orderset='ocolong',
>>                          TxnFees = txn.model),
>>         type='enter',
>>         label='longenter',
>>         enabled=FALSE
>> )
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.lt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty='all',
>>                          ordertype='market',
>>                          orderside='long',
>>                          orderset='ocolong',
>>                          TxnFees = txn.model),
>>         type='exit',
>>         label='longexit',
>>         enabled=FALSE
>> )
>> 
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.lt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty=-1000,
>>                          #osFUN="osAllInShort",
>>                          ordertype='market',
>>                          orderside='short',
>>                          orderset='ocoshort',
>>                          TxnFees = txn.model),
>>         type='enter',
>>         label='shortenter',
>>         enabled=FALSE
>> )
>> 
>> add.rule(strategy.st,
>>         name='ruleSignal',
>>         arguments = list(sigcol="macd.gt.signal",
>>                          sigval=TRUE,
>>                          prefer="Open",
>>                          orderqty='all',
>>                          ordertype='market',
>>                          orderside='short',
>>                          orderset='ocoshort',
>>                          TxnFees = txn.model),
>>         type='exit',
>>         label='shortexit',
>>         enabled=FALSE
>> )
>> 
>> enable.rule(strategy.st,type="enter",label="longenter", enable =
>> rule.longenter)
>> enable.rule(strategy.st,type="exit",label="longexit", enable =
>> rule.longexit)
>> enable.rule(strategy.st,type="enter",label="shortenter", enable =
>> rule.shortenter)
>> enable.rule(strategy.st,type="exit",label="shortexit", enable =
>> rule.shortexit)
>> summary(getStrategy(strategy.st))
>> 
>> 
>> applyStrategy( strategy=strategy.st ,
>>               portfolios=strategy.st,
>>               symbols = symbols,
>>               verbose=TRUE)
>> updatePortf(strategy.st)
>> updateAcct(strategy.st)
>> updateEndEq(strategy.st)
>> 
>> -------------------------------------------------------------------
>> -------------------------------------------------------------------
>> -------------------------------
>> Code with foreach:
>> 
>> library(quantmod)
>> library(quantstrat)
>> 
>> if(Sys.info()["sysname"] == "Windows") {
>>  library(doSNOW)
>>  cl <- makeCluster(4)
>>  registerDoSNOW(cl)
>> }
>> if(Sys.info()["sysname"] == "Linux") {
>>  library(doMC)
>>  registerDoMC(cores=4)
>>  #registerDoSEQ()
>>  getDoParWorkers()
>> }
>> 
>> symbols <- c("AAPL","GOOGL","MSFT")
>> 
>> sens.df <- foreach(sym = 1:length(symbols),
>>                   .combine = 'rbind',
>>                   .packages = c("quantstrat","quantmod")) %dopar% {
>> 
>>  getSymbols(Symbols = sym, from = "2010-01-01")
>> 
>>  currency('USD')
>>  stock(sym, currency="USD")
>> 
>>  strategy.st <- "multiple_symbols_parallel_applystrategy"
>> 
>> rm.strat(strategy.st)
>> 
>> 
>>  initPortf(strategy.st, symbols = sym)  initAcct(strategy.st, 
>> portfolios=strategy.st, initEq=100000)
>>  initOrders(portfolio=strategy.st)
>>  strategy(strategy.st,store=TRUE)
>> 
>>  rule.longenter  = TRUE
>>  rule.longexit   = TRUE
>>  rule.shortenter = TRUE
>>  rule.shortexit  = TRUE
>> 
>>  txn.model <- 0
>> 
>>  add.indicator(strategy.st,
>>                name = "MACD",
>>                arguments = list(x=Cl(get(sym))),
>>                label='macd')
>> 
>>  add.signal(strategy.st,name="sigCrossover",
>>             arguments = list(columns=c("macd.macd","signal.macd"),
>>                              relationship="gt"),
>>             label="macd.gt.signal")
>> 
>>  add.signal(strategy.st,name="sigCrossover",
>>             arguments = list(columns=c("macd.macd","signal.macd"),
>>                              relationship="lt"),
>>             label="macd.lt.signal")
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.gt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty= 1000,
>>                            #osFUN="osAllInLong",
>>                            ordertype='market',
>>                            orderside='long',
>>                            orderset='ocolong',
>>                            TxnFees = txn.model),
>>           type='enter',
>>           label='longenter',
>>           enabled=FALSE
>>  )
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.lt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty='all',
>>                            ordertype='market',
>>                            orderside='long',
>>                            orderset='ocolong',
>>                            TxnFees = txn.model),
>>           type='exit',
>>           label='longexit',
>>           enabled=FALSE
>>  )
>> 
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.lt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty=-1000,
>>                            #osFUN="osAllInShort",
>>                            ordertype='market',
>>                            orderside='short',
>>                            orderset='ocoshort',
>>                            TxnFees = txn.model),
>>           type='enter',
>>           label='shortenter',
>>           enabled=FALSE
>>  )
>> 
>>  add.rule(strategy.st,
>>           name='ruleSignal',
>>           arguments = list(sigcol="macd.gt.signal",
>>                            sigval=TRUE,
>>                            prefer="Open",
>>                            orderqty='all',
>>                            ordertype='market',
>>                            orderside='short',
>>                            orderset='ocoshort',
>>                            TxnFees = txn.model),
>>           type='exit',
>>           label='shortexit',
>>           enabled=FALSE
>>  )
>> 
>>  enable.rule(strategy.st,type="enter",label="longenter", enable =
>> rule.longenter)
>>  enable.rule(strategy.st,type="exit",label="longexit", enable =
>> rule.longexit)
>>  enable.rule(strategy.st,type="enter",label="shortenter", enable =
>> rule.shortenter)
>>  enable.rule(strategy.st,type="exit",label="shortexit", enable =
>> rule.shortexit)
>> 
>> summary(getStrategy(strategy.st))
>> 
>> 
>>  applyStrategy( strategy=strategy.st ,
>>                 portfolios=strategy.st,
>>                 symbols = sym,
>>                 verbose=TRUE)
>>  updatePortf(strategy.st)
>>  updateAcct(strategy.st)
>>  updateEndEq(strategy.st)
>> 
>>  results.checkstrat <- data.frame(t(tradeStats(strategy.st)))
>> 
>>  return(results.checkstrat[,1])
>> 
>> }
>> 
>> if (Sys.info()["sysname"] == "Windows"){
>>  snow::stopCluster(cl)   #dosnow  windows }
>> 
>> _______________________________________________
>> R-SIG-Finance at r-project.org <mailto:R-SIG-Finance at r-project.org>  mailing
list 
>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> -- Subscriber-posting only. If you want to post, subscribe first.
>> -- Also note that this is not the r-help list where general R 
>> questions should go.
> 
> _______________________________________________
> R-SIG-Finance at r-project.org <mailto:R-SIG-Finance at r-project.org>  mailing
list 
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
should go.
>

_______________________________________________
R-SIG-Finance at r-project.org <mailto:R-SIG-Finance at r-project.org>  mailing
list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions
should go.


	[[alternative HTML version deleted]]


From diegoperoni at vodafone.it  Tue Mar 14 08:50:44 2017
From: diegoperoni at vodafone.it (Diego Peroni)
Date: Tue, 14 Mar 2017 08:50:44 +0100
Subject: [R-SIG-Finance] apply.paramset stopping on condition
Message-ID: <350bf410-8283-c054-8edf-07b2336c2fc1@vodafone.it>

Hello everybody,

I'm using quantstrat apply.paramset to optimize some parameters but my 
simulations runs for a long time...

I'm trying to stop bad simulations BEFORE they finish basing on some 
indicators (ex. Net.Profit or drawdown).

Is there a way to control this beaviour including some custom code in 
quantstrat?

Thanks

Diego


From frankm60606 at gmail.com  Tue Mar 14 17:35:36 2017
From: frankm60606 at gmail.com (Frank)
Date: Tue, 14 Mar 2017 11:35:36 -0500
Subject: [R-SIG-Finance] apply.paramset stopping on condition
In-Reply-To: <350bf410-8283-c054-8edf-07b2336c2fc1@vodafone.it>
References: <350bf410-8283-c054-8edf-07b2336c2fc1@vodafone.it>
Message-ID: <008401d29ce1$02bed080$083c7180$@gmail.com>

Would you attach an example to your post? Something that we can run using
copy and paste to R console, with some data?

Thanks,

Frank
Chicago

-----Original Message-----
From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On Behalf
Of Diego Peroni
Sent: Tuesday, March 14, 2017 2:51 AM
To: r-sig-finance at r-project.org
Subject: [R-SIG-Finance] apply.paramset stopping on condition

Hello everybody,

I'm using quantstrat apply.paramset to optimize some parameters but my
simulations runs for a long time...

I'm trying to stop bad simulations BEFORE they finish basing on some
indicators (ex. Net.Profit or drawdown).

Is there a way to control this beaviour including some custom code in
quantstrat?

Thanks

Diego

_______________________________________________
R-SIG-Finance at r-project.org mailing list
https://stat.ethz.ch/mailman/listinfo/r-sig-finance
-- Subscriber-posting only. If you want to post, subscribe first.
-- Also note that this is not the r-help list where general R questions
should go.


From diegoperoni at vodafone.it  Tue Mar 14 17:52:37 2017
From: diegoperoni at vodafone.it (Diego Peroni)
Date: Tue, 14 Mar 2017 17:52:37 +0100
Subject: [R-SIG-Finance] apply.paramset stopping on condition
In-Reply-To: <008401d29ce1$02bed080$083c7180$@gmail.com>
References: <350bf410-8283-c054-8edf-07b2336c2fc1@vodafone.it>
	<008401d29ce1$02bed080$083c7180$@gmail.com>
Message-ID: <6914f384-8171-a2ea-083d-db2991716ce4@vodafone.it>

Hi Frank,

I don't have code to share: every simulation is fine...

In other words my problem is:

1) In which function of quantstrat can I insert some custom code to stop 
simulation execution at a specific moment based on my personal raw 
criteria (ex. Profit or Drawdown)?

2) The custom code must be placed in a place where I can collect last 
trade result step by step to calculate approximately "partial" Profit or 
Drawdown

I'm looking at "ruleOrderProc.R" function but I'm not sure it is the 
best place...

Thanks in advance

Diego



On 14/03/2017 17:35, Frank wrote:
> Would you attach an example to your post? Something that we can run using
> copy and paste to R console, with some data?
>
> Thanks,
>
> Frank
> Chicago
>
> -----Original Message-----
> From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On Behalf
> Of Diego Peroni
> Sent: Tuesday, March 14, 2017 2:51 AM
> To: r-sig-finance at r-project.org
> Subject: [R-SIG-Finance] apply.paramset stopping on condition
>
> Hello everybody,
>
> I'm using quantstrat apply.paramset to optimize some parameters but my
> simulations runs for a long time...
>
> I'm trying to stop bad simulations BEFORE they finish basing on some
> indicators (ex. Net.Profit or drawdown).
>
> Is there a way to control this beaviour including some custom code in
> quantstrat?
>
> Thanks
>
> Diego
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>


From brian at braverock.com  Tue Mar 14 18:02:03 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Tue, 14 Mar 2017 12:02:03 -0500
Subject: [R-SIG-Finance] apply.paramset stopping on condition
In-Reply-To: <6914f384-8171-a2ea-083d-db2991716ce4@vodafone.it>
References: <350bf410-8283-c054-8edf-07b2336c2fc1@vodafone.it>
	<008401d29ce1$02bed080$083c7180$@gmail.com>
	<6914f384-8171-a2ea-083d-db2991716ce4@vodafone.it>
Message-ID: <1489510923.6518.9.camel@braverock.com>

How are you planning to calculate this statistic to 'stop trading'? 

If you're using net profit, drawdown, etc., these are typically
calculated after the backtest is over, e.g. using updatePortf and
tradeStats.

Obviously this is too late to bail out early.

You could conceivably check some 'partial' profit or loss in a rule
(maybe a rebalance rule) from the trades that have happened, zero out
all your signals, adjust the next dindex to the last observation to
skip to the end.

I'd argue that your question suggests that you're not doing analysis of
 your signals before running the expensive walk-forward or
apply.paramset processes.  Wouldn't it make more sense to apply your
proposed parameters over your signal process, where the code should be
vectorized, fast, and cheap, than to wait till you're running the
comparatively slower path dependent rules?

quantstrat has many functions for doing signal analysis, including
signal analysis over a parameter set.  See the signal analysis demos.

Also, I suspect you may be doing something else computationally
expensive in your backtest. We can typically get to about one core-
minute per symbol per day on tick data.  So we've certainly seen tests
that take hours or even days to run here, but those are over massive
amounts of data.  Have you profiled a single run of the backtest to see
where it is spending its time? 

Regards,

Brian


-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock

On Tue, 2017-03-14 at 17:52 +0100, Diego Peroni wrote:
> Hi Frank,
> 
> I don't have code to share: every simulation is fine...
> 
> In other words my problem is:
> 
> 1) In which function of quantstrat can I insert some custom code to
> stop?
> simulation execution at a specific moment based on my personal raw?
> criteria (ex. Profit or Drawdown)?
> 
> 2) The custom code must be placed in a place where I can collect
> last?
> trade result step by step to calculate approximately "partial" Profit
> or?
> Drawdown
> 
> I'm looking at "ruleOrderProc.R" function but I'm not sure it is the?
> best place...
> 
> Thanks in advance
> 
> Diego
> 
> 
> 
> On 14/03/2017 17:35, Frank wrote:
> > Would you attach an example to your post? Something that we can run
> > using
> > copy and paste to R console, with some data?
> > 
> > Thanks,
> > 
> > Frank
> > Chicago
> > 
> > -----Original Message-----
> > From: R-SIG-Finance [mailto:r-sig-finance-bounces at r-project.org] On
> > Behalf
> > Of Diego Peroni
> > Sent: Tuesday, March 14, 2017 2:51 AM
> > To: r-sig-finance at r-project.org
> > Subject: [R-SIG-Finance] apply.paramset stopping on condition
> > 
> > Hello everybody,
> > 
> > I'm using quantstrat apply.paramset to optimize some parameters but
> > my
> > simulations runs for a long time...
> > 
> > I'm trying to stop bad simulations BEFORE they finish basing on
> > some
> > indicators (ex. Net.Profit or drawdown).
> > 
> > Is there a way to control this beaviour including some custom code
> > in
> > quantstrat?
> > 
> > Thanks
> > 
> > Diego
> > 
> > _______________________________________________
> > R-SIG-Finance at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> > -- Subscriber-posting only. If you want to post, subscribe first.
> > -- Also note that this is not the r-help list where general R
> > questions
> > should go.
> > 
> 
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R
> questions should go.


From diegoperoni at vodafone.it  Tue Mar 14 18:50:05 2017
From: diegoperoni at vodafone.it (Diego Peroni)
Date: Tue, 14 Mar 2017 18:50:05 +0100
Subject: [R-SIG-Finance] apply.paramset stopping on condition
In-Reply-To: <1489510923.6518.9.camel@braverock.com>
References: <350bf410-8283-c054-8edf-07b2336c2fc1@vodafone.it>
	<008401d29ce1$02bed080$083c7180$@gmail.com>
	<6914f384-8171-a2ea-083d-db2991716ce4@vodafone.it>
	<1489510923.6518.9.camel@braverock.com>
Message-ID: <6947a347-bbc2-efa6-979b-47c8b727d826@vodafone.it>

Hi Brain,

thanks for your answers.

See following answers below.

Diego


On 14/03/2017 18:02, Brian G. Peterson wrote:
> How are you planning to calculate this statistic to 'stop trading'?
For me it's just a threshold for drawdown: reading transaction by 
transaction I can easly calculate it.
>
> If you're using net profit, drawdown, etc., these are typically
> calculated after the backtest is over, e.g. using updatePortf and
> tradeStats.
>
> Obviously this is too late to bail out early.
>
> You could conceivably check some 'partial' profit or loss in a rule
> (maybe a rebalance rule) from the trades that have happened, zero out
> all your signals, adjust the next dindex to the last observation to
> skip to the end.
Ok this is probably what I'm looking for!
>
> I'd argue that your question suggests that you're not doing analysis of
>   your signals before running the expensive walk-forward or
> apply.paramset processes.  Wouldn't it make more sense to apply your
> proposed parameters over your signal process, where the code should be
> vectorized, fast, and cheap, than to wait till you're running the
> comparatively slower path dependent rules?
If I've understood your suggestion I've seen that indicator&signal 
calculation takes just few seconds, it's not a problem.
But I don't know effectiveness over trading...
>
> quantstrat has many functions for doing signal analysis, including
> signal analysis over a parameter set.  See the signal analysis demos.
I'm going to see the code in signal.SMA.R and signal.RSI.R
>
> Also, I suspect you may be doing something else computationally
> expensive in your backtest. We can typically get to about one core-
> minute per symbol per day on tick data.  So we've certainly seen tests
> that take hours or even days to run here, but those are over massive
> amounts of data.  Have you profiled a single run of the backtest to see
> where it is spending its time?
I'm testing 7 years of minute data (1 symbol) and 1 backtesting normally 
takes about 2 hours.
My simulation uses trailingstops and I think that it is the slowest 
order type (path.dep).
Am I wrong?

Is there a way to profile where my backtest is spending its time?

Thanks a lot for your help! :-)

>
> Regards,
>
> Brian
>
>


From kevin.dhingra at appliedacademics.com  Mon Mar 20 20:09:33 2017
From: kevin.dhingra at appliedacademics.com (Kevin Dhingra)
Date: Mon, 20 Mar 2017 15:09:33 -0400
Subject: [R-SIG-Finance]  random portfolios
Message-ID: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>

Hello everybody,

I have been using the random_portfolios function from the
`PortfolioAnalytics` package to simulate the range of possibilities for
return paths at each step under various portfolio constraints / mandates
for evaluating mutual fund managers. As more managers are added to the
universe, however, and more simulations are needed, the pure R
implementations get pretty heavy and hard to scale. I was wondering if
there has been any work out there thus far on implementing any of the three
random portfolio generation methods (sample, simplex, and grid search) at a
lower level, using something like `Rcpp` to enhance the efficiency of these
algorithms?


Any help/feedback is much appreciated.

Thank you,

-- 
Kshitij Dhingra
Applied Academics LLC
Office: +1.917.262.0516
Mobile: +1.206.696.5945
Email: kshitij.dhingra at appliedacademics.com
Website: http://www.AppliedAcademics.com

	[[alternative HTML version deleted]]


From brian at braverock.com  Mon Mar 20 20:17:47 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Mon, 20 Mar 2017 14:17:47 -0500
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
Message-ID: <1490037467.6518.53.camel@braverock.com>

On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
> I have been using the random_portfolios function from the
> `PortfolioAnalytics` package to simulate the range of possibilities
> for return paths at each step under various portfolio constraints /
> mandates for evaluating mutual fund managers. As more managers are
> added to the universe, however, and more simulations are needed, the
> pure R implementations get pretty heavy and hard to scale. I was
> wondering if there has been any work out there thus far on
> implementing any of the three random portfolio generation methods
> (sample, simplex, and grid search) at a lower level, using something
> like `Rcpp` to enhance the efficiency of these algorithms?

We've discussed it, but I can't say that it is terribly high on our
list of priorities. ?

In most cases, no more than 1-2k portfolios should be required to get a
fair view of the feasible space given your constraints and objectives.

We'd be happy to work with you if you want to craft a patch to use C or
Rcpp for this.

Regards,

Brian


From kevin.dhingra at appliedacademics.com  Mon Mar 20 20:35:40 2017
From: kevin.dhingra at appliedacademics.com (Kevin Dhingra)
Date: Mon, 20 Mar 2017 15:35:40 -0400
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <1490037467.6518.53.camel@braverock.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
Message-ID: <CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>

Brian,

Thank you for a quick reply. I will soon be working on that problem and
from what I have played with so far, it is unlikely that for our example
~2k portfolios will be enough (really hoping it would) to get a good sense
of the feasible space and seems like I need to implement an Rcpp version of
the random portfolios function. I will be happy to collaborate and share my
code once i get a decent handle on it locally for the purposes of our
current project.

Regards,
Kshitij Dhingra



On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson <brian at braverock.com>
wrote:

> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
> > I have been using the random_portfolios function from the
> > `PortfolioAnalytics` package to simulate the range of possibilities
> > for return paths at each step under various portfolio constraints /
> > mandates for evaluating mutual fund managers. As more managers are
> > added to the universe, however, and more simulations are needed, the
> > pure R implementations get pretty heavy and hard to scale. I was
> > wondering if there has been any work out there thus far on
> > implementing any of the three random portfolio generation methods
> > (sample, simplex, and grid search) at a lower level, using something
> > like `Rcpp` to enhance the efficiency of these algorithms?
>
> We've discussed it, but I can't say that it is terribly high on our
> list of priorities.
>
> In most cases, no more than 1-2k portfolios should be required to get a
> fair view of the feasible space given your constraints and objectives.
>
> We'd be happy to work with you if you want to craft a patch to use C or
> Rcpp for this.
>
> Regards,
>
> Brian
>



-- 
Kshitij Dhingra
Applied Academics LLC
Office: +1.917.262.0516
Mobile: +1.206.696.5945
Email: kshitij.dhingra at appliedacademics.com
Website: http://www.AppliedAcademics.com

	[[alternative HTML version deleted]]


From rossbennett34 at gmail.com  Mon Mar 20 21:04:26 2017
From: rossbennett34 at gmail.com (Ross Bennett)
Date: Mon, 20 Mar 2017 15:04:26 -0500
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
Message-ID: <CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>

Kevin,

Can you give us a sense of the number of assets in the portfolio and
the constraints? That will help us understand where the potential
bottlenecks are in the random portfolio generation. For example,
generating a set of random portfolios for box and weight constraints
if relatively fast, but adding group or position limit constraints
makes the algorithm more complicated and slower.

Thanks,
Ross


On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
<kevin.dhingra at appliedacademics.com> wrote:
> Brian,
>
> Thank you for a quick reply. I will soon be working on that problem and
> from what I have played with so far, it is unlikely that for our example
> ~2k portfolios will be enough (really hoping it would) to get a good sense
> of the feasible space and seems like I need to implement an Rcpp version of
> the random portfolios function. I will be happy to collaborate and share my
> code once i get a decent handle on it locally for the purposes of our
> current project.
>
> Regards,
> Kshitij Dhingra
>
>
>
> On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson <brian at braverock.com>
> wrote:
>
>> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
>> > I have been using the random_portfolios function from the
>> > `PortfolioAnalytics` package to simulate the range of possibilities
>> > for return paths at each step under various portfolio constraints /
>> > mandates for evaluating mutual fund managers. As more managers are
>> > added to the universe, however, and more simulations are needed, the
>> > pure R implementations get pretty heavy and hard to scale. I was
>> > wondering if there has been any work out there thus far on
>> > implementing any of the three random portfolio generation methods
>> > (sample, simplex, and grid search) at a lower level, using something
>> > like `Rcpp` to enhance the efficiency of these algorithms?
>>
>> We've discussed it, but I can't say that it is terribly high on our
>> list of priorities.
>>
>> In most cases, no more than 1-2k portfolios should be required to get a
>> fair view of the feasible space given your constraints and objectives.
>>
>> We'd be happy to work with you if you want to craft a patch to use C or
>> Rcpp for this.
>>
>> Regards,
>>
>> Brian
>>
>
>
>
> --
> Kshitij Dhingra
> Applied Academics LLC
> Office: +1.917.262.0516
> Mobile: +1.206.696.5945
> Email: kshitij.dhingra at appliedacademics.com
> Website: http://www.AppliedAcademics.com
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.


From kevin.dhingra at appliedacademics.com  Mon Mar 20 23:28:31 2017
From: kevin.dhingra at appliedacademics.com (Kevin Dhingra)
Date: Mon, 20 Mar 2017 18:28:31 -0400
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
Message-ID: <CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>

Hi Ross,

Sure. Even though I have not profiled the bottlenecks quite in detail as of
yet, i will give you a decent idea of the problem I am working with. I can
have multiple indices with as much as 2000 assets with group, position and
turnover limits (Not sure if i can increase the speed by removing
constraints and doing rejection sampling later). In order to generate a
daily possible set for the market in this case, I was playing around with
~4-5 thousand permutations. Also I think I will end up using the "sample"
method because of the type of constraints we have and as you already have
mentioned that method is the slowest (takes about 30 times the time using
"simplex" for the same constraints). Adding box and position limit
constraints are causing it to run a bit slower (but its not a big
difference). I can always provide a more thorough analysis of the potential
bottlenecks with a lot more detail when I have a chance to start working on
translating it to cpp

Thank you,

On Mon, Mar 20, 2017 at 4:04 PM, Ross Bennett <rossbennett34 at gmail.com>
wrote:

> Kevin,
>
> Can you give us a sense of the number of assets in the portfolio and
> the constraints? That will help us understand where the potential
> bottlenecks are in the random portfolio generation. For example,
> generating a set of random portfolios for box and weight constraints
> if relatively fast, but adding group or position limit constraints
> makes the algorithm more complicated and slower.
>
> Thanks,
> Ross
>
>
> On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
> <kevin.dhingra at appliedacademics.com> wrote:
> > Brian,
> >
> > Thank you for a quick reply. I will soon be working on that problem and
> > from what I have played with so far, it is unlikely that for our example
> > ~2k portfolios will be enough (really hoping it would) to get a good
> sense
> > of the feasible space and seems like I need to implement an Rcpp version
> of
> > the random portfolios function. I will be happy to collaborate and share
> my
> > code once i get a decent handle on it locally for the purposes of our
> > current project.
> >
> > Regards,
> > Kshitij Dhingra
> >
> >
> >
> > On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson <brian at braverock.com>
> > wrote:
> >
> >> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
> >> > I have been using the random_portfolios function from the
> >> > `PortfolioAnalytics` package to simulate the range of possibilities
> >> > for return paths at each step under various portfolio constraints /
> >> > mandates for evaluating mutual fund managers. As more managers are
> >> > added to the universe, however, and more simulations are needed, the
> >> > pure R implementations get pretty heavy and hard to scale. I was
> >> > wondering if there has been any work out there thus far on
> >> > implementing any of the three random portfolio generation methods
> >> > (sample, simplex, and grid search) at a lower level, using something
> >> > like `Rcpp` to enhance the efficiency of these algorithms?
> >>
> >> We've discussed it, but I can't say that it is terribly high on our
> >> list of priorities.
> >>
> >> In most cases, no more than 1-2k portfolios should be required to get a
> >> fair view of the feasible space given your constraints and objectives.
> >>
> >> We'd be happy to work with you if you want to craft a patch to use C or
> >> Rcpp for this.
> >>
> >> Regards,
> >>
> >> Brian
> >>
> >
> >
> >
> > --
> > Kshitij Dhingra
> > Applied Academics LLC
> > Office: +1.917.262.0516
> > Mobile: +1.206.696.5945
> > Email: kshitij.dhingra at appliedacademics.com
> > Website: http://www.AppliedAcademics.com
> >
> >         [[alternative HTML version deleted]]
> >
> > _______________________________________________
> > R-SIG-Finance at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> > -- Subscriber-posting only. If you want to post, subscribe first.
> > -- Also note that this is not the r-help list where general R questions
> should go.
>



-- 
Kshitij Dhingra
Applied Academics LLC
Office: +1.917.262.0516
Mobile: +1.206.696.5945
Email: kshitij.dhingra at appliedacademics.com
Website: http://www.AppliedAcademics.com

	[[alternative HTML version deleted]]


From brian at braverock.com  Tue Mar 21 00:21:10 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Mon, 20 Mar 2017 18:21:10 -0500
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
	<CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
Message-ID: <eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>

For this type of problem, I would probably generate one set of random 
portfolios and just reuse that set of feasible portfolios...  My usual 
rule is n-assets + 1-2k feasible portfolios.  You can get a better 
number e.g. from sampling theory, but this should be enough.

Once you have this weights matrix rp, you only need to regenerate rp if 
your universe changes.

Still interested in a more efficient implementation, of course, or we 
can work with you to see if we can find resources to work on it, e.g. 
from academia.

Regards,

Brian

On 03/20/2017 05:28 PM, Kevin Dhingra wrote:
> Hi Ross,
>
> Sure. Even though I have not profiled the bottlenecks quite in detail as of
> yet, i will give you a decent idea of the problem I am working with. I can
> have multiple indices with as much as 2000 assets with group, position and
> turnover limits (Not sure if i can increase the speed by removing
> constraints and doing rejection sampling later). In order to generate a
> daily possible set for the market in this case, I was playing around with
> ~4-5 thousand permutations. Also I think I will end up using the "sample"
> method because of the type of constraints we have and as you already have
> mentioned that method is the slowest (takes about 30 times the time using
> "simplex" for the same constraints). Adding box and position limit
> constraints are causing it to run a bit slower (but its not a big
> difference). I can always provide a more thorough analysis of the potential
> bottlenecks with a lot more detail when I have a chance to start working on
> translating it to cpp
>
> Thank you,
>
> On Mon, Mar 20, 2017 at 4:04 PM, Ross Bennett <rossbennett34 at gmail.com>
> wrote:
>
>> Kevin,
>>
>> Can you give us a sense of the number of assets in the portfolio and
>> the constraints? That will help us understand where the potential
>> bottlenecks are in the random portfolio generation. For example,
>> generating a set of random portfolios for box and weight constraints
>> if relatively fast, but adding group or position limit constraints
>> makes the algorithm more complicated and slower.
>>
>> Thanks,
>> Ross
>>
>>
>> On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
>> <kevin.dhingra at appliedacademics.com> wrote:
>>> Brian,
>>>
>>> Thank you for a quick reply. I will soon be working on that problem and
>>> from what I have played with so far, it is unlikely that for our example
>>> ~2k portfolios will be enough (really hoping it would) to get a good
>> sense
>>> of the feasible space and seems like I need to implement an Rcpp version
>> of
>>> the random portfolios function. I will be happy to collaborate and share
>> my
>>> code once i get a decent handle on it locally for the purposes of our
>>> current project.
>>>
>>> Regards,
>>> Kshitij Dhingra
>>>
>>>
>>>
>>> On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson <brian at braverock.com>
>>> wrote:
>>>
>>>> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
>>>>> I have been using the random_portfolios function from the
>>>>> `PortfolioAnalytics` package to simulate the range of possibilities
>>>>> for return paths at each step under various portfolio constraints /
>>>>> mandates for evaluating mutual fund managers. As more managers are
>>>>> added to the universe, however, and more simulations are needed, the
>>>>> pure R implementations get pretty heavy and hard to scale. I was
>>>>> wondering if there has been any work out there thus far on
>>>>> implementing any of the three random portfolio generation methods
>>>>> (sample, simplex, and grid search) at a lower level, using something
>>>>> like `Rcpp` to enhance the efficiency of these algorithms?
>>>>
>>>> We've discussed it, but I can't say that it is terribly high on our
>>>> list of priorities.
>>>>
>>>> In most cases, no more than 1-2k portfolios should be required to get a
>>>> fair view of the feasible space given your constraints and objectives.
>>>>
>>>> We'd be happy to work with you if you want to craft a patch to use C or
>>>> Rcpp for this.
>>>>
>>>> Regards,
>>>>
>>>> Brian
>>>>
>>>
>>>
>>>
>>> --
>>> Kshitij Dhingra
>>> Applied Academics LLC
>>> Office: +1.917.262.0516
>>> Mobile: +1.206.696.5945
>>> Email: kshitij.dhingra at appliedacademics.com
>>> Website: http://www.AppliedAcademics.com
>>>
>>>         [[alternative HTML version deleted]]
>>>
>>> _______________________________________________
>>> R-SIG-Finance at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>> -- Subscriber-posting only. If you want to post, subscribe first.
>>> -- Also note that this is not the r-help list where general R questions
>> should go.
>>
>
>
>


-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From kevin.dhingra at appliedacademics.com  Tue Mar 21 01:06:35 2017
From: kevin.dhingra at appliedacademics.com (Kevin Dhingra)
Date: Mon, 20 Mar 2017 20:06:35 -0400
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
	<CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
	<eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
Message-ID: <CAG1eqLaMxWPv5twUo15S3JF_-gKrjrUqOaiJ-d5L05d4M=R67Q@mail.gmail.com>

Brian,

Yes I think that will be a good starting point. My universe would not
change a lot (I will be working with 10-15 benchmarks at a time and I guess
I can generate a reusable set for each independently before running it
through my main algorithm). Having said that, I envision the investment
mandates/constraints changing quite a lot (both in the cross section and
also over time for the same manager). I am hoping there must be a way
around it using rejection sampling but have not done enough research to
comment on how that solution works for such big dimensions. It will be
really helpful if you could point me to any specific resources from
academia for the same (Haven't been able to find much about random
portfolios myself except Portfolio Analytics and Patrick Burns work on
Portfolio Probe). As a side note - Do you think translating it using Rcpp
would be time well spent or you think there must be a smarter way to get
around it still using R?

I really appreciate your help on this thread.

Regards,
Kshitij Dhingra

On Mon, Mar 20, 2017 at 7:21 PM, Brian G. Peterson <brian at braverock.com>
wrote:

> For this type of problem, I would probably generate one set of random
> portfolios and just reuse that set of feasible portfolios...  My usual rule
> is n-assets + 1-2k feasible portfolios.  You can get a better number e.g.
> from sampling theory, but this should be enough.
>
> Once you have this weights matrix rp, you only need to regenerate rp if
> your universe changes.
>
> Still interested in a more efficient implementation, of course, or we can
> work with you to see if we can find resources to work on it, e.g. from
> academia.
>
> Regards,
>
> Brian
>
>
> On 03/20/2017 05:28 PM, Kevin Dhingra wrote:
>
>> Hi Ross,
>>
>> Sure. Even though I have not profiled the bottlenecks quite in detail as
>> of
>> yet, i will give you a decent idea of the problem I am working with. I can
>> have multiple indices with as much as 2000 assets with group, position and
>> turnover limits (Not sure if i can increase the speed by removing
>> constraints and doing rejection sampling later). In order to generate a
>> daily possible set for the market in this case, I was playing around with
>> ~4-5 thousand permutations. Also I think I will end up using the "sample"
>> method because of the type of constraints we have and as you already have
>> mentioned that method is the slowest (takes about 30 times the time using
>> "simplex" for the same constraints). Adding box and position limit
>> constraints are causing it to run a bit slower (but its not a big
>> difference). I can always provide a more thorough analysis of the
>> potential
>> bottlenecks with a lot more detail when I have a chance to start working
>> on
>> translating it to cpp
>>
>> Thank you,
>>
>> On Mon, Mar 20, 2017 at 4:04 PM, Ross Bennett <rossbennett34 at gmail.com>
>> wrote:
>>
>> Kevin,
>>>
>>> Can you give us a sense of the number of assets in the portfolio and
>>> the constraints? That will help us understand where the potential
>>> bottlenecks are in the random portfolio generation. For example,
>>> generating a set of random portfolios for box and weight constraints
>>> if relatively fast, but adding group or position limit constraints
>>> makes the algorithm more complicated and slower.
>>>
>>> Thanks,
>>> Ross
>>>
>>>
>>> On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
>>> <kevin.dhingra at appliedacademics.com> wrote:
>>>
>>>> Brian,
>>>>
>>>> Thank you for a quick reply. I will soon be working on that problem and
>>>> from what I have played with so far, it is unlikely that for our example
>>>> ~2k portfolios will be enough (really hoping it would) to get a good
>>>>
>>> sense
>>>
>>>> of the feasible space and seems like I need to implement an Rcpp version
>>>>
>>> of
>>>
>>>> the random portfolios function. I will be happy to collaborate and share
>>>>
>>> my
>>>
>>>> code once i get a decent handle on it locally for the purposes of our
>>>> current project.
>>>>
>>>> Regards,
>>>> Kshitij Dhingra
>>>>
>>>>
>>>>
>>>> On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson <brian at braverock.com
>>>> >
>>>> wrote:
>>>>
>>>> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
>>>>>
>>>>>> I have been using the random_portfolios function from the
>>>>>> `PortfolioAnalytics` package to simulate the range of possibilities
>>>>>> for return paths at each step under various portfolio constraints /
>>>>>> mandates for evaluating mutual fund managers. As more managers are
>>>>>> added to the universe, however, and more simulations are needed, the
>>>>>> pure R implementations get pretty heavy and hard to scale. I was
>>>>>> wondering if there has been any work out there thus far on
>>>>>> implementing any of the three random portfolio generation methods
>>>>>> (sample, simplex, and grid search) at a lower level, using something
>>>>>> like `Rcpp` to enhance the efficiency of these algorithms?
>>>>>>
>>>>>
>>>>> We've discussed it, but I can't say that it is terribly high on our
>>>>> list of priorities.
>>>>>
>>>>> In most cases, no more than 1-2k portfolios should be required to get a
>>>>> fair view of the feasible space given your constraints and objectives.
>>>>>
>>>>> We'd be happy to work with you if you want to craft a patch to use C or
>>>>> Rcpp for this.
>>>>>
>>>>> Regards,
>>>>>
>>>>> Brian
>>>>>
>>>>>
>>>>
>>>>
>>>> --
>>>> Kshitij Dhingra
>>>> Applied Academics LLC
>>>> Office: +1.917.262.0516
>>>> Mobile: +1.206.696.5945
>>>> Email: kshitij.dhingra at appliedacademics.com
>>>> Website: http://www.AppliedAcademics.com
>>>>
>>>>         [[alternative HTML version deleted]]
>>>>
>>>> _______________________________________________
>>>> R-SIG-Finance at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>>> -- Subscriber-posting only. If you want to post, subscribe first.
>>>> -- Also note that this is not the r-help list where general R questions
>>>>
>>> should go.
>>>
>>>
>>
>>
>>
>
> --
> Brian G. Peterson
> http://braverock.com/brian/
> Ph: 773-459-4973
> IM: bgpbraverock
>
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>



-- 
Kshitij Dhingra
Applied Academics LLC
Office: +1.917.262.0516
Mobile: +1.206.696.5945
Email: kshitij.dhingra at appliedacademics.com
Website: http://www.AppliedAcademics.com

	[[alternative HTML version deleted]]


From frednovo at pipeline.com  Tue Mar 21 04:51:57 2017
From: frednovo at pipeline.com (frednovo at pipeline.com)
Date: Mon, 20 Mar 2017 23:51:57 -0400 (GMT-04:00)
Subject: [R-SIG-Finance] random portfolios
Message-ID: <19039914.12038.1490068317510@wamui-hunyo.atl.sa.earthlink.net>

Please look at my package rportfolios.  It allows you to construct individual and samples of random portfolios that satisfy a wide range of constraints ( e.g., long only, short only, long short portfolios with notional exposure constraints, bounded weights).

Regards,

Frederick Novomestky

-----Original Message-----
>From: Kevin Dhingra <kevin.dhingra at appliedacademics.com>
>Sent: Mar 20, 2017 6:28 PM
>To: Ross Bennett <rossbennett34 at gmail.com>
>Cc: "r-sig-finance at r-project.org" <r-sig-finance at r-project.org>
>Subject: Re: [R-SIG-Finance] random portfolios
>
>Hi Ross,
>
>Sure. Even though I have not profiled the bottlenecks quite in detail as of
>yet, i will give you a decent idea of the problem I am working with. I can
>have multiple indices with as much as 2000 assets with group, position and
>turnover limits (Not sure if i can increase the speed by removing
>constraints and doing rejection sampling later). In order to generate a
>daily possible set for the market in this case, I was playing around with
>~4-5 thousand permutations. Also I think I will end up using the "sample"
>method because of the type of constraints we have and as you already have
>mentioned that method is the slowest (takes about 30 times the time using
>"simplex" for the same constraints). Adding box and position limit
>constraints are causing it to run a bit slower (but its not a big
>difference). I can always provide a more thorough analysis of the potential
>bottlenecks with a lot more detail when I have a chance to start working on
>translating it to cpp
>
>Thank you,
>
>On Mon, Mar 20, 2017 at 4:04 PM, Ross Bennett <rossbennett34 at gmail.com>
>wrote:
>
>> Kevin,
>>
>> Can you give us a sense of the number of assets in the portfolio and
>> the constraints? That will help us understand where the potential
>> bottlenecks are in the random portfolio generation. For example,
>> generating a set of random portfolios for box and weight constraints
>> if relatively fast, but adding group or position limit constraints
>> makes the algorithm more complicated and slower.
>>
>> Thanks,
>> Ross
>>
>>
>> On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
>> <kevin.dhingra at appliedacademics.com> wrote:
>> > Brian,
>> >
>> > Thank you for a quick reply. I will soon be working on that problem and
>> > from what I have played with so far, it is unlikely that for our example
>> > ~2k portfolios will be enough (really hoping it would) to get a good
>> sense
>> > of the feasible space and seems like I need to implement an Rcpp version
>> of
>> > the random portfolios function. I will be happy to collaborate and share
>> my
>> > code once i get a decent handle on it locally for the purposes of our
>> > current project.
>> >
>> > Regards,
>> > Kshitij Dhingra
>> >
>> >
>> >
>> > On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson <brian at braverock.com>
>> > wrote:
>> >
>> >> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
>> >> > I have been using the random_portfolios function from the
>> >> > `PortfolioAnalytics` package to simulate the range of possibilities
>> >> > for return paths at each step under various portfolio constraints /
>> >> > mandates for evaluating mutual fund managers. As more managers are
>> >> > added to the universe, however, and more simulations are needed, the
>> >> > pure R implementations get pretty heavy and hard to scale. I was
>> >> > wondering if there has been any work out there thus far on
>> >> > implementing any of the three random portfolio generation methods
>> >> > (sample, simplex, and grid search) at a lower level, using something
>> >> > like `Rcpp` to enhance the efficiency of these algorithms?
>> >>
>> >> We've discussed it, but I can't say that it is terribly high on our
>> >> list of priorities.
>> >>
>> >> In most cases, no more than 1-2k portfolios should be required to get a
>> >> fair view of the feasible space given your constraints and objectives.
>> >>
>> >> We'd be happy to work with you if you want to craft a patch to use C or
>> >> Rcpp for this.
>> >>
>> >> Regards,
>> >>
>> >> Brian
>> >>
>> >
>> >
>> >
>> > --
>> > Kshitij Dhingra
>> > Applied Academics LLC
>> > Office: +1.917.262.0516
>> > Mobile: +1.206.696.5945
>> > Email: kshitij.dhingra at appliedacademics.com
>> > Website: http://www.AppliedAcademics.com
>> >
>> >         [[alternative HTML version deleted]]
>> >
>> > _______________________________________________
>> > R-SIG-Finance at r-project.org mailing list
>> > https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> > -- Subscriber-posting only. If you want to post, subscribe first.
>> > -- Also note that this is not the r-help list where general R questions
>> should go.
>>
>
>
>
>-- 
>Kshitij Dhingra
>Applied Academics LLC
>Office: +1.917.262.0516
>Mobile: +1.206.696.5945
>Email: kshitij.dhingra at appliedacademics.com
>Website: http://www.AppliedAcademics.com
>
>	[[alternative HTML version deleted]]
>
>_______________________________________________
>R-SIG-Finance at r-project.org mailing list
>https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>-- Subscriber-posting only. If you want to post, subscribe first.
>-- Also note that this is not the r-help list where general R questions should go.


From brian at braverock.com  Tue Mar 21 11:41:17 2017
From: brian at braverock.com (Brian G. Peterson)
Date: Tue, 21 Mar 2017 05:41:17 -0500
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <CAG1eqLaMxWPv5twUo15S3JF_-gKrjrUqOaiJ-d5L05d4M=R67Q@mail.gmail.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
	<CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
	<eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
	<CAG1eqLaMxWPv5twUo15S3JF_-gKrjrUqOaiJ-d5L05d4M=R67Q@mail.gmail.com>
Message-ID: <d34e8b3b-6fdb-71bb-7ee8-6bb2a4164e10@braverock.com>

The process you describe is pretty standard for an investment-committee 
driven process.

I'm going to suggest that you don't really want to change the 
constraints that often.  For example, box constraints should be as large 
as your overall investment mandate allows to give you the greatest 
possible room for allocations.  Sector or Factor constraints likewise 
should be as minimal as possible just to guarantee the degree of 
diversification described in your investment mandate.

The reason I'm suggesting this minimal constraint set is one of the 
reasons we wrote the random portfolio code in the first place.  To see 
what I mean, generate a set of unconstrained random portfolios (or e.g. 
only with a full-investment constraint).  Then generate sets of 
constrained random portfolios, adding your various constraint sets. 
Plot the different sets on the same risk/return scatter plot, using 
different colors for each set.  Note how small the feasible space 
becomes, very quickly.

This shrinkage of the feasible space has some good shrinkage 
properties...  moderate shrinkage actually decreases the possible impact 
of estimation error in the various inputs, a little.  Large amounts of 
shrinkage (overly restrictive constraints) will do the opposite, and 
magnify the negative out of sample impact of estimation error.

The academic literature mostly focuses on analytical solvers (e.g. 
quadratic, linear, etc) and simple constraint sets.  We've cited papers 
by Patrick Burns as well as papers on the simplex models in 
PortfolioAnalytics, but the literature is not vast.

Numerical solvers become important as the feasible space becomes 
non-smooth.  One of the things that can create a non-smooth feasible 
space is a complex, overlapping constraint set.

The rportfolios package proposed by Frederick Novomestky also seems to 
be an R-only implementation, at a glance relying on truncated random 
binomial vectors rather than truncated random uniform vectors.  I 
believe it will have similar performance characteristics to the 
Burns-style random sample portfolios, and it seems to support fewer 
constraint sets (no overlapping sector, group, or factor constraints 
that I see).  In any case, it generates matrices of weights that are 
likely compatible with the PortfolioAnalytics random or seed portfolio 
inputs.  So if it works for you, that's great.

You also discuss using rejection after generating the portfolios.  This 
is the method used internally by random.portfolios to reject individual 
weights if a constraint is violated.  I'll have to evaluate whether the 
truncdist package used by rportfolios could be more efficient than the 
runif that is used by the current code.  PortfolioAnalytics also allows 
portfolios to be penalized in the solver, so that more complex cases can 
be considered, or interactions between constraints and objectives.

To answer the question of whether Rcpp will help is somewhat complex. 
I'm confident that some of the nested loops in the generation code will 
be sped up by Rcpp.  It is possible that more efficient algorithms are 
available for constructing the weight vectors.  A reason that this 
hasn't been a huge priority though is that construction of the random 
portfolio matrix is usually not the time limiter in a large 
optimization: your objective function is.  I think it will be possible 
to improve the efficiency of this step, though it is unclear how much of 
an impact this should have in practice to a large and complicated 
numerically solved portfolio optimization problem.

Regards,

Brian



On 03/20/2017 07:06 PM, Kevin Dhingra wrote:
> Brian,
>
> Yes I think that will be a good starting point. My universe would not
> change a lot (I will be working with 10-15 benchmarks at a time and I guess
> I can generate a reusable set for each independently before running it
> through my main algorithm). Having said that, I envision the investment
> mandates/constraints changing quite a lot (both in the cross section and
> also over time for the same manager). I am hoping there must be a way
> around it using rejection sampling but have not done enough research to
> comment on how that solution works for such big dimensions. It will be
> really helpful if you could point me to any specific resources from
> academia for the same (Haven't been able to find much about random
> portfolios myself except Portfolio Analytics and Patrick Burns work on
> Portfolio Probe). As a side note - Do you think translating it using Rcpp
> would be time well spent or you think there must be a smarter way to get
> around it still using R?
>
> I really appreciate your help on this thread.
>
> Regards,
> Kshitij Dhingra
>
> On Mon, Mar 20, 2017 at 7:21 PM, Brian G. Peterson <brian at braverock.com>
> wrote:
>
>> For this type of problem, I would probably generate one set of random
>> portfolios and just reuse that set of feasible portfolios...  My usual rule
>> is n-assets + 1-2k feasible portfolios.  You can get a better number e.g.
>> from sampling theory, but this should be enough.
>>
>> Once you have this weights matrix rp, you only need to regenerate rp if
>> your universe changes.
>>
>> Still interested in a more efficient implementation, of course, or we can
>> work with you to see if we can find resources to work on it, e.g. from
>> academia.
>>
>> Regards,
>>
>> Brian
>>
>>
>> On 03/20/2017 05:28 PM, Kevin Dhingra wrote:
>>
>>> Hi Ross,
>>>
>>> Sure. Even though I have not profiled the bottlenecks quite in detail as
>>> of
>>> yet, i will give you a decent idea of the problem I am working with. I can
>>> have multiple indices with as much as 2000 assets with group, position and
>>> turnover limits (Not sure if i can increase the speed by removing
>>> constraints and doing rejection sampling later). In order to generate a
>>> daily possible set for the market in this case, I was playing around with
>>> ~4-5 thousand permutations. Also I think I will end up using the "sample"
>>> method because of the type of constraints we have and as you already have
>>> mentioned that method is the slowest (takes about 30 times the time using
>>> "simplex" for the same constraints). Adding box and position limit
>>> constraints are causing it to run a bit slower (but its not a big
>>> difference). I can always provide a more thorough analysis of the
>>> potential
>>> bottlenecks with a lot more detail when I have a chance to start working
>>> on
>>> translating it to cpp
>>>
>>> Thank you,
>>>
>>> On Mon, Mar 20, 2017 at 4:04 PM, Ross Bennett <rossbennett34 at gmail.com>
>>> wrote:
>>>
>>> Kevin,
>>>>
>>>> Can you give us a sense of the number of assets in the portfolio and
>>>> the constraints? That will help us understand where the potential
>>>> bottlenecks are in the random portfolio generation. For example,
>>>> generating a set of random portfolios for box and weight constraints
>>>> if relatively fast, but adding group or position limit constraints
>>>> makes the algorithm more complicated and slower.
>>>>
>>>> Thanks,
>>>> Ross
>>>>
>>>>
>>>> On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
>>>> <kevin.dhingra at appliedacademics.com> wrote:
>>>>
>>>>> Brian,
>>>>>
>>>>> Thank you for a quick reply. I will soon be working on that problem and
>>>>> from what I have played with so far, it is unlikely that for our example
>>>>> ~2k portfolios will be enough (really hoping it would) to get a good
>>>>>
>>>> sense
>>>>
>>>>> of the feasible space and seems like I need to implement an Rcpp version
>>>>>
>>>> of
>>>>
>>>>> the random portfolios function. I will be happy to collaborate and share
>>>>>
>>>> my
>>>>
>>>>> code once i get a decent handle on it locally for the purposes of our
>>>>> current project.
>>>>>
>>>>> Regards,
>>>>> Kshitij Dhingra
>>>>>
>>>>>
>>>>>
>>>>> On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson <brian at braverock.com
>>>>>>
>>>>> wrote:
>>>>>
>>>>> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
>>>>>>
>>>>>>> I have been using the random_portfolios function from the
>>>>>>> `PortfolioAnalytics` package to simulate the range of possibilities
>>>>>>> for return paths at each step under various portfolio constraints /
>>>>>>> mandates for evaluating mutual fund managers. As more managers are
>>>>>>> added to the universe, however, and more simulations are needed, the
>>>>>>> pure R implementations get pretty heavy and hard to scale. I was
>>>>>>> wondering if there has been any work out there thus far on
>>>>>>> implementing any of the three random portfolio generation methods
>>>>>>> (sample, simplex, and grid search) at a lower level, using something
>>>>>>> like `Rcpp` to enhance the efficiency of these algorithms?
>>>>>>>
>>>>>>
>>>>>> We've discussed it, but I can't say that it is terribly high on our
>>>>>> list of priorities.
>>>>>>
>>>>>> In most cases, no more than 1-2k portfolios should be required to get a
>>>>>> fair view of the feasible space given your constraints and objectives.
>>>>>>
>>>>>> We'd be happy to work with you if you want to craft a patch to use C or
>>>>>> Rcpp for this.
>>>>>>
>>>>>> Regards,
>>>>>>
>>>>>> Brian
>>>>>>
>>>>>>
>>>>>
>>>>>
>>>>> --
>>>>> Kshitij Dhingra
>>>>> Applied Academics LLC
>>>>> Office: +1.917.262.0516
>>>>> Mobile: +1.206.696.5945
>>>>> Email: kshitij.dhingra at appliedacademics.com
>>>>> Website: http://www.AppliedAcademics.com
>>>>>
>>>>>         [[alternative HTML version deleted]]
>>>>>
>>>>> _______________________________________________
>>>>> R-SIG-Finance at r-project.org mailing list
>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>>>> -- Subscriber-posting only. If you want to post, subscribe first.
>>>>> -- Also note that this is not the r-help list where general R questions
>>>>>
>>>> should go.
>>>>
>>>>
>>>
>>>
>>>
>>
>> --
>> Brian G. Peterson
>> http://braverock.com/brian/
>> Ph: 773-459-4973
>> IM: bgpbraverock
>>
>>
>> _______________________________________________
>> R-SIG-Finance at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> -- Subscriber-posting only. If you want to post, subscribe first.
>> -- Also note that this is not the r-help list where general R questions
>> should go.
>>
>
>
>


-- 
Brian G. Peterson
http://braverock.com/brian/
Ph: 773-459-4973
IM: bgpbraverock


From rossbennett34 at gmail.com  Tue Mar 21 12:24:36 2017
From: rossbennett34 at gmail.com (Ross Bennett)
Date: Tue, 21 Mar 2017 06:24:36 -0500
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <d34e8b3b-6fdb-71bb-7ee8-6bb2a4164e10@braverock.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
	<CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
	<eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
	<CAG1eqLaMxWPv5twUo15S3JF_-gKrjrUqOaiJ-d5L05d4M=R67Q@mail.gmail.com>
	<d34e8b3b-6fdb-71bb-7ee8-6bb2a4164e10@braverock.com>
Message-ID: <CAEESW=WX+uYNdca01rK_ocq=79-J1kPZr7c-38kPA74pFLWNmg@mail.gmail.com>

Just wanted to point out an example of what Brian mentioned for
visualizing the feasible space with different constraint sets.
Visualizations here
http://rossb34.github.io/PortfolioAnalyticsPresentation2016/#22 on
slides 22-26 and code
https://github.com/rossb34/PortfolioAnalyticsPresentation2016/blob/master/feasible_space.R
to produce the plots.

Ross


On Tue, Mar 21, 2017 at 5:41 AM, Brian G. Peterson <brian at braverock.com> wrote:
> The process you describe is pretty standard for an investment-committee
> driven process.
>
> I'm going to suggest that you don't really want to change the constraints
> that often.  For example, box constraints should be as large as your overall
> investment mandate allows to give you the greatest possible room for
> allocations.  Sector or Factor constraints likewise should be as minimal as
> possible just to guarantee the degree of diversification described in your
> investment mandate.
>
> The reason I'm suggesting this minimal constraint set is one of the reasons
> we wrote the random portfolio code in the first place.  To see what I mean,
> generate a set of unconstrained random portfolios (or e.g. only with a
> full-investment constraint).  Then generate sets of constrained random
> portfolios, adding your various constraint sets. Plot the different sets on
> the same risk/return scatter plot, using different colors for each set.
> Note how small the feasible space becomes, very quickly.
>
> This shrinkage of the feasible space has some good shrinkage properties...
> moderate shrinkage actually decreases the possible impact of estimation
> error in the various inputs, a little.  Large amounts of shrinkage (overly
> restrictive constraints) will do the opposite, and magnify the negative out
> of sample impact of estimation error.
>
> The academic literature mostly focuses on analytical solvers (e.g.
> quadratic, linear, etc) and simple constraint sets.  We've cited papers by
> Patrick Burns as well as papers on the simplex models in PortfolioAnalytics,
> but the literature is not vast.
>
> Numerical solvers become important as the feasible space becomes non-smooth.
> One of the things that can create a non-smooth feasible space is a complex,
> overlapping constraint set.
>
> The rportfolios package proposed by Frederick Novomestky also seems to be an
> R-only implementation, at a glance relying on truncated random binomial
> vectors rather than truncated random uniform vectors.  I believe it will
> have similar performance characteristics to the Burns-style random sample
> portfolios, and it seems to support fewer constraint sets (no overlapping
> sector, group, or factor constraints that I see).  In any case, it generates
> matrices of weights that are likely compatible with the PortfolioAnalytics
> random or seed portfolio inputs.  So if it works for you, that's great.
>
> You also discuss using rejection after generating the portfolios.  This is
> the method used internally by random.portfolios to reject individual weights
> if a constraint is violated.  I'll have to evaluate whether the truncdist
> package used by rportfolios could be more efficient than the runif that is
> used by the current code.  PortfolioAnalytics also allows portfolios to be
> penalized in the solver, so that more complex cases can be considered, or
> interactions between constraints and objectives.
>
> To answer the question of whether Rcpp will help is somewhat complex. I'm
> confident that some of the nested loops in the generation code will be sped
> up by Rcpp.  It is possible that more efficient algorithms are available for
> constructing the weight vectors.  A reason that this hasn't been a huge
> priority though is that construction of the random portfolio matrix is
> usually not the time limiter in a large optimization: your objective
> function is.  I think it will be possible to improve the efficiency of this
> step, though it is unclear how much of an impact this should have in
> practice to a large and complicated numerically solved portfolio
> optimization problem.
>
> Regards,
>
> Brian
>
>
>
>
> On 03/20/2017 07:06 PM, Kevin Dhingra wrote:
>>
>> Brian,
>>
>> Yes I think that will be a good starting point. My universe would not
>> change a lot (I will be working with 10-15 benchmarks at a time and I
>> guess
>> I can generate a reusable set for each independently before running it
>> through my main algorithm). Having said that, I envision the investment
>> mandates/constraints changing quite a lot (both in the cross section and
>> also over time for the same manager). I am hoping there must be a way
>> around it using rejection sampling but have not done enough research to
>> comment on how that solution works for such big dimensions. It will be
>> really helpful if you could point me to any specific resources from
>> academia for the same (Haven't been able to find much about random
>> portfolios myself except Portfolio Analytics and Patrick Burns work on
>> Portfolio Probe). As a side note - Do you think translating it using Rcpp
>> would be time well spent or you think there must be a smarter way to get
>> around it still using R?
>>
>> I really appreciate your help on this thread.
>>
>> Regards,
>> Kshitij Dhingra
>>
>> On Mon, Mar 20, 2017 at 7:21 PM, Brian G. Peterson <brian at braverock.com>
>> wrote:
>>
>>> For this type of problem, I would probably generate one set of random
>>> portfolios and just reuse that set of feasible portfolios...  My usual
>>> rule
>>> is n-assets + 1-2k feasible portfolios.  You can get a better number e.g.
>>> from sampling theory, but this should be enough.
>>>
>>> Once you have this weights matrix rp, you only need to regenerate rp if
>>> your universe changes.
>>>
>>> Still interested in a more efficient implementation, of course, or we can
>>> work with you to see if we can find resources to work on it, e.g. from
>>> academia.
>>>
>>> Regards,
>>>
>>> Brian
>>>
>>>
>>> On 03/20/2017 05:28 PM, Kevin Dhingra wrote:
>>>
>>>> Hi Ross,
>>>>
>>>> Sure. Even though I have not profiled the bottlenecks quite in detail as
>>>> of
>>>> yet, i will give you a decent idea of the problem I am working with. I
>>>> can
>>>> have multiple indices with as much as 2000 assets with group, position
>>>> and
>>>> turnover limits (Not sure if i can increase the speed by removing
>>>> constraints and doing rejection sampling later). In order to generate a
>>>> daily possible set for the market in this case, I was playing around
>>>> with
>>>> ~4-5 thousand permutations. Also I think I will end up using the
>>>> "sample"
>>>> method because of the type of constraints we have and as you already
>>>> have
>>>> mentioned that method is the slowest (takes about 30 times the time
>>>> using
>>>> "simplex" for the same constraints). Adding box and position limit
>>>> constraints are causing it to run a bit slower (but its not a big
>>>> difference). I can always provide a more thorough analysis of the
>>>> potential
>>>> bottlenecks with a lot more detail when I have a chance to start working
>>>> on
>>>> translating it to cpp
>>>>
>>>> Thank you,
>>>>
>>>> On Mon, Mar 20, 2017 at 4:04 PM, Ross Bennett <rossbennett34 at gmail.com>
>>>> wrote:
>>>>
>>>> Kevin,
>>>>>
>>>>>
>>>>> Can you give us a sense of the number of assets in the portfolio and
>>>>> the constraints? That will help us understand where the potential
>>>>> bottlenecks are in the random portfolio generation. For example,
>>>>> generating a set of random portfolios for box and weight constraints
>>>>> if relatively fast, but adding group or position limit constraints
>>>>> makes the algorithm more complicated and slower.
>>>>>
>>>>> Thanks,
>>>>> Ross
>>>>>
>>>>>
>>>>> On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
>>>>> <kevin.dhingra at appliedacademics.com> wrote:
>>>>>
>>>>>> Brian,
>>>>>>
>>>>>> Thank you for a quick reply. I will soon be working on that problem
>>>>>> and
>>>>>> from what I have played with so far, it is unlikely that for our
>>>>>> example
>>>>>> ~2k portfolios will be enough (really hoping it would) to get a good
>>>>>>
>>>>> sense
>>>>>
>>>>>> of the feasible space and seems like I need to implement an Rcpp
>>>>>> version
>>>>>>
>>>>> of
>>>>>
>>>>>> the random portfolios function. I will be happy to collaborate and
>>>>>> share
>>>>>>
>>>>> my
>>>>>
>>>>>> code once i get a decent handle on it locally for the purposes of our
>>>>>> current project.
>>>>>>
>>>>>> Regards,
>>>>>> Kshitij Dhingra
>>>>>>
>>>>>>
>>>>>>
>>>>>> On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson
>>>>>> <brian at braverock.com
>>>>>>>
>>>>>>>
>>>>>> wrote:
>>>>>>
>>>>>> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
>>>>>>>
>>>>>>>
>>>>>>>> I have been using the random_portfolios function from the
>>>>>>>> `PortfolioAnalytics` package to simulate the range of possibilities
>>>>>>>> for return paths at each step under various portfolio constraints /
>>>>>>>> mandates for evaluating mutual fund managers. As more managers are
>>>>>>>> added to the universe, however, and more simulations are needed, the
>>>>>>>> pure R implementations get pretty heavy and hard to scale. I was
>>>>>>>> wondering if there has been any work out there thus far on
>>>>>>>> implementing any of the three random portfolio generation methods
>>>>>>>> (sample, simplex, and grid search) at a lower level, using something
>>>>>>>> like `Rcpp` to enhance the efficiency of these algorithms?
>>>>>>>>
>>>>>>>
>>>>>>> We've discussed it, but I can't say that it is terribly high on our
>>>>>>> list of priorities.
>>>>>>>
>>>>>>> In most cases, no more than 1-2k portfolios should be required to get
>>>>>>> a
>>>>>>> fair view of the feasible space given your constraints and
>>>>>>> objectives.
>>>>>>>
>>>>>>> We'd be happy to work with you if you want to craft a patch to use C
>>>>>>> or
>>>>>>> Rcpp for this.
>>>>>>>
>>>>>>> Regards,
>>>>>>>
>>>>>>> Brian
>>>>>>>
>>>>>>>
>>>>>>
>>>>>>
>>>>>> --
>>>>>> Kshitij Dhingra
>>>>>> Applied Academics LLC
>>>>>> Office: +1.917.262.0516
>>>>>> Mobile: +1.206.696.5945
>>>>>> Email: kshitij.dhingra at appliedacademics.com
>>>>>> Website: http://www.AppliedAcademics.com
>>>>>>
>>>>>>         [[alternative HTML version deleted]]
>>>>>>
>>>>>> _______________________________________________
>>>>>> R-SIG-Finance at r-project.org mailing list
>>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>>>>> -- Subscriber-posting only. If you want to post, subscribe first.
>>>>>> -- Also note that this is not the r-help list where general R
>>>>>> questions
>>>>>>
>>>>> should go.
>>>>>
>>>>>
>>>>
>>>>
>>>>
>>>
>>> --
>>> Brian G. Peterson
>>> http://braverock.com/brian/
>>> Ph: 773-459-4973
>>> IM: bgpbraverock
>>>
>>>
>>> _______________________________________________
>>> R-SIG-Finance at r-project.org mailing list
>>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>> -- Subscriber-posting only. If you want to post, subscribe first.
>>> -- Also note that this is not the r-help list where general R questions
>>> should go.
>>>
>>
>>
>>
>
>
> --
> Brian G. Peterson
> http://braverock.com/brian/
> Ph: 773-459-4973
> IM: bgpbraverock
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.


From ecjbosu at aol.com  Tue Mar 21 13:03:40 2017
From: ecjbosu at aol.com (Joe W. Byers)
Date: Tue, 21 Mar 2017 08:03:40 -0400
Subject: [R-SIG-Finance] R-SIG-Finance Digest, Vol 154, Issue 10
In-Reply-To: <mailman.17.1490094003.19640.r-sig-finance@r-project.org>
References: <mailman.17.1490094003.19640.r-sig-finance@r-project.org>
Message-ID: <d0a13699-d27e-3466-3bc6-b044f20363dd@aol.com>

On 03/21/2017 07:00 AM, r-sig-finance-request at r-project.org wrote:
> Send R-SIG-Finance mailing list submissions to
> 	r-sig-finance at r-project.org
>
> To subscribe or unsubscribe via the World Wide Web, visit
> 	https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> or, via email, send a message with subject or body 'help' to
> 	r-sig-finance-request at r-project.org
>
> You can reach the person managing the list at
> 	r-sig-finance-owner at r-project.org
>
> When replying, please edit your Subject line so it is more specific
> than "Re: Contents of R-SIG-Finance digest..."
>
>
> Today's Topics:
>
>     1.  random portfolios (Kevin Dhingra)
>     2. Re: random portfolios (Brian G. Peterson)
>     3. Re: random portfolios (Kevin Dhingra)
>     4. Re: random portfolios (Ross Bennett)
>     5. Re: random portfolios (Kevin Dhingra)
>     6. Re: random portfolios (Brian G. Peterson)
>     7. Re: random portfolios (Kevin Dhingra)
>     8. Re: random portfolios (frednovo at pipeline.com)
>     9. Re: random portfolios (Brian G. Peterson)
>
>
> ----------------------------------------------------------------------
>
> Message: 1
> Date: Mon, 20 Mar 2017 15:09:33 -0400
> From: Kevin Dhingra <kevin.dhingra at appliedacademics.com>
> To: r-sig-finance at r-project.org
> Subject: [R-SIG-Finance]  random portfolios
> Message-ID:
> 	<CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g at mail.gmail.com>
> Content-Type: text/plain; charset="UTF-8"
>
> Hello everybody,
>
> I have been using the random_portfolios function from the
> `PortfolioAnalytics` package to simulate the range of possibilities for
> return paths at each step under various portfolio constraints / mandates
> for evaluating mutual fund managers. As more managers are added to the
> universe, however, and more simulations are needed, the pure R
> implementations get pretty heavy and hard to scale. I was wondering if
> there has been any work out there thus far on implementing any of the three
> random portfolio generation methods (sample, simplex, and grid search) at a
> lower level, using something like `Rcpp` to enhance the efficiency of these
> algorithms?
>
>
> Any help/feedback is much appreciated.
>
> Thank you,
>

All,

 From a purely computing technical point, has anyone thought of spinning 
up an amazon E2 or gcloud server with R and other required software and 
packages installed?  Then running the algorithms there.  You can create 
a image of the installation, modify the server power as needed, all for 
a small charge.  I spun one up on amazon few weeks ago testing, R on 
it.  played with it for a couple of hours and then terminated it after 
saving the image.  It cost me 2 cents.  Another alternative to the 
amazon image is a docker image that is cross platform compatible.

This would allow for multi-threading on demand as well as easy memory 
expansion, so this might scale for you.

Just a side thought.

Joe


-- 
*Joe W. Byers*

	[[alternative HTML version deleted]]


From kevin.dhingra at appliedacademics.com  Tue Mar 21 13:22:14 2017
From: kevin.dhingra at appliedacademics.com (Kevin Dhingra)
Date: Tue, 21 Mar 2017 08:22:14 -0400
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <CAEESW=WX+uYNdca01rK_ocq=79-J1kPZr7c-38kPA74pFLWNmg@mail.gmail.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
	<CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
	<eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
	<CAG1eqLaMxWPv5twUo15S3JF_-gKrjrUqOaiJ-d5L05d4M=R67Q@mail.gmail.com>
	<d34e8b3b-6fdb-71bb-7ee8-6bb2a4164e10@braverock.com>
	<CAEESW=WX+uYNdca01rK_ocq=79-J1kPZr7c-38kPA74pFLWNmg@mail.gmail.com>
Message-ID: <CAG1eqLYbqg8D-wWNp_Jbj-1PgG5jKDFw3ikJNbH3OMrdOsq4nQ@mail.gmail.com>

Brian, Ross and Frednovo,

This has been extremely helpful. I think now I have a lot better
understanding of how to think about the problem at hand. Appreciate it.

Regards,
Kshitij Dhingra

On Tue, Mar 21, 2017 at 7:24 AM, Ross Bennett <rossbennett34 at gmail.com>
wrote:

> Just wanted to point out an example of what Brian mentioned for
> visualizing the feasible space with different constraint sets.
> Visualizations here
> http://rossb34.github.io/PortfolioAnalyticsPresentation2016/#22 on
> slides 22-26 and code
> https://github.com/rossb34/PortfolioAnalyticsPresentation
> 2016/blob/master/feasible_space.R
> to produce the plots.
>
> Ross
>
>
> On Tue, Mar 21, 2017 at 5:41 AM, Brian G. Peterson <brian at braverock.com>
> wrote:
> > The process you describe is pretty standard for an investment-committee
> > driven process.
> >
> > I'm going to suggest that you don't really want to change the constraints
> > that often.  For example, box constraints should be as large as your
> overall
> > investment mandate allows to give you the greatest possible room for
> > allocations.  Sector or Factor constraints likewise should be as minimal
> as
> > possible just to guarantee the degree of diversification described in
> your
> > investment mandate.
> >
> > The reason I'm suggesting this minimal constraint set is one of the
> reasons
> > we wrote the random portfolio code in the first place.  To see what I
> mean,
> > generate a set of unconstrained random portfolios (or e.g. only with a
> > full-investment constraint).  Then generate sets of constrained random
> > portfolios, adding your various constraint sets. Plot the different sets
> on
> > the same risk/return scatter plot, using different colors for each set.
> > Note how small the feasible space becomes, very quickly.
> >
> > This shrinkage of the feasible space has some good shrinkage
> properties...
> > moderate shrinkage actually decreases the possible impact of estimation
> > error in the various inputs, a little.  Large amounts of shrinkage
> (overly
> > restrictive constraints) will do the opposite, and magnify the negative
> out
> > of sample impact of estimation error.
> >
> > The academic literature mostly focuses on analytical solvers (e.g.
> > quadratic, linear, etc) and simple constraint sets.  We've cited papers
> by
> > Patrick Burns as well as papers on the simplex models in
> PortfolioAnalytics,
> > but the literature is not vast.
> >
> > Numerical solvers become important as the feasible space becomes
> non-smooth.
> > One of the things that can create a non-smooth feasible space is a
> complex,
> > overlapping constraint set.
> >
> > The rportfolios package proposed by Frederick Novomestky also seems to
> be an
> > R-only implementation, at a glance relying on truncated random binomial
> > vectors rather than truncated random uniform vectors.  I believe it will
> > have similar performance characteristics to the Burns-style random sample
> > portfolios, and it seems to support fewer constraint sets (no overlapping
> > sector, group, or factor constraints that I see).  In any case, it
> generates
> > matrices of weights that are likely compatible with the
> PortfolioAnalytics
> > random or seed portfolio inputs.  So if it works for you, that's great.
> >
> > You also discuss using rejection after generating the portfolios.  This
> is
> > the method used internally by random.portfolios to reject individual
> weights
> > if a constraint is violated.  I'll have to evaluate whether the truncdist
> > package used by rportfolios could be more efficient than the runif that
> is
> > used by the current code.  PortfolioAnalytics also allows portfolios to
> be
> > penalized in the solver, so that more complex cases can be considered, or
> > interactions between constraints and objectives.
> >
> > To answer the question of whether Rcpp will help is somewhat complex. I'm
> > confident that some of the nested loops in the generation code will be
> sped
> > up by Rcpp.  It is possible that more efficient algorithms are available
> for
> > constructing the weight vectors.  A reason that this hasn't been a huge
> > priority though is that construction of the random portfolio matrix is
> > usually not the time limiter in a large optimization: your objective
> > function is.  I think it will be possible to improve the efficiency of
> this
> > step, though it is unclear how much of an impact this should have in
> > practice to a large and complicated numerically solved portfolio
> > optimization problem.
> >
> > Regards,
> >
> > Brian
> >
> >
> >
> >
> > On 03/20/2017 07:06 PM, Kevin Dhingra wrote:
> >>
> >> Brian,
> >>
> >> Yes I think that will be a good starting point. My universe would not
> >> change a lot (I will be working with 10-15 benchmarks at a time and I
> >> guess
> >> I can generate a reusable set for each independently before running it
> >> through my main algorithm). Having said that, I envision the investment
> >> mandates/constraints changing quite a lot (both in the cross section and
> >> also over time for the same manager). I am hoping there must be a way
> >> around it using rejection sampling but have not done enough research to
> >> comment on how that solution works for such big dimensions. It will be
> >> really helpful if you could point me to any specific resources from
> >> academia for the same (Haven't been able to find much about random
> >> portfolios myself except Portfolio Analytics and Patrick Burns work on
> >> Portfolio Probe). As a side note - Do you think translating it using
> Rcpp
> >> would be time well spent or you think there must be a smarter way to get
> >> around it still using R?
> >>
> >> I really appreciate your help on this thread.
> >>
> >> Regards,
> >> Kshitij Dhingra
> >>
> >> On Mon, Mar 20, 2017 at 7:21 PM, Brian G. Peterson <brian at braverock.com
> >
> >> wrote:
> >>
> >>> For this type of problem, I would probably generate one set of random
> >>> portfolios and just reuse that set of feasible portfolios...  My usual
> >>> rule
> >>> is n-assets + 1-2k feasible portfolios.  You can get a better number
> e.g.
> >>> from sampling theory, but this should be enough.
> >>>
> >>> Once you have this weights matrix rp, you only need to regenerate rp if
> >>> your universe changes.
> >>>
> >>> Still interested in a more efficient implementation, of course, or we
> can
> >>> work with you to see if we can find resources to work on it, e.g. from
> >>> academia.
> >>>
> >>> Regards,
> >>>
> >>> Brian
> >>>
> >>>
> >>> On 03/20/2017 05:28 PM, Kevin Dhingra wrote:
> >>>
> >>>> Hi Ross,
> >>>>
> >>>> Sure. Even though I have not profiled the bottlenecks quite in detail
> as
> >>>> of
> >>>> yet, i will give you a decent idea of the problem I am working with. I
> >>>> can
> >>>> have multiple indices with as much as 2000 assets with group, position
> >>>> and
> >>>> turnover limits (Not sure if i can increase the speed by removing
> >>>> constraints and doing rejection sampling later). In order to generate
> a
> >>>> daily possible set for the market in this case, I was playing around
> >>>> with
> >>>> ~4-5 thousand permutations. Also I think I will end up using the
> >>>> "sample"
> >>>> method because of the type of constraints we have and as you already
> >>>> have
> >>>> mentioned that method is the slowest (takes about 30 times the time
> >>>> using
> >>>> "simplex" for the same constraints). Adding box and position limit
> >>>> constraints are causing it to run a bit slower (but its not a big
> >>>> difference). I can always provide a more thorough analysis of the
> >>>> potential
> >>>> bottlenecks with a lot more detail when I have a chance to start
> working
> >>>> on
> >>>> translating it to cpp
> >>>>
> >>>> Thank you,
> >>>>
> >>>> On Mon, Mar 20, 2017 at 4:04 PM, Ross Bennett <
> rossbennett34 at gmail.com>
> >>>> wrote:
> >>>>
> >>>> Kevin,
> >>>>>
> >>>>>
> >>>>> Can you give us a sense of the number of assets in the portfolio and
> >>>>> the constraints? That will help us understand where the potential
> >>>>> bottlenecks are in the random portfolio generation. For example,
> >>>>> generating a set of random portfolios for box and weight constraints
> >>>>> if relatively fast, but adding group or position limit constraints
> >>>>> makes the algorithm more complicated and slower.
> >>>>>
> >>>>> Thanks,
> >>>>> Ross
> >>>>>
> >>>>>
> >>>>> On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
> >>>>> <kevin.dhingra at appliedacademics.com> wrote:
> >>>>>
> >>>>>> Brian,
> >>>>>>
> >>>>>> Thank you for a quick reply. I will soon be working on that problem
> >>>>>> and
> >>>>>> from what I have played with so far, it is unlikely that for our
> >>>>>> example
> >>>>>> ~2k portfolios will be enough (really hoping it would) to get a good
> >>>>>>
> >>>>> sense
> >>>>>
> >>>>>> of the feasible space and seems like I need to implement an Rcpp
> >>>>>> version
> >>>>>>
> >>>>> of
> >>>>>
> >>>>>> the random portfolios function. I will be happy to collaborate and
> >>>>>> share
> >>>>>>
> >>>>> my
> >>>>>
> >>>>>> code once i get a decent handle on it locally for the purposes of
> our
> >>>>>> current project.
> >>>>>>
> >>>>>> Regards,
> >>>>>> Kshitij Dhingra
> >>>>>>
> >>>>>>
> >>>>>>
> >>>>>> On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson
> >>>>>> <brian at braverock.com
> >>>>>>>
> >>>>>>>
> >>>>>> wrote:
> >>>>>>
> >>>>>> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
> >>>>>>>
> >>>>>>>
> >>>>>>>> I have been using the random_portfolios function from the
> >>>>>>>> `PortfolioAnalytics` package to simulate the range of
> possibilities
> >>>>>>>> for return paths at each step under various portfolio constraints
> /
> >>>>>>>> mandates for evaluating mutual fund managers. As more managers are
> >>>>>>>> added to the universe, however, and more simulations are needed,
> the
> >>>>>>>> pure R implementations get pretty heavy and hard to scale. I was
> >>>>>>>> wondering if there has been any work out there thus far on
> >>>>>>>> implementing any of the three random portfolio generation methods
> >>>>>>>> (sample, simplex, and grid search) at a lower level, using
> something
> >>>>>>>> like `Rcpp` to enhance the efficiency of these algorithms?
> >>>>>>>>
> >>>>>>>
> >>>>>>> We've discussed it, but I can't say that it is terribly high on our
> >>>>>>> list of priorities.
> >>>>>>>
> >>>>>>> In most cases, no more than 1-2k portfolios should be required to
> get
> >>>>>>> a
> >>>>>>> fair view of the feasible space given your constraints and
> >>>>>>> objectives.
> >>>>>>>
> >>>>>>> We'd be happy to work with you if you want to craft a patch to use
> C
> >>>>>>> or
> >>>>>>> Rcpp for this.
> >>>>>>>
> >>>>>>> Regards,
> >>>>>>>
> >>>>>>> Brian
> >>>>>>>
> >>>>>>>
> >>>>>>
> >>>>>>
> >>>>>> --
> >>>>>> Kshitij Dhingra
> >>>>>> Applied Academics LLC
> >>>>>> Office: +1.917.262.0516
> >>>>>> Mobile: +1.206.696.5945
> >>>>>> Email: kshitij.dhingra at appliedacademics.com
> >>>>>> Website: http://www.AppliedAcademics.com
> >>>>>>
> >>>>>>         [[alternative HTML version deleted]]
> >>>>>>
> >>>>>> _______________________________________________
> >>>>>> R-SIG-Finance at r-project.org mailing list
> >>>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> >>>>>> -- Subscriber-posting only. If you want to post, subscribe first.
> >>>>>> -- Also note that this is not the r-help list where general R
> >>>>>> questions
> >>>>>>
> >>>>> should go.
> >>>>>
> >>>>>
> >>>>
> >>>>
> >>>>
> >>>
> >>> --
> >>> Brian G. Peterson
> >>> http://braverock.com/brian/
> >>> Ph: 773-459-4973
> >>> IM: bgpbraverock
> >>>
> >>>
> >>> _______________________________________________
> >>> R-SIG-Finance at r-project.org mailing list
> >>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> >>> -- Subscriber-posting only. If you want to post, subscribe first.
> >>> -- Also note that this is not the r-help list where general R questions
> >>> should go.
> >>>
> >>
> >>
> >>
> >
> >
> > --
> > Brian G. Peterson
> > http://braverock.com/brian/
> > Ph: 773-459-4973
> > IM: bgpbraverock
> >
> > _______________________________________________
> > R-SIG-Finance at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> > -- Subscriber-posting only. If you want to post, subscribe first.
> > -- Also note that this is not the r-help list where general R questions
> > should go.
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>



-- 
Kshitij Dhingra
Applied Academics LLC
Office: +1.917.262.0516
Mobile: +1.206.696.5945
Email: kshitij.dhingra at appliedacademics.com
Website: http://www.AppliedAcademics.com

	[[alternative HTML version deleted]]


From kevin.dhingra at appliedacademics.com  Tue Mar 21 13:27:35 2017
From: kevin.dhingra at appliedacademics.com (Kevin Dhingra)
Date: Tue, 21 Mar 2017 08:27:35 -0400
Subject: [R-SIG-Finance] R-SIG-Finance Digest, Vol 154, Issue 10
In-Reply-To: <d0a13699-d27e-3466-3bc6-b044f20363dd@aol.com>
References: <mailman.17.1490094003.19640.r-sig-finance@r-project.org>
	<d0a13699-d27e-3466-3bc6-b044f20363dd@aol.com>
Message-ID: <CAG1eqLZ5-3G+xXBNzS-9Va67VFXcaR3f0L3JRmJw67it4f=vEw@mail.gmail.com>

Hi Joe,

Sure that is a valid point. We spin up EC2 instances all the time and it
works well with R. For this particular problem, we are working with a
proprietary algorithm that we do not feel comfortable with putting on AWS
as the client needs to have access to the server we work on for providing
their in house data on a real time basis and potentially run our
application without looking at our code. Not an expert on cloud computing
services but my understanding is that such an architecture is not possible
via AWS.

Regards,
Kshitij Dhingra


On Tue, Mar 21, 2017 at 8:03 AM, Joe W. Byers via R-SIG-Finance <
r-sig-finance at r-project.org> wrote:

> On 03/21/2017 07:00 AM, r-sig-finance-request at r-project.org wrote:
> > Send R-SIG-Finance mailing list submissions to
> >       r-sig-finance at r-project.org
> >
> > To subscribe or unsubscribe via the World Wide Web, visit
> >       https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> > or, via email, send a message with subject or body 'help' to
> >       r-sig-finance-request at r-project.org
> >
> > You can reach the person managing the list at
> >       r-sig-finance-owner at r-project.org
> >
> > When replying, please edit your Subject line so it is more specific
> > than "Re: Contents of R-SIG-Finance digest..."
> >
> >
> > Today's Topics:
> >
> >     1.  random portfolios (Kevin Dhingra)
> >     2. Re: random portfolios (Brian G. Peterson)
> >     3. Re: random portfolios (Kevin Dhingra)
> >     4. Re: random portfolios (Ross Bennett)
> >     5. Re: random portfolios (Kevin Dhingra)
> >     6. Re: random portfolios (Brian G. Peterson)
> >     7. Re: random portfolios (Kevin Dhingra)
> >     8. Re: random portfolios (frednovo at pipeline.com)
> >     9. Re: random portfolios (Brian G. Peterson)
> >
> >
> > ----------------------------------------------------------------------
> >
> > Message: 1
> > Date: Mon, 20 Mar 2017 15:09:33 -0400
> > From: Kevin Dhingra <kevin.dhingra at appliedacademics.com>
> > To: r-sig-finance at r-project.org
> > Subject: [R-SIG-Finance]  random portfolios
> > Message-ID:
> >       <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g at mail.
> gmail.com>
> > Content-Type: text/plain; charset="UTF-8"
> >
> > Hello everybody,
> >
> > I have been using the random_portfolios function from the
> > `PortfolioAnalytics` package to simulate the range of possibilities for
> > return paths at each step under various portfolio constraints / mandates
> > for evaluating mutual fund managers. As more managers are added to the
> > universe, however, and more simulations are needed, the pure R
> > implementations get pretty heavy and hard to scale. I was wondering if
> > there has been any work out there thus far on implementing any of the
> three
> > random portfolio generation methods (sample, simplex, and grid search)
> at a
> > lower level, using something like `Rcpp` to enhance the efficiency of
> these
> > algorithms?
> >
> >
> > Any help/feedback is much appreciated.
> >
> > Thank you,
> >
>
> All,
>
>  From a purely computing technical point, has anyone thought of spinning
> up an amazon E2 or gcloud server with R and other required software and
> packages installed?  Then running the algorithms there.  You can create
> a image of the installation, modify the server power as needed, all for
> a small charge.  I spun one up on amazon few weeks ago testing, R on
> it.  played with it for a couple of hours and then terminated it after
> saving the image.  It cost me 2 cents.  Another alternative to the
> amazon image is a docker image that is cross platform compatible.
>
> This would allow for multi-threading on demand as well as easy memory
> expansion, so this might scale for you.
>
> Just a side thought.
>
> Joe
>
>
> --
> *Joe W. Byers*
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>



-- 
Kshitij Dhingra
Applied Academics LLC
Office: +1.917.262.0516
Mobile: +1.206.696.5945
Email: kshitij.dhingra at appliedacademics.com
Website: http://www.AppliedAcademics.com

	[[alternative HTML version deleted]]


From ecjbosu at aol.com  Tue Mar 21 13:36:11 2017
From: ecjbosu at aol.com (Joe W. Byers)
Date: Tue, 21 Mar 2017 08:36:11 -0400
Subject: [R-SIG-Finance] R-SIG-Finance Digest, Vol 154, Issue 10
In-Reply-To: <CAG1eqLZ5-3G+xXBNzS-9Va67VFXcaR3f0L3JRmJw67it4f=vEw@mail.gmail.com>
References: <mailman.17.1490094003.19640.r-sig-finance@r-project.org>
	<d0a13699-d27e-3466-3bc6-b044f20363dd@aol.com>
	<CAG1eqLZ5-3G+xXBNzS-9Va67VFXcaR3f0L3JRmJw67it4f=vEw@mail.gmail.com>
Message-ID: <6474d169-0b74-73e8-9965-fd92ba33130d@aol.com>

Kshitij,

I am not an expert either, just digging in to the cloud.  But AWS does 
have security built in to it. You can select a linux server flavor, add 
users, create a S2 data buckets.  Then generate keys for accessing the 
server and a buckets that can be shared with the client.  The R code 
would be a questions, but if a configured script or web interface is 
built, the client would not see the code.

I am not sure if this would work.  This is kinda off topic for this 
list.  If you or the list want, we can take it offline.

Joe

On 03/21/2017 08:27 AM, Kevin Dhingra wrote:
> Hi Joe,
>
> Sure that is a valid point. We spin up EC2 instances all the time and 
> it works well with R. For this particular problem, we are working with 
> a proprietary algorithm that we do not feel comfortable with putting 
> on AWS as the client needs to have access to the server we work on for 
> providing their in house data on a real time basis and potentially run 
> our application without looking at our code. Not an expert on cloud 
> computing services but my understanding is that such an architecture 
> is not possible via AWS.
>
> Regards,
> Kshitij Dhingra
>
>
> On Tue, Mar 21, 2017 at 8:03 AM, Joe W. Byers via R-SIG-Finance 
> <r-sig-finance at r-project.org <mailto:r-sig-finance at r-project.org>> wrote:
>
>     On 03/21/2017 07:00 AM, r-sig-finance-request at r-project.org
>     <mailto:r-sig-finance-request at r-project.org> wrote:
>     > Send R-SIG-Finance mailing list submissions to
>     > r-sig-finance at r-project.org <mailto:r-sig-finance at r-project.org>
>     >
>     > To subscribe or unsubscribe via the World Wide Web, visit
>     > https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>     <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>     > or, via email, send a message with subject or body 'help' to
>     > r-sig-finance-request at r-project.org
>     <mailto:r-sig-finance-request at r-project.org>
>     >
>     > You can reach the person managing the list at
>     > r-sig-finance-owner at r-project.org
>     <mailto:r-sig-finance-owner at r-project.org>
>     >
>     > When replying, please edit your Subject line so it is more specific
>     > than "Re: Contents of R-SIG-Finance digest..."
>     >
>     >
>     > Today's Topics:
>     >
>     >     1.  random portfolios (Kevin Dhingra)
>     >     2. Re: random portfolios (Brian G. Peterson)
>     >     3. Re: random portfolios (Kevin Dhingra)
>     >     4. Re: random portfolios (Ross Bennett)
>     >     5. Re: random portfolios (Kevin Dhingra)
>     >     6. Re: random portfolios (Brian G. Peterson)
>     >     7. Re: random portfolios (Kevin Dhingra)
>     >     8. Re: random portfolios (frednovo at pipeline.com
>     <mailto:frednovo at pipeline.com>)
>     >     9. Re: random portfolios (Brian G. Peterson)
>     >
>     >
>     >
>     ----------------------------------------------------------------------
>     >
>     > Message: 1
>     > Date: Mon, 20 Mar 2017 15:09:33 -0400
>     > From: Kevin Dhingra <kevin.dhingra at appliedacademics.com
>     <mailto:kevin.dhingra at appliedacademics.com>>
>     > To: r-sig-finance at r-project.org <mailto:r-sig-finance at r-project.org>
>     > Subject: [R-SIG-Finance]  random portfolios
>     > Message-ID:
>     >     
>      <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g at mail.gmail.com
>     <mailto:CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g at mail.gmail.com>>
>     > Content-Type: text/plain; charset="UTF-8"
>     >
>     > Hello everybody,
>     >
>     > I have been using the random_portfolios function from the
>     > `PortfolioAnalytics` package to simulate the range of
>     possibilities for
>     > return paths at each step under various portfolio constraints /
>     mandates
>     > for evaluating mutual fund managers. As more managers are added
>     to the
>     > universe, however, and more simulations are needed, the pure R
>     > implementations get pretty heavy and hard to scale. I was
>     wondering if
>     > there has been any work out there thus far on implementing any
>     of the three
>     > random portfolio generation methods (sample, simplex, and grid
>     search) at a
>     > lower level, using something like `Rcpp` to enhance the
>     efficiency of these
>     > algorithms?
>     >
>     >
>     > Any help/feedback is much appreciated.
>     >
>     > Thank you,
>     >
>
>     All,
>
>      From a purely computing technical point, has anyone thought of
>     spinning
>     up an amazon E2 or gcloud server with R and other required
>     software and
>     packages installed?  Then running the algorithms there. You can create
>     a image of the installation, modify the server power as needed,
>     all for
>     a small charge.  I spun one up on amazon few weeks ago testing, R on
>     it.  played with it for a couple of hours and then terminated it after
>     saving the image.  It cost me 2 cents.  Another alternative to the
>     amazon image is a docker image that is cross platform compatible.
>
>     This would allow for multi-threading on demand as well as easy memory
>     expansion, so this might scale for you.
>
>     Just a side thought.
>
>     Joe
>
>
>     --
>     *Joe W. Byers*
>
>             [[alternative HTML version deleted]]
>
>     _______________________________________________
>     R-SIG-Finance at r-project.org <mailto:R-SIG-Finance at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>     <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>     -- Subscriber-posting only. If you want to post, subscribe first.
>     -- Also note that this is not the r-help list where general R
>     questions should go.
>
>
>
>
> -- 
> Kshitij Dhingra
> Applied Academics LLC
> Office: +1.917.262.0516
> Mobile: +1.206.696.5945
> Email: kshitij.dhingra at appliedacademics.com 
> <mailto:kshitij.dhingra at appliedacademics.com>
> Website: http://www.AppliedAcademics.com


-- 
*Joe W. Byers*

	[[alternative HTML version deleted]]


From josh.m.ulrich at gmail.com  Tue Mar 21 18:13:00 2017
From: josh.m.ulrich at gmail.com (Joshua Ulrich)
Date: Tue, 21 Mar 2017 12:13:00 -0500
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <d34e8b3b-6fdb-71bb-7ee8-6bb2a4164e10@braverock.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
	<CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
	<eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
	<CAG1eqLaMxWPv5twUo15S3JF_-gKrjrUqOaiJ-d5L05d4M=R67Q@mail.gmail.com>
	<d34e8b3b-6fdb-71bb-7ee8-6bb2a4164e10@braverock.com>
Message-ID: <CAPPM_gRvjdJkByyRLRnzQ0_q1+dHVMq57ZVeFmGLyBUOjZRCOA@mail.gmail.com>

On Tue, Mar 21, 2017 at 5:41 AM, Brian G. Peterson <brian at braverock.com> wrote:
>
<snip>
> To answer the question of whether Rcpp will help is somewhat complex. I'm
> confident that some of the nested loops in the generation code will be sped
> up by Rcpp.  It is possible that more efficient algorithms are available for
> constructing the weight vectors.  A reason that this hasn't been a huge
> priority though is that construction of the random portfolio matrix is
> usually not the time limiter in a large optimization: your objective
> function is.  I think it will be possible to improve the efficiency of this
> step, though it is unclear how much of an impact this should have in
> practice to a large and complicated numerically solved portfolio
> optimization problem.
>
Brian has hinted at this, but I want to say it explicitly.   Whether
or not moving to compiled code is worth it is mostly an empirical
question.  And it's difficult to do more that speculate, unless you
have profiling data.  So I would strongly encourage you to profile
your optimization before you change any code.  I would be happy to
help review the profiling output.

> Regards,
>
> Brian
>
>
<snip>
>
>
> --
> Brian G. Peterson
> http://braverock.com/brian/
> Ph: 773-459-4973
> IM: bgpbraverock
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.



-- 
Joshua Ulrich  |  about.me/joshuaulrich
FOSS Trading  |  www.fosstrading.com
R/Finance 2017 | www.rinfinance.com


From joshua.segal at gmail.com  Wed Mar 22 20:54:44 2017
From: joshua.segal at gmail.com (Josh Segal)
Date: Wed, 22 Mar 2017 15:54:44 -0400
Subject: [R-SIG-Finance] Simulating paths in rmgarch
Message-ID: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>

Hi everyone,

I'm trying to use the rmgarch package to estimate a multivariate GARCH
model and then use those parameters to simulate paths forward.  I've gotten
as far as creating a goGARCHsim object (for example), but can't figure out
how to access the simulated returns.  I've looked through all the methods
described in the documentation (page 58) but don't see anything relevant.
I believe I am able to do this in the univariate case with rugarch - is it
not possible in rmgarch?

Thanks for your help!

	[[alternative HTML version deleted]]


From alexios at 4dscape.com  Wed Mar 22 21:06:36 2017
From: alexios at 4dscape.com (alexios galanos)
Date: Wed, 22 Mar 2017 15:06:36 -0500
Subject: [R-SIG-Finance] Simulating paths in rmgarch
In-Reply-To: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
References: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
Message-ID: <07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>

library(rmgarch)
data("dji30ret")
spec<-gogarchspec(mean.model=list(model="AR"),ica = "radical")
fit=gogarchfit(spec,dji30ret[,1:5])
sim=gogarchsim(fit,n.sim = 1000,m.sim=1,startMethod = "sample",rseed = 10)

head(sim at msim$seriesSim[[1]])
str(sim at msim)

There are lots of examples and demos in the /inst/rmgarch.tests/ folder 
of the source package.

Alexios

On 3/22/2017 2:54 PM, Josh Segal wrote:
> Hi everyone,
>
> I'm trying to use the rmgarch package to estimate a multivariate GARCH
> model and then use those parameters to simulate paths forward.  I've gotten
> as far as creating a goGARCHsim object (for example), but can't figure out
> how to access the simulated returns.  I've looked through all the methods
> described in the documentation (page 58) but don't see anything relevant.
> I believe I am able to do this in the univariate case with rugarch - is it
> not possible in rmgarch?
>
> Thanks for your help!
>
> 	[[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions should go.
>


From joshua.segal at gmail.com  Fri Mar 24 19:42:47 2017
From: joshua.segal at gmail.com (Josh Segal)
Date: Fri, 24 Mar 2017 14:42:47 -0400
Subject: [R-SIG-Finance] Simulating paths in rmgarch
In-Reply-To: <07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>
References: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
	<07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>
Message-ID: <CAHRBD=ZjU52svcevtGJvKsjhSn4dxuz9uNb2Y00ZO_ggLG+PbA@mail.gmail.com>

Alexios,

Thanks again for your help.
I'm getting some counterintuitive results with the seriesSim output.  When
I run your exact example above and then compute cor(sim at msim$seriesSim[[1]]),
I get a correlation matrix that has non-diagonal values close to zero
(ranging from -0.10 to 0.08).
When I measure the correlation of the original data (cor(dji30ret[,1:5])) I
get values from 0.33 to 0.66.
Shouldn't the simulation demonstrate higher unconditional correlations?  Am
I misunderstanding something about the package, or does this indicate a
problem?

Thanks,
Josh

On Wed, Mar 22, 2017 at 4:06 PM, alexios galanos <alexios at 4dscape.com>
wrote:

> library(rmgarch)
> data("dji30ret")
> spec<-gogarchspec(mean.model=list(model="AR"),ica = "radical")
> fit=gogarchfit(spec,dji30ret[,1:5])
> sim=gogarchsim(fit,n.sim = 1000,m.sim=1,startMethod = "sample",rseed = 10)
>
> head(sim at msim$seriesSim[[1]])
> str(sim at msim)
>
> There are lots of examples and demos in the /inst/rmgarch.tests/ folder of
> the source package.
>
> Alexios
>
>
> On 3/22/2017 2:54 PM, Josh Segal wrote:
>
>> Hi everyone,
>>
>> I'm trying to use the rmgarch package to estimate a multivariate GARCH
>> model and then use those parameters to simulate paths forward.  I've
>> gotten
>> as far as creating a goGARCHsim object (for example), but can't figure out
>> how to access the simulated returns.  I've looked through all the methods
>> described in the documentation (page 58) but don't see anything relevant.
>> I believe I am able to do this in the univariate case with rugarch - is it
>> not possible in rmgarch?
>>
>> Thanks for your help!
>>
>>         [[alternative HTML version deleted]]
>>
>> _______________________________________________
>> R-SIG-Finance at r-project.org mailing list
>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> -- Subscriber-posting only. If you want to post, subscribe first.
>> -- Also note that this is not the r-help list where general R questions
>> should go.
>>
>>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>

	[[alternative HTML version deleted]]


From alexios at 4dscape.com  Fri Mar 24 20:43:10 2017
From: alexios at 4dscape.com (alexios galanos)
Date: Fri, 24 Mar 2017 14:43:10 -0500
Subject: [R-SIG-Finance] Simulating paths in rmgarch
In-Reply-To: <CAHRBD=ZjU52svcevtGJvKsjhSn4dxuz9uNb2Y00ZO_ggLG+PbA@mail.gmail.com>
References: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
	<07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>
	<CAHRBD=ZjU52svcevtGJvKsjhSn4dxuz9uNb2Y00ZO_ggLG+PbA@mail.gmail.com>
Message-ID: <3de912c5-3ff7-b746-d4f7-6d0068f2ed8b@4dscape.com>

Try using model="VAR" instead of "AR"....will check to see if something
is amiss otherwise.

A.

On 24/03/2017 13:42, Josh Segal wrote:
> Alexios,
>
> Thanks again for your help.
> I'm getting some counterintuitive results with the seriesSim output. 
> When I run your exact example above and then compute
> cor(sim at msim$seriesSim[[1]]), I get a correlation matrix that has
> non-diagonal values close to zero (ranging from -0.10 to 0.08).  
> When I measure the correlation of the original data
> (cor(dji30ret[,1:5])) I get values from 0.33 to 0.66.
> Shouldn't the simulation demonstrate higher unconditional
> correlations?  Am I misunderstanding something about the package, or
> does this indicate a problem?
>
> Thanks,
> Josh
>
> On Wed, Mar 22, 2017 at 4:06 PM, alexios galanos <alexios at 4dscape.com
> <mailto:alexios at 4dscape.com>> wrote:
>
>     library(rmgarch)
>     data("dji30ret")
>     spec<-gogarchspec(mean.model=list(model="AR"),ica = "radical")
>     fit=gogarchfit(spec,dji30ret[,1:5])
>     sim=gogarchsim(fit,n.sim = 1000,m.sim=1,startMethod =
>     "sample",rseed = 10)
>
>     head(sim at msim$seriesSim[[1]])
>     str(sim at msim)
>
>     There are lots of examples and demos in the /inst/rmgarch.tests/
>     folder of the source package.
>
>     Alexios
>
>
>     On 3/22/2017 2:54 PM, Josh Segal wrote:
>
>         Hi everyone,
>
>         I'm trying to use the rmgarch package to estimate a
>         multivariate GARCH
>         model and then use those parameters to simulate paths
>         forward.  I've gotten
>         as far as creating a goGARCHsim object (for example), but
>         can't figure out
>         how to access the simulated returns.  I've looked through all
>         the methods
>         described in the documentation (page 58) but don't see
>         anything relevant.
>         I believe I am able to do this in the univariate case with
>         rugarch - is it
>         not possible in rmgarch?
>
>         Thanks for your help!
>
>                 [[alternative HTML version deleted]]
>
>         _______________________________________________
>         R-SIG-Finance at r-project.org
>         <mailto:R-SIG-Finance at r-project.org> mailing list
>         https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>         -- Subscriber-posting only. If you want to post, subscribe first.
>         -- Also note that this is not the r-help list where general R
>         questions should go.
>
>
>     _______________________________________________
>     R-SIG-Finance at r-project.org <mailto:R-SIG-Finance at r-project.org>
>     mailing list
>     https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>     <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>     -- Subscriber-posting only. If you want to post, subscribe first.
>     -- Also note that this is not the r-help list where general R
>     questions should go.
>
>


From Marcelo.Cajias at patrizia.ag  Fri Mar 24 21:15:17 2017
From: Marcelo.Cajias at patrizia.ag (Cajias Marcelo)
Date: Fri, 24 Mar 2017 20:15:17 +0000
Subject: [R-SIG-Finance] Outsorcing R estimations
Message-ID: <944DC999AF40954B830ED6D61D2EFB654B080D7E@REZ01SR0204.patrizia.ag>

Dear colleges,

my research department is working with big data and the capability of our local computers is close to the end (20 GB RAM). We aim therefore to implement a cloud/parallel solution.
Do you have any experiences or recommendation for outsourcing R-calculations in the cloud/parallel computing?
The products in the internet are not really informative or quite confusing.
We aim at enhancing the speed of our R-codes without any constraints regarding RAM.

Thanks

Marcelo

PATRIZIA Immobilien AG | Research



	[[alternative HTML version deleted]]


From thomas.fuller at coherentlogic.com  Fri Mar 24 21:24:24 2017
From: thomas.fuller at coherentlogic.com (Thomas Fuller)
Date: Fri, 24 Mar 2017 16:24:24 -0400
Subject: [R-SIG-Finance] Outsorcing R estimations
In-Reply-To: <944DC999AF40954B830ED6D61D2EFB654B080D7E@REZ01SR0204.patrizia.ag>
References: <944DC999AF40954B830ED6D61D2EFB654B080D7E@REZ01SR0204.patrizia.ag>
Message-ID: <CAM0JZ3nrhD1CKO3gJN-UsOGjAqVW2QjUyijB3exRdNMq5XPeXA@mail.gmail.com>

Look at Apache Spark and SparkR.

http://spark.apache.org/docs/latest/sparkr.html

Tom

On Fri, Mar 24, 2017 at 4:15 PM, Cajias Marcelo <Marcelo.Cajias at patrizia.ag>
wrote:

> Dear colleges,
>
> my research department is working with big data and the capability of our
> local computers is close to the end (20 GB RAM). We aim therefore to
> implement a cloud/parallel solution.
> Do you have any experiences or recommendation for outsourcing
> R-calculations in the cloud/parallel computing?
> The products in the internet are not really informative or quite confusing.
> We aim at enhancing the speed of our R-codes without any constraints
> regarding RAM.
>
> Thanks
>
> Marcelo
>
> PATRIZIA Immobilien AG | Research
>
>
>
>         [[alternative HTML version deleted]]
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>



-- 
Tom
+1.312.694.3313

	[[alternative HTML version deleted]]


From joshua.segal at gmail.com  Fri Mar 24 21:40:34 2017
From: joshua.segal at gmail.com (Josh Segal)
Date: Fri, 24 Mar 2017 16:40:34 -0400
Subject: [R-SIG-Finance] Simulating paths in rmgarch
In-Reply-To: <3de912c5-3ff7-b746-d4f7-6d0068f2ed8b@4dscape.com>
References: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
	<07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>
	<CAHRBD=ZjU52svcevtGJvKsjhSn4dxuz9uNb2Y00ZO_ggLG+PbA@mail.gmail.com>
	<3de912c5-3ff7-b746-d4f7-6d0068f2ed8b@4dscape.com>
Message-ID: <CAHRBD=Y4J+utGpd+f1iY_12LWMaFHhy3oB4pZAGjhCsmEWvQLg@mail.gmail.com>

VAR seems ok, while AR and constant are not

Should I only use VAR with GOGARCH?

On Fri, Mar 24, 2017 at 3:43 PM, alexios galanos <alexios at 4dscape.com>
wrote:

> Try using model="VAR" instead of "AR"....will check to see if something
> is amiss otherwise.
>
> A.
>
> On 24/03/2017 13:42, Josh Segal wrote:
> > Alexios,
> >
> > Thanks again for your help.
> > I'm getting some counterintuitive results with the seriesSim output.
> > When I run your exact example above and then compute
> > cor(sim at msim$seriesSim[[1]]), I get a correlation matrix that has
> > non-diagonal values close to zero (ranging from -0.10 to 0.08).
> > When I measure the correlation of the original data
> > (cor(dji30ret[,1:5])) I get values from 0.33 to 0.66.
> > Shouldn't the simulation demonstrate higher unconditional
> > correlations?  Am I misunderstanding something about the package, or
> > does this indicate a problem?
> >
> > Thanks,
> > Josh
> >
> > On Wed, Mar 22, 2017 at 4:06 PM, alexios galanos <alexios at 4dscape.com
> > <mailto:alexios at 4dscape.com>> wrote:
> >
> >     library(rmgarch)
> >     data("dji30ret")
> >     spec<-gogarchspec(mean.model=list(model="AR"),ica = "radical")
> >     fit=gogarchfit(spec,dji30ret[,1:5])
> >     sim=gogarchsim(fit,n.sim = 1000,m.sim=1,startMethod =
> >     "sample",rseed = 10)
> >
> >     head(sim at msim$seriesSim[[1]])
> >     str(sim at msim)
> >
> >     There are lots of examples and demos in the /inst/rmgarch.tests/
> >     folder of the source package.
> >
> >     Alexios
> >
> >
> >     On 3/22/2017 2:54 PM, Josh Segal wrote:
> >
> >         Hi everyone,
> >
> >         I'm trying to use the rmgarch package to estimate a
> >         multivariate GARCH
> >         model and then use those parameters to simulate paths
> >         forward.  I've gotten
> >         as far as creating a goGARCHsim object (for example), but
> >         can't figure out
> >         how to access the simulated returns.  I've looked through all
> >         the methods
> >         described in the documentation (page 58) but don't see
> >         anything relevant.
> >         I believe I am able to do this in the univariate case with
> >         rugarch - is it
> >         not possible in rmgarch?
> >
> >         Thanks for your help!
> >
> >                 [[alternative HTML version deleted]]
> >
> >         _______________________________________________
> >         R-SIG-Finance at r-project.org
> >         <mailto:R-SIG-Finance at r-project.org> mailing list
> >         https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> >         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
> >         -- Subscriber-posting only. If you want to post, subscribe first.
> >         -- Also note that this is not the r-help list where general R
> >         questions should go.
> >
> >
> >     _______________________________________________
> >     R-SIG-Finance at r-project.org <mailto:R-SIG-Finance at r-project.org>
> >     mailing list
> >     https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> >     <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
> >     -- Subscriber-posting only. If you want to post, subscribe first.
> >     -- Also note that this is not the r-help list where general R
> >     questions should go.
> >
> >
>
>

	[[alternative HTML version deleted]]


From alexios at 4dscape.com  Fri Mar 24 22:17:27 2017
From: alexios at 4dscape.com (Alexios Ghalanos)
Date: Fri, 24 Mar 2017 16:17:27 -0500
Subject: [R-SIG-Finance] Simulating paths in rmgarch
In-Reply-To: <CAHRBD=Y4J+utGpd+f1iY_12LWMaFHhy3oB4pZAGjhCsmEWvQLg@mail.gmail.com>
References: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
	<07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>
	<CAHRBD=ZjU52svcevtGJvKsjhSn4dxuz9uNb2Y00ZO_ggLG+PbA@mail.gmail.com>
	<3de912c5-3ff7-b746-d4f7-6d0068f2ed8b@4dscape.com>
	<CAHRBD=Y4J+utGpd+f1iY_12LWMaFHhy3oB4pZAGjhCsmEWvQLg@mail.gmail.com>
Message-ID: <6614826B-11AF-4691-A5EF-398FD26EF0C6@4dscape.com>

Yes...will check this weekend to see whether something may have gone amiss in the AR/Constant simulation. Check my bitbucket repo by next week to see if any changes were committed and reinstall from there if so.


Alexios

> On Mar 24, 2017, at 3:40 PM, Josh Segal <joshua.segal at gmail.com> wrote:
> 
> VAR seems ok, while AR and constant are not
> 
> Should I only use VAR with GOGARCH?
> 
>> On Fri, Mar 24, 2017 at 3:43 PM, alexios galanos <alexios at 4dscape.com> wrote:
>> Try using model="VAR" instead of "AR"....will check to see if something
>> is amiss otherwise.
>> 
>> A.
>> 
>> On 24/03/2017 13:42, Josh Segal wrote:
>> > Alexios,
>> >
>> > Thanks again for your help.
>> > I'm getting some counterintuitive results with the seriesSim output.
>> > When I run your exact example above and then compute
>> > cor(sim at msim$seriesSim[[1]]), I get a correlation matrix that has
>> > non-diagonal values close to zero (ranging from -0.10 to 0.08).
>> > When I measure the correlation of the original data
>> > (cor(dji30ret[,1:5])) I get values from 0.33 to 0.66.
>> > Shouldn't the simulation demonstrate higher unconditional
>> > correlations?  Am I misunderstanding something about the package, or
>> > does this indicate a problem?
>> >
>> > Thanks,
>> > Josh
>> >
>> > On Wed, Mar 22, 2017 at 4:06 PM, alexios galanos <alexios at 4dscape.com
>> > <mailto:alexios at 4dscape.com>> wrote:
>> >
>> >     library(rmgarch)
>> >     data("dji30ret")
>> >     spec<-gogarchspec(mean.model=list(model="AR"),ica = "radical")
>> >     fit=gogarchfit(spec,dji30ret[,1:5])
>> >     sim=gogarchsim(fit,n.sim = 1000,m.sim=1,startMethod =
>> >     "sample",rseed = 10)
>> >
>> >     head(sim at msim$seriesSim[[1]])
>> >     str(sim at msim)
>> >
>> >     There are lots of examples and demos in the /inst/rmgarch.tests/
>> >     folder of the source package.
>> >
>> >     Alexios
>> >
>> >
>> >     On 3/22/2017 2:54 PM, Josh Segal wrote:
>> >
>> >         Hi everyone,
>> >
>> >         I'm trying to use the rmgarch package to estimate a
>> >         multivariate GARCH
>> >         model and then use those parameters to simulate paths
>> >         forward.  I've gotten
>> >         as far as creating a goGARCHsim object (for example), but
>> >         can't figure out
>> >         how to access the simulated returns.  I've looked through all
>> >         the methods
>> >         described in the documentation (page 58) but don't see
>> >         anything relevant.
>> >         I believe I am able to do this in the univariate case with
>> >         rugarch - is it
>> >         not possible in rmgarch?
>> >
>> >         Thanks for your help!
>> >
>> >                 [[alternative HTML version deleted]]
>> >
>> >         _______________________________________________
>> >         R-SIG-Finance at r-project.org
>> >         <mailto:R-SIG-Finance at r-project.org> mailing list
>> >         https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> >         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>> >         -- Subscriber-posting only. If you want to post, subscribe first.
>> >         -- Also note that this is not the r-help list where general R
>> >         questions should go.
>> >
>> >
>> >     _______________________________________________
>> >     R-SIG-Finance at r-project.org <mailto:R-SIG-Finance at r-project.org>
>> >     mailing list
>> >     https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> >     <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>> >     -- Subscriber-posting only. If you want to post, subscribe first.
>> >     -- Also note that this is not the r-help list where general R
>> >     questions should go.
>> >
>> >
>> 
> 

	[[alternative HTML version deleted]]


From joshua.segal at gmail.com  Fri Mar 24 22:55:23 2017
From: joshua.segal at gmail.com (Josh Segal)
Date: Fri, 24 Mar 2017 17:55:23 -0400
Subject: [R-SIG-Finance] Simulating paths in rmgarch
In-Reply-To: <6614826B-11AF-4691-A5EF-398FD26EF0C6@4dscape.com>
References: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
	<07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>
	<CAHRBD=ZjU52svcevtGJvKsjhSn4dxuz9uNb2Y00ZO_ggLG+PbA@mail.gmail.com>
	<3de912c5-3ff7-b746-d4f7-6d0068f2ed8b@4dscape.com>
	<CAHRBD=Y4J+utGpd+f1iY_12LWMaFHhy3oB4pZAGjhCsmEWvQLg@mail.gmail.com>
	<6614826B-11AF-4691-A5EF-398FD26EF0C6@4dscape.com>
Message-ID: <CAHRBD=a0G=CdweMCccZF7ARVLL7hZrvhwFjHBMucSDPVXYDvFg@mail.gmail.com>

Will do, thanks again!

On Fri, Mar 24, 2017 at 5:17 PM, Alexios Ghalanos <alexios at 4dscape.com>
wrote:

> Yes...will check this weekend to see whether something may have gone amiss
> in the AR/Constant simulation. Check my bitbucket repo by next week to see
> if any changes were committed and reinstall from there if so.
>
>
> Alexios
>
> On Mar 24, 2017, at 3:40 PM, Josh Segal <joshua.segal at gmail.com> wrote:
>
> VAR seems ok, while AR and constant are not
>
> Should I only use VAR with GOGARCH?
>
> On Fri, Mar 24, 2017 at 3:43 PM, alexios galanos <alexios at 4dscape.com>
> wrote:
>
>> Try using model="VAR" instead of "AR"....will check to see if something
>> is amiss otherwise.
>>
>> A.
>>
>> On 24/03/2017 13:42, Josh Segal wrote:
>> > Alexios,
>> >
>> > Thanks again for your help.
>> > I'm getting some counterintuitive results with the seriesSim output.
>> > When I run your exact example above and then compute
>> > cor(sim at msim$seriesSim[[1]]), I get a correlation matrix that has
>> > non-diagonal values close to zero (ranging from -0.10 to 0.08).
>> > When I measure the correlation of the original data
>> > (cor(dji30ret[,1:5])) I get values from 0.33 to 0.66.
>> > Shouldn't the simulation demonstrate higher unconditional
>> > correlations?  Am I misunderstanding something about the package, or
>> > does this indicate a problem?
>> >
>> > Thanks,
>> > Josh
>> >
>> > On Wed, Mar 22, 2017 at 4:06 PM, alexios galanos <alexios at 4dscape.com
>> > <mailto:alexios at 4dscape.com>> wrote:
>> >
>> >     library(rmgarch)
>> >     data("dji30ret")
>> >     spec<-gogarchspec(mean.model=list(model="AR"),ica = "radical")
>> >     fit=gogarchfit(spec,dji30ret[,1:5])
>> >     sim=gogarchsim(fit,n.sim = 1000,m.sim=1,startMethod =
>> >     "sample",rseed = 10)
>> >
>> >     head(sim at msim$seriesSim[[1]])
>> >     str(sim at msim)
>> >
>> >     There are lots of examples and demos in the /inst/rmgarch.tests/
>> >     folder of the source package.
>> >
>> >     Alexios
>> >
>> >
>> >     On 3/22/2017 2:54 PM, Josh Segal wrote:
>> >
>> >         Hi everyone,
>> >
>> >         I'm trying to use the rmgarch package to estimate a
>> >         multivariate GARCH
>> >         model and then use those parameters to simulate paths
>> >         forward.  I've gotten
>> >         as far as creating a goGARCHsim object (for example), but
>> >         can't figure out
>> >         how to access the simulated returns.  I've looked through all
>> >         the methods
>> >         described in the documentation (page 58) but don't see
>> >         anything relevant.
>> >         I believe I am able to do this in the univariate case with
>> >         rugarch - is it
>> >         not possible in rmgarch?
>> >
>> >         Thanks for your help!
>> >
>> >                 [[alternative HTML version deleted]]
>> >
>> >         _______________________________________________
>> >         R-SIG-Finance at r-project.org
>> >         <mailto:R-SIG-Finance at r-project.org> mailing list
>> >         https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> >         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>> >         -- Subscriber-posting only. If you want to post, subscribe
>> first.
>> >         -- Also note that this is not the r-help list where general R
>> >         questions should go.
>> >
>> >
>> >     _______________________________________________
>> >     R-SIG-Finance at r-project.org <mailto:R-SIG-Finance at r-project.org>
>> >     mailing list
>> >     https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>> >     <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>> >     -- Subscriber-posting only. If you want to post, subscribe first.
>> >     -- Also note that this is not the r-help list where general R
>> >     questions should go.
>> >
>> >
>>
>>
>

	[[alternative HTML version deleted]]


From alexios at 4dscape.com  Sat Mar 25 00:05:05 2017
From: alexios at 4dscape.com (alexios galanos)
Date: Fri, 24 Mar 2017 18:05:05 -0500
Subject: [R-SIG-Finance] Simulating paths in rmgarch
In-Reply-To: <CAHRBD=a0G=CdweMCccZF7ARVLL7hZrvhwFjHBMucSDPVXYDvFg@mail.gmail.com>
References: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
	<07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>
	<CAHRBD=ZjU52svcevtGJvKsjhSn4dxuz9uNb2Y00ZO_ggLG+PbA@mail.gmail.com>
	<3de912c5-3ff7-b746-d4f7-6d0068f2ed8b@4dscape.com>
	<CAHRBD=Y4J+utGpd+f1iY_12LWMaFHhy3oB4pZAGjhCsmEWvQLg@mail.gmail.com>
	<6614826B-11AF-4691-A5EF-398FD26EF0C6@4dscape.com>
	<CAHRBD=a0G=CdweMCccZF7ARVLL7hZrvhwFjHBMucSDPVXYDvFg@mail.gmail.com>
Message-ID: <1a20c353-82e4-4c7c-1583-cbdbc3307528@4dscape.com>

Josh, I've pushed a fix to the repo. Try downloading now and
re-installing. Apparently the returned matrix was
constructed badly, aligning the vectors by row rather than by
column...good catch. I'll try to spend some time this
weekend conducting a general overview of the package which I've not
looked at for some time and also release to
CRAN soon the new version (of this and related) to also fix the issue
which has recently been cropping up on the
checks related to the registration of 'native routines'.

Cheers,

Alexios

On 24/03/2017 16:55, Josh Segal wrote:
> Will do, thanks again!
>
> On Fri, Mar 24, 2017 at 5:17 PM, Alexios Ghalanos <alexios at 4dscape.com
> <mailto:alexios at 4dscape.com>> wrote:
>
>     Yes...will check this weekend to see whether something may have
>     gone amiss in the AR/Constant simulation. Check my bitbucket repo
>     by next week to see if any changes were committed and reinstall
>     from there if so.
>
>
>     Alexios
>
>     On Mar 24, 2017, at 3:40 PM, Josh Segal <joshua.segal at gmail.com
>     <mailto:joshua.segal at gmail.com>> wrote:
>
>>     VAR seems ok, while AR and constant are not
>>
>>     Should I only use VAR with GOGARCH?
>>
>>     On Fri, Mar 24, 2017 at 3:43 PM, alexios galanos
>>     <alexios at 4dscape.com <mailto:alexios at 4dscape.com>> wrote:
>>
>>         Try using model="VAR" instead of "AR"....will check to see if
>>         something
>>         is amiss otherwise.
>>
>>         A.
>>
>>         On 24/03/2017 13:42, Josh Segal wrote:
>>         > Alexios,
>>         >
>>         > Thanks again for your help.
>>         > I'm getting some counterintuitive results with the
>>         seriesSim output.
>>         > When I run your exact example above and then compute
>>         > cor(sim at msim$seriesSim[[1]]), I get a correlation matrix
>>         that has
>>         > non-diagonal values close to zero (ranging from -0.10 to 0.08).
>>         > When I measure the correlation of the original data
>>         > (cor(dji30ret[,1:5])) I get values from 0.33 to 0.66.
>>         > Shouldn't the simulation demonstrate higher unconditional
>>         > correlations?  Am I misunderstanding something about the
>>         package, or
>>         > does this indicate a problem?
>>         >
>>         > Thanks,
>>         > Josh
>>         >
>>         > On Wed, Mar 22, 2017 at 4:06 PM, alexios galanos
>>         <alexios at 4dscape.com <mailto:alexios at 4dscape.com>
>>         > <mailto:alexios at 4dscape.com <mailto:alexios at 4dscape.com>>>
>>         wrote:
>>         >
>>         >     library(rmgarch)
>>         >     data("dji30ret")
>>         >     spec<-gogarchspec(mean.model=list(model="AR"),ica =
>>         "radical")
>>         >     fit=gogarchfit(spec,dji30ret[,1:5])
>>         >     sim=gogarchsim(fit,n.sim = 1000,m.sim=1,startMethod =
>>         >     "sample",rseed = 10)
>>         >
>>         >     head(sim at msim$seriesSim[[1]])
>>         >     str(sim at msim)
>>         >
>>         >     There are lots of examples and demos in the
>>         /inst/rmgarch.tests/
>>         >     folder of the source package.
>>         >
>>         >     Alexios
>>         >
>>         >
>>         >     On 3/22/2017 2:54 PM, Josh Segal wrote:
>>         >
>>         >         Hi everyone,
>>         >
>>         >         I'm trying to use the rmgarch package to estimate a
>>         >         multivariate GARCH
>>         >         model and then use those parameters to simulate paths
>>         >         forward.  I've gotten
>>         >         as far as creating a goGARCHsim object (for
>>         example), but
>>         >         can't figure out
>>         >         how to access the simulated returns.  I've looked
>>         through all
>>         >         the methods
>>         >         described in the documentation (page 58) but don't see
>>         >         anything relevant.
>>         >         I believe I am able to do this in the univariate
>>         case with
>>         >         rugarch - is it
>>         >         not possible in rmgarch?
>>         >
>>         >         Thanks for your help!
>>         >
>>         >                 [[alternative HTML version deleted]]
>>         >
>>         >         _______________________________________________
>>         >         R-SIG-Finance at r-project.org
>>         <mailto:R-SIG-Finance at r-project.org>
>>         >         <mailto:R-SIG-Finance at r-project.org
>>         <mailto:R-SIG-Finance at r-project.org>> mailing list
>>         >         https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>>         >       
>>          <https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>>
>>         >         -- Subscriber-posting only. If you want to post,
>>         subscribe first.
>>         >         -- Also note that this is not the r-help list where
>>         general R
>>         >         questions should go.
>>         >
>>         >
>>         >     _______________________________________________
>>         >     R-SIG-Finance at r-project.org
>>         <mailto:R-SIG-Finance at r-project.org>
>>         <mailto:R-SIG-Finance at r-project.org
>>         <mailto:R-SIG-Finance at r-project.org>>
>>         >     mailing list
>>         >     https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
>>         >     <https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>>
>>         >     -- Subscriber-posting only. If you want to post,
>>         subscribe first.
>>         >     -- Also note that this is not the r-help list where
>>         general R
>>         >     questions should go.
>>         >
>>         >
>>
>>
>


From scott.payseur at gmail.com  Sat Mar 25 01:19:42 2017
From: scott.payseur at gmail.com (Scott Payseur)
Date: Sat, 25 Mar 2017 00:19:42 +0000
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <CAPPM_gRvjdJkByyRLRnzQ0_q1+dHVMq57ZVeFmGLyBUOjZRCOA@mail.gmail.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
	<CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
	<eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
	<CAG1eqLaMxWPv5twUo15S3JF_-gKrjrUqOaiJ-d5L05d4M=R67Q@mail.gmail.com>
	<d34e8b3b-6fdb-71bb-7ee8-6bb2a4164e10@braverock.com>
	<CAPPM_gRvjdJkByyRLRnzQ0_q1+dHVMq57ZVeFmGLyBUOjZRCOA@mail.gmail.com>
Message-ID: <CAAvJH+_DYCs+x=U=qP43C+X7zwAgNGHGF5ujYbpfh7AMgttpdg@mail.gmail.com>

FYI- I have found it very useful to use random portfolios to verify that
your optimization is actually doing something. Particular mandates get so
bogged down by constraints (liquidity, box, sector, industry, Barbra risk,
etc) that every answer in the feasible set is basically the same.  (i.e. If
you are making money it's on the constraints.)

- Scott


On Tue, Mar 21, 2017 at 13:43 Joshua Ulrich <josh.m.ulrich at gmail.com> wrote:

> On Tue, Mar 21, 2017 at 5:41 AM, Brian G. Peterson <brian at braverock.com>
> wrote:
> >
> <snip>
> > To answer the question of whether Rcpp will help is somewhat complex. I'm
> > confident that some of the nested loops in the generation code will be
> sped
> > up by Rcpp.  It is possible that more efficient algorithms are available
> for
> > constructing the weight vectors.  A reason that this hasn't been a huge
> > priority though is that construction of the random portfolio matrix is
> > usually not the time limiter in a large optimization: your objective
> > function is.  I think it will be possible to improve the efficiency of
> this
> > step, though it is unclear how much of an impact this should have in
> > practice to a large and complicated numerically solved portfolio
> > optimization problem.
> >
> Brian has hinted at this, but I want to say it explicitly.   Whether
> or not moving to compiled code is worth it is mostly an empirical
> question.  And it's difficult to do more that speculate, unless you
> have profiling data.  So I would strongly encourage you to profile
> your optimization before you change any code.  I would be happy to
> help review the profiling output.
>
> > Regards,
> >
> > Brian
> >
> >
> <snip>
> >
> >
> > --
> > Brian G. Peterson
> > http://braverock.com/brian/
> > Ph: 773-459-4973
> > IM: bgpbraverock
> >
> > _______________________________________________
> > R-SIG-Finance at r-project.org mailing list
> > https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> > -- Subscriber-posting only. If you want to post, subscribe first.
> > -- Also note that this is not the r-help list where general R questions
> > should go.
>
>
>
> --
> Joshua Ulrich  |  about.me/joshuaulrich
> FOSS Trading  |  www.fosstrading.com
> R/Finance 2017 | www.rinfinance.com
>
> _______________________________________________
> R-SIG-Finance at r-project.org mailing list
> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> -- Subscriber-posting only. If you want to post, subscribe first.
> -- Also note that this is not the r-help list where general R questions
> should go.
>
-- 
Scott Payseur

	[[alternative HTML version deleted]]


From patrick at burns-stat.com  Sun Mar 26 18:19:46 2017
From: patrick at burns-stat.com (Patrick Burns)
Date: Sun, 26 Mar 2017 17:19:46 +0100
Subject: [R-SIG-Finance] random portfolios
In-Reply-To: <eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
References: <CAG1eqLZm9ZrTgjMBL0FL8LUQXLoYffibR0CKOnLA96Fu5O_N0g@mail.gmail.com>
	<1490037467.6518.53.camel@braverock.com>
	<CAG1eqLbvr4S4tXmu++6PUxNpGUBRc4LeU_sKk7T+=hhZqExgWg@mail.gmail.com>
	<CAEESW=XYBrGbXNVKGA7WPKrVOEkUa1xU_9AOk1tRasWZULUVsA@mail.gmail.com>
	<CAG1eqLb7PUwmvRSPfzhErAGY+6=4XB=fca-J=W4rH6KmvGri0w@mail.gmail.com>
	<eb168964-8075-e473-234d-f454ca4c6e8c@braverock.com>
Message-ID: <3b937123-bb02-342d-db07-9455179a78c8@burns-stat.com>

I'm coming significantly late to the thread, but I'll throw in a bit of 
my view on the required number of random portfolios to generate.

I think it depends a whole lot on what you are doing.

If you are essentially looking for a p-value, then you'll need a few 
hundred at most.  You shouldn't really care if the p-value is 4.3% 
versus 4.1%, and if you're looking at tiny p-values, then algorithmic 
limitations and the subtleties of what "random" means in the particular 
situation are going to start to have big impacts.

If you are looking at densities, then something like 10,000 portfolios 
is not terrible.  If you are looking at tails, then you want lots more. 
But again, you have lots of model risk in the tails.

Pat

On 20/03/2017 23:21, Brian G. Peterson wrote:
> For this type of problem, I would probably generate one set of random
> portfolios and just reuse that set of feasible portfolios...  My usual
> rule is n-assets + 1-2k feasible portfolios.  You can get a better
> number e.g. from sampling theory, but this should be enough.
>
> Once you have this weights matrix rp, you only need to regenerate rp if
> your universe changes.
>
> Still interested in a more efficient implementation, of course, or we
> can work with you to see if we can find resources to work on it, e.g.
> from academia.
>
> Regards,
>
> Brian
>
> On 03/20/2017 05:28 PM, Kevin Dhingra wrote:
>> Hi Ross,
>>
>> Sure. Even though I have not profiled the bottlenecks quite in detail
>> as of
>> yet, i will give you a decent idea of the problem I am working with. I
>> can
>> have multiple indices with as much as 2000 assets with group, position
>> and
>> turnover limits (Not sure if i can increase the speed by removing
>> constraints and doing rejection sampling later). In order to generate a
>> daily possible set for the market in this case, I was playing around with
>> ~4-5 thousand permutations. Also I think I will end up using the "sample"
>> method because of the type of constraints we have and as you already have
>> mentioned that method is the slowest (takes about 30 times the time using
>> "simplex" for the same constraints). Adding box and position limit
>> constraints are causing it to run a bit slower (but its not a big
>> difference). I can always provide a more thorough analysis of the
>> potential
>> bottlenecks with a lot more detail when I have a chance to start
>> working on
>> translating it to cpp
>>
>> Thank you,
>>
>> On Mon, Mar 20, 2017 at 4:04 PM, Ross Bennett <rossbennett34 at gmail.com>
>> wrote:
>>
>>> Kevin,
>>>
>>> Can you give us a sense of the number of assets in the portfolio and
>>> the constraints? That will help us understand where the potential
>>> bottlenecks are in the random portfolio generation. For example,
>>> generating a set of random portfolios for box and weight constraints
>>> if relatively fast, but adding group or position limit constraints
>>> makes the algorithm more complicated and slower.
>>>
>>> Thanks,
>>> Ross
>>>
>>>
>>> On Mon, Mar 20, 2017 at 2:35 PM, Kevin Dhingra
>>> <kevin.dhingra at appliedacademics.com> wrote:
>>>> Brian,
>>>>
>>>> Thank you for a quick reply. I will soon be working on that problem and
>>>> from what I have played with so far, it is unlikely that for our
>>>> example
>>>> ~2k portfolios will be enough (really hoping it would) to get a good
>>> sense
>>>> of the feasible space and seems like I need to implement an Rcpp
>>>> version
>>> of
>>>> the random portfolios function. I will be happy to collaborate and
>>>> share
>>> my
>>>> code once i get a decent handle on it locally for the purposes of our
>>>> current project.
>>>>
>>>> Regards,
>>>> Kshitij Dhingra
>>>>
>>>>
>>>>
>>>> On Mon, Mar 20, 2017 at 3:17 PM, Brian G. Peterson
>>>> <brian at braverock.com>
>>>> wrote:
>>>>
>>>>> On Mon, 2017-03-20 at 15:09 -0400, Kevin Dhingra wrote:
>>>>>> I have been using the random_portfolios function from the
>>>>>> `PortfolioAnalytics` package to simulate the range of possibilities
>>>>>> for return paths at each step under various portfolio constraints /
>>>>>> mandates for evaluating mutual fund managers. As more managers are
>>>>>> added to the universe, however, and more simulations are needed, the
>>>>>> pure R implementations get pretty heavy and hard to scale. I was
>>>>>> wondering if there has been any work out there thus far on
>>>>>> implementing any of the three random portfolio generation methods
>>>>>> (sample, simplex, and grid search) at a lower level, using something
>>>>>> like `Rcpp` to enhance the efficiency of these algorithms?
>>>>>
>>>>> We've discussed it, but I can't say that it is terribly high on our
>>>>> list of priorities.
>>>>>
>>>>> In most cases, no more than 1-2k portfolios should be required to
>>>>> get a
>>>>> fair view of the feasible space given your constraints and objectives.
>>>>>
>>>>> We'd be happy to work with you if you want to craft a patch to use
>>>>> C or
>>>>> Rcpp for this.
>>>>>
>>>>> Regards,
>>>>>
>>>>> Brian
>>>>>
>>>>
>>>>
>>>>
>>>> --
>>>> Kshitij Dhingra
>>>> Applied Academics LLC
>>>> Office: +1.917.262.0516
>>>> Mobile: +1.206.696.5945
>>>> Email: kshitij.dhingra at appliedacademics.com
>>>> Website: http://www.AppliedAcademics.com
>>>>
>>>>         [[alternative HTML version deleted]]
>>>>
>>>> _______________________________________________
>>>> R-SIG-Finance at r-project.org mailing list
>>>> https://stat.ethz.ch/mailman/listinfo/r-sig-finance
>>>> -- Subscriber-posting only. If you want to post, subscribe first.
>>>> -- Also note that this is not the r-help list where general R questions
>>> should go.
>>>
>>
>>
>>
>
>

-- 
Patrick Burns
patrick at burns-stat.com
http://www.burns-stat.com
http://www.portfolioprobe.com/blog
twitter: @burnsstat @portfolioprobe


From joshua.segal at gmail.com  Mon Mar 27 20:34:32 2017
From: joshua.segal at gmail.com (Josh Segal)
Date: Mon, 27 Mar 2017 18:34:32 +0000
Subject: [R-SIG-Finance] Simulating paths in rmgarch
In-Reply-To: <1a20c353-82e4-4c7c-1583-cbdbc3307528@4dscape.com>
References: <CAHRBD=aoLBas+h+8fqV2dfgcePGLnsVRawvvPP9OxH3XU5RU7A@mail.gmail.com>
	<07ea1d60-f2e8-bdf3-8266-7a3ce5193f3f@4dscape.com>
	<CAHRBD=ZjU52svcevtGJvKsjhSn4dxuz9uNb2Y00ZO_ggLG+PbA@mail.gmail.com>
	<3de912c5-3ff7-b746-d4f7-6d0068f2ed8b@4dscape.com>
	<CAHRBD=Y4J+utGpd+f1iY_12LWMaFHhy3oB4pZAGjhCsmEWvQLg@mail.gmail.com>
	<6614826B-11AF-4691-A5EF-398FD26EF0C6@4dscape.com>
	<CAHRBD=a0G=CdweMCccZF7ARVLL7hZrvhwFjHBMucSDPVXYDvFg@mail.gmail.com>
	<1a20c353-82e4-4c7c-1583-cbdbc3307528@4dscape.com>
Message-ID: <CAHRBD=ZUNKy7bQ4fK_wD2nW8F_DgMnM9L-VRaS=tgFfaccixWg@mail.gmail.com>

The recent version works for me, thanks very much


On Fri, Mar 24, 2017 at 7:05 PM alexios galanos <alexios at 4dscape.com> wrote:

> Josh, I've pushed a fix to the repo. Try downloading now and
> re-installing. Apparently the returned matrix was
> constructed badly, aligning the vectors by row rather than by
> column...good catch. I'll try to spend some time this
> weekend conducting a general overview of the package which I've not
> looked at for some time and also release to
> CRAN soon the new version (of this and related) to also fix the issue
> which has recently been cropping up on the
> checks related to the registration of 'native routines'.
>
> Cheers,
>
> Alexios
>
> On 24/03/2017 16:55, Josh Segal wrote:
> > Will do, thanks again!
> >
> > On Fri, Mar 24, 2017 at 5:17 PM, Alexios Ghalanos <alexios at 4dscape.com
> > <mailto:alexios at 4dscape.com>> wrote:
> >
> >     Yes...will check this weekend to see whether something may have
> >     gone amiss in the AR/Constant simulation. Check my bitbucket repo
> >     by next week to see if any changes were committed and reinstall
> >     from there if so.
> >
> >
> >     Alexios
> >
> >     On Mar 24, 2017, at 3:40 PM, Josh Segal <joshua.segal at gmail.com
> >     <mailto:joshua.segal at gmail.com>> wrote:
> >
> >>     VAR seems ok, while AR and constant are not
> >>
> >>     Should I only use VAR with GOGARCH?
> >>
> >>     On Fri, Mar 24, 2017 at 3:43 PM, alexios galanos
> >>     <alexios at 4dscape.com <mailto:alexios at 4dscape.com>> wrote:
> >>
> >>         Try using model="VAR" instead of "AR"....will check to see if
> >>         something
> >>         is amiss otherwise.
> >>
> >>         A.
> >>
> >>         On 24/03/2017 13:42, Josh Segal wrote:
> >>         > Alexios,
> >>         >
> >>         > Thanks again for your help.
> >>         > I'm getting some counterintuitive results with the
> >>         seriesSim output.
> >>         > When I run your exact example above and then compute
> >>         > cor(sim at msim$seriesSim[[1]]), I get a correlation matrix
> >>         that has
> >>         > non-diagonal values close to zero (ranging from -0.10 to
> 0.08).
> >>         > When I measure the correlation of the original data
> >>         > (cor(dji30ret[,1:5])) I get values from 0.33 to 0.66.
> >>         > Shouldn't the simulation demonstrate higher unconditional
> >>         > correlations?  Am I misunderstanding something about the
> >>         package, or
> >>         > does this indicate a problem?
> >>         >
> >>         > Thanks,
> >>         > Josh
> >>         >
> >>         > On Wed, Mar 22, 2017 at 4:06 PM, alexios galanos
> >>         <alexios at 4dscape.com <mailto:alexios at 4dscape.com>
> >>         > <mailto:alexios at 4dscape.com <mailto:alexios at 4dscape.com>>>
> >>         wrote:
> >>         >
> >>         >     library(rmgarch)
> >>         >     data("dji30ret")
> >>         >     spec<-gogarchspec(mean.model=list(model="AR"),ica =
> >>         "radical")
> >>         >     fit=gogarchfit(spec,dji30ret[,1:5])
> >>         >     sim=gogarchsim(fit,n.sim = 1000,m.sim=1,startMethod =
> >>         >     "sample",rseed = 10)
> >>         >
> >>         >     head(sim at msim$seriesSim[[1]])
> >>         >     str(sim at msim)
> >>         >
> >>         >     There are lots of examples and demos in the
> >>         /inst/rmgarch.tests/
> >>         >     folder of the source package.
> >>         >
> >>         >     Alexios
> >>         >
> >>         >
> >>         >     On 3/22/2017 2:54 PM, Josh Segal wrote:
> >>         >
> >>         >         Hi everyone,
> >>         >
> >>         >         I'm trying to use the rmgarch package to estimate a
> >>         >         multivariate GARCH
> >>         >         model and then use those parameters to simulate paths
> >>         >         forward.  I've gotten
> >>         >         as far as creating a goGARCHsim object (for
> >>         example), but
> >>         >         can't figure out
> >>         >         how to access the simulated returns.  I've looked
> >>         through all
> >>         >         the methods
> >>         >         described in the documentation (page 58) but don't see
> >>         >         anything relevant.
> >>         >         I believe I am able to do this in the univariate
> >>         case with
> >>         >         rugarch - is it
> >>         >         not possible in rmgarch?
> >>         >
> >>         >         Thanks for your help!
> >>         >
> >>         >                 [[alternative HTML version deleted]]
> >>         >
> >>         >         _______________________________________________
> >>         >         R-SIG-Finance at r-project.org
> >>         <mailto:R-SIG-Finance at r-project.org>
> >>         >         <mailto:R-SIG-Finance at r-project.org
> >>         <mailto:R-SIG-Finance at r-project.org>> mailing list
> >>         >         https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> >>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
> >>         >
> >>          <https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> >>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>>
> >>         >         -- Subscriber-posting only. If you want to post,
> >>         subscribe first.
> >>         >         -- Also note that this is not the r-help list where
> >>         general R
> >>         >         questions should go.
> >>         >
> >>         >
> >>         >     _______________________________________________
> >>         >     R-SIG-Finance at r-project.org
> >>         <mailto:R-SIG-Finance at r-project.org>
> >>         <mailto:R-SIG-Finance at r-project.org
> >>         <mailto:R-SIG-Finance at r-project.org>>
> >>         >     mailing list
> >>         >     https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> >>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>
> >>         >     <https://stat.ethz.ch/mailman/listinfo/r-sig-finance
> >>         <https://stat.ethz.ch/mailman/listinfo/r-sig-finance>>
> >>         >     -- Subscriber-posting only. If you want to post,
> >>         subscribe first.
> >>         >     -- Also note that this is not the r-help list where
> >>         general R
> >>         >     questions should go.
> >>         >
> >>         >
> >>
> >>
> >
>
>

	[[alternative HTML version deleted]]


